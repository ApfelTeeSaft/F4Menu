#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KeyboardWidgetBP

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function KeyboardWidgetBP.KeyboardWidgetBP_C.OnHoveredKeyboardWidgetKey__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct KeyboardWidgetBP_C_OnHoveredKeyboardWidgetKey__DelegateSignature final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardWidgetBP_C_OnHoveredKeyboardWidgetKey__DelegateSignature) == 0x000008, "Wrong alignment on KeyboardWidgetBP_C_OnHoveredKeyboardWidgetKey__DelegateSignature");
static_assert(sizeof(KeyboardWidgetBP_C_OnHoveredKeyboardWidgetKey__DelegateSignature) == 0x000018, "Wrong size on KeyboardWidgetBP_C_OnHoveredKeyboardWidgetKey__DelegateSignature");
static_assert(offsetof(KeyboardWidgetBP_C_OnHoveredKeyboardWidgetKey__DelegateSignature, InKey) == 0x000000, "Member 'KeyboardWidgetBP_C_OnHoveredKeyboardWidgetKey__DelegateSignature::InKey' has a wrong offset!");

// Function KeyboardWidgetBP.KeyboardWidgetBP_C.ExecuteUbergraph_KeyboardWidgetBP
// 0x0020 (0x0020 - 0x0000)
struct KeyboardWidgetBP_C_ExecuteUbergraph_KeyboardWidgetBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_CustomEvent_InKey;                          // 0x0008(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(KeyboardWidgetBP_C_ExecuteUbergraph_KeyboardWidgetBP) == 0x000008, "Wrong alignment on KeyboardWidgetBP_C_ExecuteUbergraph_KeyboardWidgetBP");
static_assert(sizeof(KeyboardWidgetBP_C_ExecuteUbergraph_KeyboardWidgetBP) == 0x000020, "Wrong size on KeyboardWidgetBP_C_ExecuteUbergraph_KeyboardWidgetBP");
static_assert(offsetof(KeyboardWidgetBP_C_ExecuteUbergraph_KeyboardWidgetBP, EntryPoint) == 0x000000, "Member 'KeyboardWidgetBP_C_ExecuteUbergraph_KeyboardWidgetBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_ExecuteUbergraph_KeyboardWidgetBP, K2Node_CustomEvent_InKey) == 0x000008, "Member 'KeyboardWidgetBP_C_ExecuteUbergraph_KeyboardWidgetBP::K2Node_CustomEvent_InKey' has a wrong offset!");

// Function KeyboardWidgetBP.KeyboardWidgetBP_C.OnHoverKeyboardKey
// 0x0018 (0x0018 - 0x0000)
struct KeyboardWidgetBP_C_OnHoverKeyboardKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardWidgetBP_C_OnHoverKeyboardKey) == 0x000008, "Wrong alignment on KeyboardWidgetBP_C_OnHoverKeyboardKey");
static_assert(sizeof(KeyboardWidgetBP_C_OnHoverKeyboardKey) == 0x000018, "Wrong size on KeyboardWidgetBP_C_OnHoverKeyboardKey");
static_assert(offsetof(KeyboardWidgetBP_C_OnHoverKeyboardKey, InKey) == 0x000000, "Member 'KeyboardWidgetBP_C_OnHoverKeyboardKey::InKey' has a wrong offset!");

// Function KeyboardWidgetBP.KeyboardWidgetBP_C.HighlightKey
// 0x0038 (0x0038 - 0x0000)
struct KeyboardWidgetBP_C_HighlightKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bHighlight;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFocusHighlight;                                   // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKeyboardKey_C*                         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KeyboardWidgetBP_C_HighlightKey) == 0x000008, "Wrong alignment on KeyboardWidgetBP_C_HighlightKey");
static_assert(sizeof(KeyboardWidgetBP_C_HighlightKey) == 0x000038, "Wrong size on KeyboardWidgetBP_C_HighlightKey");
static_assert(offsetof(KeyboardWidgetBP_C_HighlightKey, InKey) == 0x000000, "Member 'KeyboardWidgetBP_C_HighlightKey::InKey' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_HighlightKey, bHighlight) == 0x000018, "Member 'KeyboardWidgetBP_C_HighlightKey::bHighlight' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_HighlightKey, bFocusHighlight) == 0x000019, "Member 'KeyboardWidgetBP_C_HighlightKey::bFocusHighlight' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_HighlightKey, ___int_Array_Index_Variable) == 0x00001C, "Member 'KeyboardWidgetBP_C_HighlightKey::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_HighlightKey, ___int_Loop_Counter_Variable) == 0x000020, "Member 'KeyboardWidgetBP_C_HighlightKey::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_HighlightKey, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'KeyboardWidgetBP_C_HighlightKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_HighlightKey, CallFunc_Array_Get_Item) == 0x000028, "Member 'KeyboardWidgetBP_C_HighlightKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_HighlightKey, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'KeyboardWidgetBP_C_HighlightKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_HighlightKey, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'KeyboardWidgetBP_C_HighlightKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_HighlightKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000035, "Member 'KeyboardWidgetBP_C_HighlightKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function KeyboardWidgetBP.KeyboardWidgetBP_C.SetGlobalSettings
// 0x02D0 (0x02D0 - 0x0000)
struct KeyboardWidgetBP_C_SetGlobalSettings final
{
public:
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor;                // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor;      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor;    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor;              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor;      // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor;    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_1;              // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_1;         // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_1;    // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_1;    // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_1;  // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_1;            // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_1;            // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_1;    // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_1;  // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_2;              // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_2;         // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_2;    // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_2;    // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_2;  // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_2;            // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_2;            // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_2;    // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_2;  // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_3;              // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_3;         // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_3;    // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_3;    // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_3;  // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_3;            // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_3;            // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_3;    // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_3;  // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_4;              // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_4;         // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_4;    // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_4;    // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_4;  // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_4;            // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_4;            // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_4;    // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_4;  // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardWidgetBP_C_SetGlobalSettings) == 0x000004, "Wrong alignment on KeyboardWidgetBP_C_SetGlobalSettings");
static_assert(sizeof(KeyboardWidgetBP_C_SetGlobalSettings) == 0x0002D0, "Wrong size on KeyboardWidgetBP_C_SetGlobalSettings");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor) == 0x000000, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor) == 0x000010, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor) == 0x000020, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor) == 0x000030, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor) == 0x000040, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor) == 0x000050, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor) == 0x000060, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor) == 0x000070, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor) == 0x000080, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_1) == 0x000090, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_1) == 0x0000A0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_1) == 0x0000B0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_1) == 0x0000C0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_1) == 0x0000D0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_1) == 0x0000E0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_1) == 0x0000F0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_1) == 0x000100, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_1) == 0x000110, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_2) == 0x000120, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_2) == 0x000130, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_2) == 0x000140, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_2) == 0x000150, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_2) == 0x000160, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_2) == 0x000170, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_2) == 0x000180, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_2) == 0x000190, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_2) == 0x0001A0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_3) == 0x0001B0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_3' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_3) == 0x0001C0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_3' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_3) == 0x0001D0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_3' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_3) == 0x0001E0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_3' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_3) == 0x0001F0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_3' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_3) == 0x000200, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_3' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_3) == 0x000210, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_3' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_3) == 0x000220, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_3' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_3) == 0x000230, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_3' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_4) == 0x000240, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_4' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_4) == 0x000250, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_4' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_4) == 0x000260, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_4' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_4) == 0x000270, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_4' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_4) == 0x000280, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_4' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_4) == 0x000290, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_4' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_4) == 0x0002A0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_4' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_4) == 0x0002B0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_4' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_4) == 0x0002C0, "Member 'KeyboardWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_4' has a wrong offset!");

// Function KeyboardWidgetBP.KeyboardWidgetBP_C.SetupKeyboardKeyArray
// 0x0080 (0x0080 - 0x0000)
struct KeyboardWidgetBP_C_SetupKeyboardKeyArray final
{
public:
	int32                                         ___int_Variable;                                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FKey& InKey)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FKey& InKey)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         ___int_Variable_1;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKeyboardKey_C*                         K2Node_DynamicCast_AsKeyboard_Key;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UKeyboardKey_C*                         K2Node_DynamicCast_AsKeyboard_Key_1;               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardWidgetBP_C_SetupKeyboardKeyArray) == 0x000008, "Wrong alignment on KeyboardWidgetBP_C_SetupKeyboardKeyArray");
static_assert(sizeof(KeyboardWidgetBP_C_SetupKeyboardKeyArray) == 0x000080, "Wrong size on KeyboardWidgetBP_C_SetupKeyboardKeyArray");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, ___int_Variable) == 0x000000, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::___int_Variable' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, ___int_Variable_1) == 0x000028, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, CallFunc_GetChildrenCount_ReturnValue) == 0x00002C, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, CallFunc_GetChildAt_ReturnValue) == 0x000030, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, K2Node_DynamicCast_AsKeyboard_Key) == 0x000040, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::K2Node_DynamicCast_AsKeyboard_Key' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000058, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, CallFunc_GetChildAt_ReturnValue_1) == 0x000060, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, CallFunc_GetChildrenCount_ReturnValue_1) == 0x000068, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, K2Node_DynamicCast_AsKeyboard_Key_1) == 0x000070, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::K2Node_DynamicCast_AsKeyboard_Key_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000079, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_SetupKeyboardKeyArray, CallFunc_Array_Add_ReturnValue_1) == 0x00007C, "Member 'KeyboardWidgetBP_C_SetupKeyboardKeyArray::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function KeyboardWidgetBP.KeyboardWidgetBP_C.ResetKeyboardVisualization
// 0x0020 (0x0020 - 0x0000)
struct KeyboardWidgetBP_C_ResetKeyboardVisualization final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKeyboardKey_C*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KeyboardWidgetBP_C_ResetKeyboardVisualization) == 0x000008, "Wrong alignment on KeyboardWidgetBP_C_ResetKeyboardVisualization");
static_assert(sizeof(KeyboardWidgetBP_C_ResetKeyboardVisualization) == 0x000020, "Wrong size on KeyboardWidgetBP_C_ResetKeyboardVisualization");
static_assert(offsetof(KeyboardWidgetBP_C_ResetKeyboardVisualization, ___int_Array_Index_Variable) == 0x000000, "Member 'KeyboardWidgetBP_C_ResetKeyboardVisualization::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_ResetKeyboardVisualization, ___int_Loop_Counter_Variable) == 0x000004, "Member 'KeyboardWidgetBP_C_ResetKeyboardVisualization::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_ResetKeyboardVisualization, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'KeyboardWidgetBP_C_ResetKeyboardVisualization::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_ResetKeyboardVisualization, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'KeyboardWidgetBP_C_ResetKeyboardVisualization::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_ResetKeyboardVisualization, CallFunc_Array_Get_Item) == 0x000010, "Member 'KeyboardWidgetBP_C_ResetKeyboardVisualization::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(KeyboardWidgetBP_C_ResetKeyboardVisualization, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'KeyboardWidgetBP_C_ResetKeyboardVisualization::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

