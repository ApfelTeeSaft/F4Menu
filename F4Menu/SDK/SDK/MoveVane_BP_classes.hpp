#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MoveVane_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MoveVane_BP.MoveVane_BP_C
// 0x00C8 (0x02E8 - 0x0220)
class AMoveVane_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          ACH_Box;                                           // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        __4__e0_Cue;                                       // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       RotaRoot;                                          // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SK_AK_Lance;                                       // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       FR_Root;                                           // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       BodyRoot;                                          // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             FR_RotatingMovement;                               // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FootRest;                                          // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Propeller_02;                                      // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Propeller_01;                                      // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Root;                                              // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Move_Alpha_ABE15EAD4E0EE3EFFFCAF2A7D9AD8BC6;       // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            Move__Direction_ABE15EAD4E0EE3EFFFCAF2A7D9AD8BC6;  // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Move;                                              // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         UP_Alpha_DA2CAF96485400C02ED3F79B0F2F7461;         // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            UP__Direction_DA2CAF96485400C02ED3F79B0F2F7461;    // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Up;                                                // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         RotaSpeed_Alpha_9B1FB0BA41834982E9B11F9B98F938F7;  // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            RotaSpeed__Direction_9B1FB0BA41834982E9B11F9B98F938F7; // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     RotaSpeed;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                FirstLocation;                                     // 0x02C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpLocation;                                        // 0x02CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x02D8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active_;                                           // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MoveVane_BP(int32 EntryPoint);
	void BndEvt__MoveVane_BP_ACH_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Stop();
	void Reset();
	void BndEvt__MoveVane_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Active();
	void OnSuccess_39F099644C42B007715773A499851243(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnFailure_39F099644C42B007715773A499851243(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnSuccess_52BA323245D072682FA5B9B94338B3DE();
	void OnFailure_52BA323245D072682FA5B9B94338B3DE();
	void Move__UpdateFunc();
	void Move__FinishedFunc();
	void Up__UpdateFunc();
	void Up__FinishedFunc();
	void RotaSpeed__UpdateFunc();
	void RotaSpeed__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MoveVane_BP_C">();
	}
	static class AMoveVane_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMoveVane_BP_C>();
	}
};
static_assert(alignof(AMoveVane_BP_C) == 0x000008, "Wrong alignment on AMoveVane_BP_C");
static_assert(sizeof(AMoveVane_BP_C) == 0x0002E8, "Wrong size on AMoveVane_BP_C");
static_assert(offsetof(AMoveVane_BP_C, UberGraphFrame) == 0x000220, "Member 'AMoveVane_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, ACH_Box) == 0x000228, "Member 'AMoveVane_BP_C::ACH_Box' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, __4__e0_Cue) == 0x000230, "Member 'AMoveVane_BP_C::__4__e0_Cue' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, RotaRoot) == 0x000238, "Member 'AMoveVane_BP_C::RotaRoot' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, SK_AK_Lance) == 0x000240, "Member 'AMoveVane_BP_C::SK_AK_Lance' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, FR_Root) == 0x000248, "Member 'AMoveVane_BP_C::FR_Root' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, BodyRoot) == 0x000250, "Member 'AMoveVane_BP_C::BodyRoot' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, Box) == 0x000258, "Member 'AMoveVane_BP_C::Box' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, FR_RotatingMovement) == 0x000260, "Member 'AMoveVane_BP_C::FR_RotatingMovement' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, RotatingMovement) == 0x000268, "Member 'AMoveVane_BP_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, FootRest) == 0x000270, "Member 'AMoveVane_BP_C::FootRest' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, Propeller_02) == 0x000278, "Member 'AMoveVane_BP_C::Propeller_02' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, Propeller_01) == 0x000280, "Member 'AMoveVane_BP_C::Propeller_01' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, Root) == 0x000288, "Member 'AMoveVane_BP_C::Root' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, Move_Alpha_ABE15EAD4E0EE3EFFFCAF2A7D9AD8BC6) == 0x000290, "Member 'AMoveVane_BP_C::Move_Alpha_ABE15EAD4E0EE3EFFFCAF2A7D9AD8BC6' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, Move__Direction_ABE15EAD4E0EE3EFFFCAF2A7D9AD8BC6) == 0x000294, "Member 'AMoveVane_BP_C::Move__Direction_ABE15EAD4E0EE3EFFFCAF2A7D9AD8BC6' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, Move) == 0x000298, "Member 'AMoveVane_BP_C::Move' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, UP_Alpha_DA2CAF96485400C02ED3F79B0F2F7461) == 0x0002A0, "Member 'AMoveVane_BP_C::UP_Alpha_DA2CAF96485400C02ED3F79B0F2F7461' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, UP__Direction_DA2CAF96485400C02ED3F79B0F2F7461) == 0x0002A4, "Member 'AMoveVane_BP_C::UP__Direction_DA2CAF96485400C02ED3F79B0F2F7461' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, Up) == 0x0002A8, "Member 'AMoveVane_BP_C::Up' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, RotaSpeed_Alpha_9B1FB0BA41834982E9B11F9B98F938F7) == 0x0002B0, "Member 'AMoveVane_BP_C::RotaSpeed_Alpha_9B1FB0BA41834982E9B11F9B98F938F7' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, RotaSpeed__Direction_9B1FB0BA41834982E9B11F9B98F938F7) == 0x0002B4, "Member 'AMoveVane_BP_C::RotaSpeed__Direction_9B1FB0BA41834982E9B11F9B98F938F7' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, RotaSpeed) == 0x0002B8, "Member 'AMoveVane_BP_C::RotaSpeed' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, FirstLocation) == 0x0002C0, "Member 'AMoveVane_BP_C::FirstLocation' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, UpLocation) == 0x0002CC, "Member 'AMoveVane_BP_C::UpLocation' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, EndLocation) == 0x0002D8, "Member 'AMoveVane_BP_C::EndLocation' has a wrong offset!");
static_assert(offsetof(AMoveVane_BP_C, Active_) == 0x0002E4, "Member 'AMoveVane_BP_C::Active_' has a wrong offset!");

}

