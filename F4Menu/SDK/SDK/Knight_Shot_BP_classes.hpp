#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Knight_Shot_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Knight_Shot_BP.Knight_Shot_BP_C
// 0x0038 (0x0258 - 0x0220)
class AKnight_Shot_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       WaterDetect;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Adam_Armored;                                   // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shape_Capsule;                                     // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Spawn_Location;                                    // 0x0248(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaterShot_;                                        // 0x0254(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Knight_Shot_BP(int32 EntryPoint);
	void BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Knight_Shot_BP_C">();
	}
	static class AKnight_Shot_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AKnight_Shot_BP_C>();
	}
};
static_assert(alignof(AKnight_Shot_BP_C) == 0x000008, "Wrong alignment on AKnight_Shot_BP_C");
static_assert(sizeof(AKnight_Shot_BP_C) == 0x000258, "Wrong size on AKnight_Shot_BP_C");
static_assert(offsetof(AKnight_Shot_BP_C, UberGraphFrame) == 0x000220, "Member 'AKnight_Shot_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AKnight_Shot_BP_C, WaterDetect) == 0x000228, "Member 'AKnight_Shot_BP_C::WaterDetect' has a wrong offset!");
static_assert(offsetof(AKnight_Shot_BP_C, SK_Adam_Armored) == 0x000230, "Member 'AKnight_Shot_BP_C::SK_Adam_Armored' has a wrong offset!");
static_assert(offsetof(AKnight_Shot_BP_C, Shape_Capsule) == 0x000238, "Member 'AKnight_Shot_BP_C::Shape_Capsule' has a wrong offset!");
static_assert(offsetof(AKnight_Shot_BP_C, ProjectileMovement) == 0x000240, "Member 'AKnight_Shot_BP_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(AKnight_Shot_BP_C, Spawn_Location) == 0x000248, "Member 'AKnight_Shot_BP_C::Spawn_Location' has a wrong offset!");
static_assert(offsetof(AKnight_Shot_BP_C, WaterShot_) == 0x000254, "Member 'AKnight_Shot_BP_C::WaterShot_' has a wrong offset!");

}

