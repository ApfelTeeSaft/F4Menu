#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EpicLeaderboardFrame

#include "Basic.hpp"

#include "EpicLeaderboardFrame_classes.hpp"
#include "EpicLeaderboardFrame_parameters.hpp"


namespace SDK
{

// Function EpicLeaderboardFrame.EpicLeaderboardFrame_C.ExecuteUbergraph_EpicLeaderboardFrame
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEpicLeaderboardFrame_C::ExecuteUbergraph_EpicLeaderboardFrame(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicLeaderboardFrame_C", "ExecuteUbergraph_EpicLeaderboardFrame");

	Params::EpicLeaderboardFrame_C_ExecuteUbergraph_EpicLeaderboardFrame Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EpicLeaderboardFrame.EpicLeaderboardFrame_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UEpicLeaderboardFrame_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicLeaderboardFrame_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EpicLeaderboardFrame.EpicLeaderboardFrame_C.UpdateScores
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FEpicLeaderboardEntry>    Leaderboard_Entries                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEpicLeaderboardEntry            SpotlightEntry                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class FString                           HighlightUser                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UClass*                           Param_EntryClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEpicLeaderboardFrame_C::UpdateScores(TArray<struct FEpicLeaderboardEntry>& Leaderboard_Entries, const struct FEpicLeaderboardEntry& SpotlightEntry, const class FString& HighlightUser, class UClass* Param_EntryClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicLeaderboardFrame_C", "UpdateScores");

	Params::EpicLeaderboardFrame_C_UpdateScores Parms{};

	Parms.Leaderboard_Entries = std::move(Leaderboard_Entries);
	Parms.SpotlightEntry = std::move(SpotlightEntry);
	Parms.HighlightUser = std::move(HighlightUser);
	Parms.Param_EntryClass = Param_EntryClass;

	UObject::ProcessEvent(Func, &Parms);

	Leaderboard_Entries = std::move(Parms.Leaderboard_Entries);
}


// Function EpicLeaderboardFrame.EpicLeaderboardFrame_C.StartLoadingAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UEpicLeaderboardFrame_C::StartLoadingAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicLeaderboardFrame_C", "StartLoadingAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EpicLeaderboardFrame.EpicLeaderboardFrame_C.StopLoadingAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UEpicLeaderboardFrame_C::StopLoadingAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicLeaderboardFrame_C", "StopLoadingAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EpicLeaderboardFrame.EpicLeaderboardFrame_C.Score_ModeCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UEpicLeaderboardFrame_C::Score_ModeCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EpicLeaderboardFrame_C", "Score_ModeCheck");

	Params::EpicLeaderboardFrame_C_Score_ModeCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

