#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Cannon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Cannon.BP_Cannon_C
// 0x0048 (0x0268 - 0x0220)
class ABP_Cannon_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CannonMesh;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOn;                                              // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BulletSpeed;                                       // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FiringDelay;                                       // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileRadius;                                  // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseGravityForProjectiles;                          // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CannonMaterialOverride;                            // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     BulletMaterialOverride;                            // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Cannon(int32 EntryPoint);
	void Trigger_Fire();
	void Trigger_FireStop();
	void Fire_once();
	void FireProjectile();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void Toggle_on_or_Off();
	void CannonMatOverride(class UMaterialInterface* Material);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Cannon_C">();
	}
	static class ABP_Cannon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Cannon_C>();
	}
};
static_assert(alignof(ABP_Cannon_C) == 0x000008, "Wrong alignment on ABP_Cannon_C");
static_assert(sizeof(ABP_Cannon_C) == 0x000268, "Wrong size on ABP_Cannon_C");
static_assert(offsetof(ABP_Cannon_C, UberGraphFrame) == 0x000220, "Member 'ABP_Cannon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Cannon_C, Arrow) == 0x000228, "Member 'ABP_Cannon_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_Cannon_C, CannonMesh) == 0x000230, "Member 'ABP_Cannon_C::CannonMesh' has a wrong offset!");
static_assert(offsetof(ABP_Cannon_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_Cannon_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Cannon_C, IsOn) == 0x000240, "Member 'ABP_Cannon_C::IsOn' has a wrong offset!");
static_assert(offsetof(ABP_Cannon_C, BulletSpeed) == 0x000244, "Member 'ABP_Cannon_C::BulletSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Cannon_C, FiringDelay) == 0x000248, "Member 'ABP_Cannon_C::FiringDelay' has a wrong offset!");
static_assert(offsetof(ABP_Cannon_C, ProjectileRadius) == 0x00024C, "Member 'ABP_Cannon_C::ProjectileRadius' has a wrong offset!");
static_assert(offsetof(ABP_Cannon_C, UseGravityForProjectiles) == 0x000250, "Member 'ABP_Cannon_C::UseGravityForProjectiles' has a wrong offset!");
static_assert(offsetof(ABP_Cannon_C, CannonMaterialOverride) == 0x000258, "Member 'ABP_Cannon_C::CannonMaterialOverride' has a wrong offset!");
static_assert(offsetof(ABP_Cannon_C, BulletMaterialOverride) == 0x000260, "Member 'ABP_Cannon_C::BulletMaterialOverride' has a wrong offset!");

}

