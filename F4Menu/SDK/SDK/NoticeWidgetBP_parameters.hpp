#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NoticeWidgetBP

#include "Basic.hpp"


namespace SDK::Params
{

// Function NoticeWidgetBP.NoticeWidgetBP_C.ExecuteUbergraph_NoticeWidgetBP
// 0x0070 (0x0070 - 0x0000)
struct NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMainMenuOverviewWidgetBP_C*>    CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         ___int_Variable;                                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMainMenuOverviewWidgetBP_C*            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateToMenu;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateFromMenu_1;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateFromMenu;                     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsGamepadBeingUsed;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USteamMulti_GameInstance_C*             K2Node_DynamicCast_AsSteam_Multi_Game_Instance;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP) == 0x000008, "Wrong alignment on NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP");
static_assert(sizeof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP) == 0x000070, "Wrong size on NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, EntryPoint) == 0x000000, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, ___int_Variable) == 0x000018, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::___int_Variable' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, CallFunc_Array_Get_Item) == 0x000028, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, K2Node_Event_NavigateToMenu) == 0x000030, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::K2Node_Event_NavigateToMenu' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, K2Node_Event_NavigateFromMenu_1) == 0x000038, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::K2Node_Event_NavigateFromMenu_1' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, K2Node_Event_IsDesignTime) == 0x000040, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, K2Node_Event_NavigateFromMenu) == 0x000048, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::K2Node_Event_NavigateFromMenu' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, K2Node_Event_bIsGamepadBeingUsed) == 0x000050, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::K2Node_Event_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, CallFunc_GetGameInstance_ReturnValue) == 0x000058, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, K2Node_DynamicCast_AsSteam_Multi_Game_Instance) == 0x000060, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::K2Node_DynamicCast_AsSteam_Multi_Game_Instance' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'NoticeWidgetBP_C_ExecuteUbergraph_NoticeWidgetBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function NoticeWidgetBP.NoticeWidgetBP_C.OnNavigationEnter
// 0x0010 (0x0010 - 0x0000)
struct NoticeWidgetBP_C_OnNavigationEnter final
{
public:
	class UInteractableMenuWidgetBP_C*            NavigateFromMenu;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_bIsGamepadBeingUsed;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NoticeWidgetBP_C_OnNavigationEnter) == 0x000008, "Wrong alignment on NoticeWidgetBP_C_OnNavigationEnter");
static_assert(sizeof(NoticeWidgetBP_C_OnNavigationEnter) == 0x000010, "Wrong size on NoticeWidgetBP_C_OnNavigationEnter");
static_assert(offsetof(NoticeWidgetBP_C_OnNavigationEnter, NavigateFromMenu) == 0x000000, "Member 'NoticeWidgetBP_C_OnNavigationEnter::NavigateFromMenu' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_OnNavigationEnter, Param_bIsGamepadBeingUsed) == 0x000008, "Member 'NoticeWidgetBP_C_OnNavigationEnter::Param_bIsGamepadBeingUsed' has a wrong offset!");

// Function NoticeWidgetBP.NoticeWidgetBP_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct NoticeWidgetBP_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NoticeWidgetBP_C_PreConstruct) == 0x000001, "Wrong alignment on NoticeWidgetBP_C_PreConstruct");
static_assert(sizeof(NoticeWidgetBP_C_PreConstruct) == 0x000001, "Wrong size on NoticeWidgetBP_C_PreConstruct");
static_assert(offsetof(NoticeWidgetBP_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'NoticeWidgetBP_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function NoticeWidgetBP.NoticeWidgetBP_C.OnNavigationExit
// 0x0010 (0x0010 - 0x0000)
struct NoticeWidgetBP_C_OnNavigationExit final
{
public:
	class UInteractableMenuWidgetBP_C*            NavigateToMenu;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            NavigateFromMenu;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NoticeWidgetBP_C_OnNavigationExit) == 0x000008, "Wrong alignment on NoticeWidgetBP_C_OnNavigationExit");
static_assert(sizeof(NoticeWidgetBP_C_OnNavigationExit) == 0x000010, "Wrong size on NoticeWidgetBP_C_OnNavigationExit");
static_assert(offsetof(NoticeWidgetBP_C_OnNavigationExit, NavigateToMenu) == 0x000000, "Member 'NoticeWidgetBP_C_OnNavigationExit::NavigateToMenu' has a wrong offset!");
static_assert(offsetof(NoticeWidgetBP_C_OnNavigationExit, NavigateFromMenu) == 0x000008, "Member 'NoticeWidgetBP_C_OnNavigationExit::NavigateFromMenu' has a wrong offset!");

}

