#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UpDownBalde_Trap_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass UpDownBalde_Trap_BP.UpDownBalde_Trap_BP_C
// 0x0068 (0x0288 - 0x0220)
class AUpDownBalde_Trap_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        One0______Cue;                                     // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SawBlade;                                          // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             Blade_Rotating;                                    // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Root;                                              // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       RotaRoot;                                          // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Move_Alpha_CC0FDD4A4F8276835D16CC8FAFF8B0B3;       // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            Move__Direction_CC0FDD4A4F8276835D16CC8FAFF8B0B3;  // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Move;                                              // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FRotator                               Rotation_Rate;                                     // 0x0260(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                DefaultLocation;                                   // 0x026C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveLocation;                                      // 0x0278(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay;                                             // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UpDownBalde_Trap_BP(int32 EntryPoint);
	void Stop();
	void BndEvt__UpDownBalde_Trap_BP_SM_Axe_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Active();
	void Move__EventReset__EventFunc();
	void Move__UpdateFunc();
	void Move__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UpDownBalde_Trap_BP_C">();
	}
	static class AUpDownBalde_Trap_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUpDownBalde_Trap_BP_C>();
	}
};
static_assert(alignof(AUpDownBalde_Trap_BP_C) == 0x000008, "Wrong alignment on AUpDownBalde_Trap_BP_C");
static_assert(sizeof(AUpDownBalde_Trap_BP_C) == 0x000288, "Wrong size on AUpDownBalde_Trap_BP_C");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, UberGraphFrame) == 0x000220, "Member 'AUpDownBalde_Trap_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, One0______Cue) == 0x000228, "Member 'AUpDownBalde_Trap_BP_C::One0______Cue' has a wrong offset!");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, SawBlade) == 0x000230, "Member 'AUpDownBalde_Trap_BP_C::SawBlade' has a wrong offset!");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, Blade_Rotating) == 0x000238, "Member 'AUpDownBalde_Trap_BP_C::Blade_Rotating' has a wrong offset!");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, Root) == 0x000240, "Member 'AUpDownBalde_Trap_BP_C::Root' has a wrong offset!");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, RotaRoot) == 0x000248, "Member 'AUpDownBalde_Trap_BP_C::RotaRoot' has a wrong offset!");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, Move_Alpha_CC0FDD4A4F8276835D16CC8FAFF8B0B3) == 0x000250, "Member 'AUpDownBalde_Trap_BP_C::Move_Alpha_CC0FDD4A4F8276835D16CC8FAFF8B0B3' has a wrong offset!");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, Move__Direction_CC0FDD4A4F8276835D16CC8FAFF8B0B3) == 0x000254, "Member 'AUpDownBalde_Trap_BP_C::Move__Direction_CC0FDD4A4F8276835D16CC8FAFF8B0B3' has a wrong offset!");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, Move) == 0x000258, "Member 'AUpDownBalde_Trap_BP_C::Move' has a wrong offset!");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, Rotation_Rate) == 0x000260, "Member 'AUpDownBalde_Trap_BP_C::Rotation_Rate' has a wrong offset!");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, DefaultLocation) == 0x00026C, "Member 'AUpDownBalde_Trap_BP_C::DefaultLocation' has a wrong offset!");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, MoveLocation) == 0x000278, "Member 'AUpDownBalde_Trap_BP_C::MoveLocation' has a wrong offset!");
static_assert(offsetof(AUpDownBalde_Trap_BP_C, Delay) == 0x000284, "Member 'AUpDownBalde_Trap_BP_C::Delay' has a wrong offset!");

}

