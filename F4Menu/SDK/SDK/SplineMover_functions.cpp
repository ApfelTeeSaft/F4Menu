#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SplineMover

#include "Basic.hpp"

#include "SplineMover_classes.hpp"
#include "SplineMover_parameters.hpp"


namespace SDK
{

// Function SplineMover.SplineMover_C.ExecuteUbergraph_SplineMover
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASplineMover_C::ExecuteUbergraph_SplineMover(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "ExecuteUbergraph_SplineMover");

	Params::SplineMover_C_ExecuteUbergraph_SplineMover Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SplineMover.SplineMover_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ASplineMover_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SplineMover.SplineMover_C.BlueprintConstruct
// (BlueprintCallable, BlueprintEvent)

void ASplineMover_C::BlueprintConstruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "BlueprintConstruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SplineMover.SplineMover_C.MoveEvent
// (BlueprintCallable, BlueprintEvent)

void ASplineMover_C::MoveEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "MoveEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SplineMover.SplineMover_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASplineMover_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "ReceiveTick");

	Params::SplineMover_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SplineMover.SplineMover_C.PlayMovementSound
// (BlueprintCallable, BlueprintEvent)

void ASplineMover_C::PlayMovementSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "PlayMovementSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SplineMover.SplineMover_C.AutoMove
// (BlueprintCallable, BlueprintEvent)

void ASplineMover_C::AutoMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "AutoMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SplineMover.SplineMover_C.MoveObject
// (BlueprintCallable, BlueprintEvent)

void ASplineMover_C::MoveObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "MoveObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SplineMover.SplineMover_C.Active
// (BlueprintCallable, BlueprintEvent)

void ASplineMover_C::Active()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "Active");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SplineMover.SplineMover_C.Stop
// (BlueprintCallable, BlueprintEvent)

void ASplineMover_C::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SplineMover.SplineMover_C.Cycle
// (BlueprintCallable, BlueprintEvent)

void ASplineMover_C::Cycle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "Cycle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SplineMover.SplineMover_C.SpecifiedMoveEvent
// (BlueprintCallable, BlueprintEvent)

void ASplineMover_C::SpecifiedMoveEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "SpecifiedMoveEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SplineMover.SplineMover_C.CycleForward
// (BlueprintCallable, BlueprintEvent)

void ASplineMover_C::CycleForward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "CycleForward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SplineMover.SplineMover_C.CycleBack
// (BlueprintCallable, BlueprintEvent)

void ASplineMover_C::CycleBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "CycleBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SplineMover.SplineMover_C.BndEvt__StaticMesh_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ASplineMover_C::BndEvt__StaticMesh_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "BndEvt__StaticMesh_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");

	Params::SplineMover_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SplineMover.SplineMover_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ASplineMover_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SplineMover_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

