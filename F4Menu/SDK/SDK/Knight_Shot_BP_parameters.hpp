#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Knight_Shot_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Knight_Shot_BP.Knight_Shot_BP_C.ExecuteUbergraph_Knight_Shot_BP
// 0x0300 (0x0300 - 0x0000)
struct Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Has_Been_Initd_Variable;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_IsClosed_Variable;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AALTF4_Solo_GM_C*                       K2Node_DynamicCast_AsALTF4_Solo_GM;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ALTF4_Pawn_SoloPlay_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ALTF4_Chick_Pawn_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x00B0(0x0010)(ReferenceParm)
	class ABP_ALTF4_Chick_Pawn_C*                 CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x00F4(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x01B0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0260(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWaterDie_BP_C*                         K2Node_DynamicCast_AsWater_Die_BP;                 // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP) == 0x000010, "Wrong alignment on Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP");
static_assert(sizeof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP) == 0x000300, "Wrong size on Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, EntryPoint) == 0x000000, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, ___int_Variable) == 0x000004, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::___int_Variable' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, ___bool_Has_Been_Initd_Variable) == 0x000008, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::___bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, ___bool_IsClosed_Variable) == 0x000010, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::___bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000020, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_GetGameMode_ReturnValue) == 0x000030, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_BreakVector_X) == 0x000038, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_BreakVector_Y) == 0x00003C, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_BreakVector_Z) == 0x000040, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_DynamicCast_AsALTF4_Solo_GM) == 0x000048, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_DynamicCast_AsALTF4_Solo_GM' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000B0, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_HitComponent) == 0x0000D0, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_OtherActor_2) == 0x0000D8, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_OtherComp_2) == 0x0000E0, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0000E8, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_Hit) == 0x0000F4, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000180, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000190, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000198, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0001A0, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0001A8, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x0001AC, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_SweepResult_1) == 0x0001B0, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000240, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000248, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000250, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000258, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x00025C, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000260, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_DynamicCast_AsWater_Die_BP) == 0x0002F0, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_DynamicCast_AsWater_Die_BP' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP, K2Node_DynamicCast_bSuccess_1) == 0x0002F8, "Member 'Knight_Shot_BP_C_ExecuteUbergraph_Knight_Shot_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Knight_Shot_BP.Knight_Shot_BP_C.BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_WaterDetect_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Knight_Shot_BP.Knight_Shot_BP_C.BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Knight_Shot_BP.Knight_Shot_BP_C.BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'Knight_Shot_BP_C_BndEvt__Knight_Shot_BP_Shape_Capsule_K2Node_ComponentBoundEvent_4_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

}

