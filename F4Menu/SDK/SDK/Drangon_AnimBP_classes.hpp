#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Drangon_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DynamicNode_structs.hpp"
#include "DynamicNode_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Drangon_AnimBP.Drangon_AnimBP_C
// 0x01D0 (0x1790 - 0x15C0)
class UDrangon_AnimBP_C final : public UAnimMultiNodeInstance_DN
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x15C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_CPPDynamic                   AnimGraphNode_CPPDynamic;                          // 0x15C8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x15F0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1670(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x16A0(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1750(0x0030)()
	float                                         Attak_;                                            // 0x1780(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Wakeup;                                            // 0x1784(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Drangon_AnimBP(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Drangon_AnimBP_C">();
	}
	static class UDrangon_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrangon_AnimBP_C>();
	}
};
static_assert(alignof(UDrangon_AnimBP_C) == 0x000010, "Wrong alignment on UDrangon_AnimBP_C");
static_assert(sizeof(UDrangon_AnimBP_C) == 0x001790, "Wrong size on UDrangon_AnimBP_C");
static_assert(offsetof(UDrangon_AnimBP_C, UberGraphFrame) == 0x0015C0, "Member 'UDrangon_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDrangon_AnimBP_C, AnimGraphNode_CPPDynamic) == 0x0015C8, "Member 'UDrangon_AnimBP_C::AnimGraphNode_CPPDynamic' has a wrong offset!");
static_assert(offsetof(UDrangon_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x0015F0, "Member 'UDrangon_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UDrangon_AnimBP_C, AnimGraphNode_StateResult) == 0x001670, "Member 'UDrangon_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UDrangon_AnimBP_C, AnimGraphNode_StateMachine) == 0x0016A0, "Member 'UDrangon_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UDrangon_AnimBP_C, AnimGraphNode_Root) == 0x001750, "Member 'UDrangon_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UDrangon_AnimBP_C, Attak_) == 0x001780, "Member 'UDrangon_AnimBP_C::Attak_' has a wrong offset!");
static_assert(offsetof(UDrangon_AnimBP_C, Wakeup) == 0x001784, "Member 'UDrangon_AnimBP_C::Wakeup' has a wrong offset!");

}

