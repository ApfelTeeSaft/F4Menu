#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioSettingsWidgetBP

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AudioSettingsWidgetBP.AudioSettingsWidgetBP_C.ExecuteUbergraph_AudioSettingsWidgetBP
// 0x0030 (0x0030 - 0x0000)
struct AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateFromMenu_1;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsGamepadBeingUsed;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateToMenu;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateFromMenu;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP) == 0x000008, "Wrong alignment on AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP");
static_assert(sizeof(AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP) == 0x000030, "Wrong size on AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP");
static_assert(offsetof(AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP, EntryPoint) == 0x000000, "Member 'AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP, K2Node_Event_NavigateFromMenu_1) == 0x000008, "Member 'AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP::K2Node_Event_NavigateFromMenu_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP, K2Node_Event_bIsGamepadBeingUsed) == 0x000010, "Member 'AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP::K2Node_Event_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP, K2Node_Event_NavigateToMenu) == 0x000018, "Member 'AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP::K2Node_Event_NavigateToMenu' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP, K2Node_Event_NavigateFromMenu) == 0x000020, "Member 'AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP::K2Node_Event_NavigateFromMenu' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP, K2Node_Event_IsDesignTime) == 0x000028, "Member 'AudioSettingsWidgetBP_C_ExecuteUbergraph_AudioSettingsWidgetBP::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function AudioSettingsWidgetBP.AudioSettingsWidgetBP_C.UpdateDescription
// 0x0008 (0x0008 - 0x0000)
struct AudioSettingsWidgetBP_C_UpdateDescription final
{
public:
	class UInteractableUserWidget_C*              InWidget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettingsWidgetBP_C_UpdateDescription) == 0x000008, "Wrong alignment on AudioSettingsWidgetBP_C_UpdateDescription");
static_assert(sizeof(AudioSettingsWidgetBP_C_UpdateDescription) == 0x000008, "Wrong size on AudioSettingsWidgetBP_C_UpdateDescription");
static_assert(offsetof(AudioSettingsWidgetBP_C_UpdateDescription, InWidget) == 0x000000, "Member 'AudioSettingsWidgetBP_C_UpdateDescription::InWidget' has a wrong offset!");

// Function AudioSettingsWidgetBP.AudioSettingsWidgetBP_C.LoadAudioSettings
// 0x0024 (0x0024 - 0x0000)
struct AudioSettingsWidgetBP_C_LoadAudioSettings final
{
public:
	float                                         CallFunc_GetDefaultValueNormalized_ReturnValue;    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultValueNormalized_ReturnValue_1;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultValueNormalized_ReturnValue_2;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultValueNormalized_ReturnValue_3;  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAudioSettings_MasterAudioVolume;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAudioSettings_MusicAudioVolume;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAudioSettings_SFXAudioVolume;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAudioSettings_VoiceAudioVolume;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAudioSettings_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AudioSettingsWidgetBP_C_LoadAudioSettings) == 0x000004, "Wrong alignment on AudioSettingsWidgetBP_C_LoadAudioSettings");
static_assert(sizeof(AudioSettingsWidgetBP_C_LoadAudioSettings) == 0x000024, "Wrong size on AudioSettingsWidgetBP_C_LoadAudioSettings");
static_assert(offsetof(AudioSettingsWidgetBP_C_LoadAudioSettings, CallFunc_GetDefaultValueNormalized_ReturnValue) == 0x000000, "Member 'AudioSettingsWidgetBP_C_LoadAudioSettings::CallFunc_GetDefaultValueNormalized_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_LoadAudioSettings, CallFunc_GetDefaultValueNormalized_ReturnValue_1) == 0x000004, "Member 'AudioSettingsWidgetBP_C_LoadAudioSettings::CallFunc_GetDefaultValueNormalized_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_LoadAudioSettings, CallFunc_GetDefaultValueNormalized_ReturnValue_2) == 0x000008, "Member 'AudioSettingsWidgetBP_C_LoadAudioSettings::CallFunc_GetDefaultValueNormalized_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_LoadAudioSettings, CallFunc_GetDefaultValueNormalized_ReturnValue_3) == 0x00000C, "Member 'AudioSettingsWidgetBP_C_LoadAudioSettings::CallFunc_GetDefaultValueNormalized_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_LoadAudioSettings, CallFunc_GetAudioSettings_MasterAudioVolume) == 0x000010, "Member 'AudioSettingsWidgetBP_C_LoadAudioSettings::CallFunc_GetAudioSettings_MasterAudioVolume' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_LoadAudioSettings, CallFunc_GetAudioSettings_MusicAudioVolume) == 0x000014, "Member 'AudioSettingsWidgetBP_C_LoadAudioSettings::CallFunc_GetAudioSettings_MusicAudioVolume' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_LoadAudioSettings, CallFunc_GetAudioSettings_SFXAudioVolume) == 0x000018, "Member 'AudioSettingsWidgetBP_C_LoadAudioSettings::CallFunc_GetAudioSettings_SFXAudioVolume' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_LoadAudioSettings, CallFunc_GetAudioSettings_VoiceAudioVolume) == 0x00001C, "Member 'AudioSettingsWidgetBP_C_LoadAudioSettings::CallFunc_GetAudioSettings_VoiceAudioVolume' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_LoadAudioSettings, CallFunc_GetAudioSettings_ReturnValue) == 0x000020, "Member 'AudioSettingsWidgetBP_C_LoadAudioSettings::CallFunc_GetAudioSettings_ReturnValue' has a wrong offset!");

// Function AudioSettingsWidgetBP.AudioSettingsWidgetBP_C.ResetAudioSettings
// 0x0014 (0x0014 - 0x0000)
struct AudioSettingsWidgetBP_C_ResetAudioSettings final
{
public:
	float                                         CallFunc_GetDefaultValueNormalized_ReturnValue;    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultValueNormalized_ReturnValue_1;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultValueNormalized_ReturnValue_2;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultValueNormalized_ReturnValue_3;  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAudioSettings_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AudioSettingsWidgetBP_C_ResetAudioSettings) == 0x000004, "Wrong alignment on AudioSettingsWidgetBP_C_ResetAudioSettings");
static_assert(sizeof(AudioSettingsWidgetBP_C_ResetAudioSettings) == 0x000014, "Wrong size on AudioSettingsWidgetBP_C_ResetAudioSettings");
static_assert(offsetof(AudioSettingsWidgetBP_C_ResetAudioSettings, CallFunc_GetDefaultValueNormalized_ReturnValue) == 0x000000, "Member 'AudioSettingsWidgetBP_C_ResetAudioSettings::CallFunc_GetDefaultValueNormalized_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_ResetAudioSettings, CallFunc_GetDefaultValueNormalized_ReturnValue_1) == 0x000004, "Member 'AudioSettingsWidgetBP_C_ResetAudioSettings::CallFunc_GetDefaultValueNormalized_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_ResetAudioSettings, CallFunc_GetDefaultValueNormalized_ReturnValue_2) == 0x000008, "Member 'AudioSettingsWidgetBP_C_ResetAudioSettings::CallFunc_GetDefaultValueNormalized_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_ResetAudioSettings, CallFunc_GetDefaultValueNormalized_ReturnValue_3) == 0x00000C, "Member 'AudioSettingsWidgetBP_C_ResetAudioSettings::CallFunc_GetDefaultValueNormalized_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_ResetAudioSettings, CallFunc_SetAudioSettings_ReturnValue) == 0x000010, "Member 'AudioSettingsWidgetBP_C_ResetAudioSettings::CallFunc_SetAudioSettings_ReturnValue' has a wrong offset!");

// Function AudioSettingsWidgetBP.AudioSettingsWidgetBP_C.ApplyAudioSettings
// 0x0010 (0x0010 - 0x0000)
struct AudioSettingsWidgetBP_C_ApplyAudioSettings final
{
public:
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAudioSettings_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AudioSettingsWidgetBP_C_ApplyAudioSettings) == 0x000008, "Wrong alignment on AudioSettingsWidgetBP_C_ApplyAudioSettings");
static_assert(sizeof(AudioSettingsWidgetBP_C_ApplyAudioSettings) == 0x000010, "Wrong size on AudioSettingsWidgetBP_C_ApplyAudioSettings");
static_assert(offsetof(AudioSettingsWidgetBP_C_ApplyAudioSettings, CallFunc_GetGameUserSettings_ReturnValue) == 0x000000, "Member 'AudioSettingsWidgetBP_C_ApplyAudioSettings::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_ApplyAudioSettings, CallFunc_SetAudioSettings_ReturnValue) == 0x000008, "Member 'AudioSettingsWidgetBP_C_ApplyAudioSettings::CallFunc_SetAudioSettings_ReturnValue' has a wrong offset!");

// Function AudioSettingsWidgetBP.AudioSettingsWidgetBP_C.SetGlobalSettings
// 0x0930 (0x0930 - 0x0000)
struct AudioSettingsWidgetBP_C_SetGlobalSettings final
{
public:
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MainFont;                  // 0x0000(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_SmallTitleFont;            // 0x0058(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MediumTitleFont;           // 0x00B0(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_LargeTitleFont;            // 0x0108(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_ValueFont;                 // 0x0160(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetGlobalFonts_OnlyUppercase;             // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor;                // 0x01BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor;           // 0x01CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor;      // 0x01DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor;      // 0x01EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor;    // 0x01FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor;              // 0x020C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor;              // 0x021C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor;      // 0x022C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor;    // 0x023C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_1;              // 0x024C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_1;         // 0x025C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_1;    // 0x026C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_1;    // 0x027C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_1;  // 0x028C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_1;            // 0x029C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_1;            // 0x02AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_1;    // 0x02BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_1;  // 0x02CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_2;              // 0x02DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_2;         // 0x02EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_2;    // 0x02FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_2;    // 0x030C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_2;  // 0x031C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_2;            // 0x032C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_2;            // 0x033C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_2;    // 0x034C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_2;  // 0x035C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_3;              // 0x036C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_3;         // 0x037C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_3;    // 0x038C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_3;    // 0x039C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_3;  // 0x03AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_3;            // 0x03BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_3;            // 0x03CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_3;    // 0x03DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_3;  // 0x03EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MainFont_1;                // 0x0400(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_SmallTitleFont_1;          // 0x0458(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MediumTitleFont_1;         // 0x04B0(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_LargeTitleFont_1;          // 0x0508(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_ValueFont_1;               // 0x0560(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetGlobalFonts_OnlyUppercase_1;           // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B9[0x3];                                      // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_4;              // 0x05BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_4;         // 0x05CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_4;    // 0x05DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_4;    // 0x05EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_4;  // 0x05FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_4;            // 0x060C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_4;            // 0x061C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_4;    // 0x062C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_4;  // 0x063C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64C[0x4];                                      // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MainFont_2;                // 0x0650(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_SmallTitleFont_2;          // 0x06A8(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MediumTitleFont_2;         // 0x0700(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_LargeTitleFont_2;          // 0x0758(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_ValueFont_2;               // 0x07B0(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetGlobalFonts_OnlyUppercase_2;           // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_809[0x3];                                      // 0x0809(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_5;              // 0x080C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_5;         // 0x081C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_5;    // 0x082C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_5;    // 0x083C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_5;  // 0x084C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_5;            // 0x085C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_5;            // 0x086C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_5;    // 0x087C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_5;  // 0x088C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_6;              // 0x089C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_6;         // 0x08AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_6;    // 0x08BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_6;    // 0x08CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_6;  // 0x08DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_6;            // 0x08EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_6;            // 0x08FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_6;    // 0x090C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_6;  // 0x091C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettingsWidgetBP_C_SetGlobalSettings) == 0x000008, "Wrong alignment on AudioSettingsWidgetBP_C_SetGlobalSettings");
static_assert(sizeof(AudioSettingsWidgetBP_C_SetGlobalSettings) == 0x000930, "Wrong size on AudioSettingsWidgetBP_C_SetGlobalSettings");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MainFont) == 0x000000, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MainFont' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_SmallTitleFont) == 0x000058, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_SmallTitleFont' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MediumTitleFont) == 0x0000B0, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MediumTitleFont' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_LargeTitleFont) == 0x000108, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_LargeTitleFont' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_ValueFont) == 0x000160, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_ValueFont' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_OnlyUppercase) == 0x0001B8, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_OnlyUppercase' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor) == 0x0001BC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor) == 0x0001CC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor) == 0x0001DC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor) == 0x0001EC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor) == 0x0001FC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor) == 0x00020C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor) == 0x00021C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor) == 0x00022C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor) == 0x00023C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_1) == 0x00024C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_1) == 0x00025C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_1) == 0x00026C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_1) == 0x00027C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_1) == 0x00028C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_1) == 0x00029C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_1) == 0x0002AC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_1) == 0x0002BC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_1) == 0x0002CC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_2) == 0x0002DC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_2) == 0x0002EC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_2) == 0x0002FC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_2) == 0x00030C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_2) == 0x00031C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_2) == 0x00032C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_2) == 0x00033C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_2) == 0x00034C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_2) == 0x00035C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_3) == 0x00036C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_3' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_3) == 0x00037C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_3' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_3) == 0x00038C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_3' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_3) == 0x00039C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_3' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_3) == 0x0003AC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_3' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_3) == 0x0003BC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_3' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_3) == 0x0003CC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_3' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_3) == 0x0003DC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_3' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_3) == 0x0003EC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_3' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MainFont_1) == 0x000400, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MainFont_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_SmallTitleFont_1) == 0x000458, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_SmallTitleFont_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MediumTitleFont_1) == 0x0004B0, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MediumTitleFont_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_LargeTitleFont_1) == 0x000508, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_LargeTitleFont_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_ValueFont_1) == 0x000560, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_ValueFont_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_OnlyUppercase_1) == 0x0005B8, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_OnlyUppercase_1' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_4) == 0x0005BC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_4' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_4) == 0x0005CC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_4' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_4) == 0x0005DC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_4' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_4) == 0x0005EC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_4' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_4) == 0x0005FC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_4' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_4) == 0x00060C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_4' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_4) == 0x00061C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_4' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_4) == 0x00062C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_4' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_4) == 0x00063C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_4' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MainFont_2) == 0x000650, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MainFont_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_SmallTitleFont_2) == 0x0006A8, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_SmallTitleFont_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MediumTitleFont_2) == 0x000700, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MediumTitleFont_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_LargeTitleFont_2) == 0x000758, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_LargeTitleFont_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_ValueFont_2) == 0x0007B0, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_ValueFont_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_OnlyUppercase_2) == 0x000808, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_OnlyUppercase_2' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_5) == 0x00080C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_5' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_5) == 0x00081C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_5' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_5) == 0x00082C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_5' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_5) == 0x00083C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_5' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_5) == 0x00084C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_5' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_5) == 0x00085C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_5' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_5) == 0x00086C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_5' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_5) == 0x00087C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_5' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_5) == 0x00088C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_5' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_6) == 0x00089C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_6' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_6) == 0x0008AC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_6' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_6) == 0x0008BC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_6' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_6) == 0x0008CC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_6' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_6) == 0x0008DC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_6' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_6) == 0x0008EC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_6' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_6) == 0x0008FC, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_6' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_6) == 0x00090C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_6' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_6) == 0x00091C, "Member 'AudioSettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_6' has a wrong offset!");

// Function AudioSettingsWidgetBP.AudioSettingsWidgetBP_C.SetAudioVolumeSlider
// 0x0010 (0x0010 - 0x0000)
struct AudioSettingsWidgetBP_C_SetAudioVolumeSlider final
{
public:
	class UOptionsSlider_C*                       InVolumeSlider;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InValue;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettingsWidgetBP_C_SetAudioVolumeSlider) == 0x000008, "Wrong alignment on AudioSettingsWidgetBP_C_SetAudioVolumeSlider");
static_assert(sizeof(AudioSettingsWidgetBP_C_SetAudioVolumeSlider) == 0x000010, "Wrong size on AudioSettingsWidgetBP_C_SetAudioVolumeSlider");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetAudioVolumeSlider, InVolumeSlider) == 0x000000, "Member 'AudioSettingsWidgetBP_C_SetAudioVolumeSlider::InVolumeSlider' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetAudioVolumeSlider, InValue) == 0x000008, "Member 'AudioSettingsWidgetBP_C_SetAudioVolumeSlider::InValue' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_SetAudioVolumeSlider, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'AudioSettingsWidgetBP_C_SetAudioVolumeSlider::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function AudioSettingsWidgetBP.AudioSettingsWidgetBP_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AudioSettingsWidgetBP_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AudioSettingsWidgetBP_C_PreConstruct) == 0x000001, "Wrong alignment on AudioSettingsWidgetBP_C_PreConstruct");
static_assert(sizeof(AudioSettingsWidgetBP_C_PreConstruct) == 0x000001, "Wrong size on AudioSettingsWidgetBP_C_PreConstruct");
static_assert(offsetof(AudioSettingsWidgetBP_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AudioSettingsWidgetBP_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AudioSettingsWidgetBP.AudioSettingsWidgetBP_C.OnNavigationExit
// 0x0010 (0x0010 - 0x0000)
struct AudioSettingsWidgetBP_C_OnNavigationExit final
{
public:
	class UInteractableMenuWidgetBP_C*            NavigateToMenu;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            NavigateFromMenu;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AudioSettingsWidgetBP_C_OnNavigationExit) == 0x000008, "Wrong alignment on AudioSettingsWidgetBP_C_OnNavigationExit");
static_assert(sizeof(AudioSettingsWidgetBP_C_OnNavigationExit) == 0x000010, "Wrong size on AudioSettingsWidgetBP_C_OnNavigationExit");
static_assert(offsetof(AudioSettingsWidgetBP_C_OnNavigationExit, NavigateToMenu) == 0x000000, "Member 'AudioSettingsWidgetBP_C_OnNavigationExit::NavigateToMenu' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_OnNavigationExit, NavigateFromMenu) == 0x000008, "Member 'AudioSettingsWidgetBP_C_OnNavigationExit::NavigateFromMenu' has a wrong offset!");

// Function AudioSettingsWidgetBP.AudioSettingsWidgetBP_C.OnNavigationEnter
// 0x0010 (0x0010 - 0x0000)
struct AudioSettingsWidgetBP_C_OnNavigationEnter final
{
public:
	class UInteractableMenuWidgetBP_C*            NavigateFromMenu;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsGamepadBeingUsed_0;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AudioSettingsWidgetBP_C_OnNavigationEnter) == 0x000008, "Wrong alignment on AudioSettingsWidgetBP_C_OnNavigationEnter");
static_assert(sizeof(AudioSettingsWidgetBP_C_OnNavigationEnter) == 0x000010, "Wrong size on AudioSettingsWidgetBP_C_OnNavigationEnter");
static_assert(offsetof(AudioSettingsWidgetBP_C_OnNavigationEnter, NavigateFromMenu) == 0x000000, "Member 'AudioSettingsWidgetBP_C_OnNavigationEnter::NavigateFromMenu' has a wrong offset!");
static_assert(offsetof(AudioSettingsWidgetBP_C_OnNavigationEnter, bIsGamepadBeingUsed_0) == 0x000008, "Member 'AudioSettingsWidgetBP_C_OnNavigationEnter::bIsGamepadBeingUsed_0' has a wrong offset!");

}

