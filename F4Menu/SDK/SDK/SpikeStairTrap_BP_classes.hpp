#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpikeStairTrap_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SpikeStairTrap_BP.SpikeStairTrap_BP_C
// 0x00B0 (0x02D0 - 0x0220)
class ASpikeStairTrap_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike11;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike10;                                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike9;                                         // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike8;                                         // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike7;                                         // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike;                                          // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike5;                                         // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike4;                                         // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike3;                                         // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike2;                                         // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike1;                                         // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike6;                                         // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SpikeRoot;                                         // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Exo_floor_wood_floorboard;                      // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WoodStairs02;                                   // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Move_Alpha_ED69D11A47A5C12D183264BCDCFE515B;       // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            Move__Direction_ED69D11A47A5C12D183264BCDCFE515B;  // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Move;                                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         ActiveDelay;                                       // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TrapActive;                                        // 0x02CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_SpikeStairTrap_BP(int32 EntryPoint);
	void Stop();
	void BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();
	void SpikeActive();
	void Move__ActiveEvent__EventFunc();
	void Move__OffEvent__EventFunc();
	void Move__SoundEvent__EventFunc();
	void Move__UpdateFunc();
	void Move__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SpikeStairTrap_BP_C">();
	}
	static class ASpikeStairTrap_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpikeStairTrap_BP_C>();
	}
};
static_assert(alignof(ASpikeStairTrap_BP_C) == 0x000008, "Wrong alignment on ASpikeStairTrap_BP_C");
static_assert(sizeof(ASpikeStairTrap_BP_C) == 0x0002D0, "Wrong size on ASpikeStairTrap_BP_C");
static_assert(offsetof(ASpikeStairTrap_BP_C, UberGraphFrame) == 0x000220, "Member 'ASpikeStairTrap_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, Box) == 0x000228, "Member 'ASpikeStairTrap_BP_C::Box' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Spike11) == 0x000230, "Member 'ASpikeStairTrap_BP_C::SM_Spike11' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Spike10) == 0x000238, "Member 'ASpikeStairTrap_BP_C::SM_Spike10' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Spike9) == 0x000240, "Member 'ASpikeStairTrap_BP_C::SM_Spike9' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Spike8) == 0x000248, "Member 'ASpikeStairTrap_BP_C::SM_Spike8' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Spike7) == 0x000250, "Member 'ASpikeStairTrap_BP_C::SM_Spike7' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Spike) == 0x000258, "Member 'ASpikeStairTrap_BP_C::SM_Spike' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Spike5) == 0x000260, "Member 'ASpikeStairTrap_BP_C::SM_Spike5' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Spike4) == 0x000268, "Member 'ASpikeStairTrap_BP_C::SM_Spike4' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Spike3) == 0x000270, "Member 'ASpikeStairTrap_BP_C::SM_Spike3' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Spike2) == 0x000278, "Member 'ASpikeStairTrap_BP_C::SM_Spike2' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Spike1) == 0x000280, "Member 'ASpikeStairTrap_BP_C::SM_Spike1' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Spike6) == 0x000288, "Member 'ASpikeStairTrap_BP_C::SM_Spike6' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SpikeRoot) == 0x000290, "Member 'ASpikeStairTrap_BP_C::SpikeRoot' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_Exo_floor_wood_floorboard) == 0x000298, "Member 'ASpikeStairTrap_BP_C::SM_Exo_floor_wood_floorboard' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, Plane) == 0x0002A0, "Member 'ASpikeStairTrap_BP_C::Plane' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, SM_WoodStairs02) == 0x0002A8, "Member 'ASpikeStairTrap_BP_C::SM_WoodStairs02' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, DefaultSceneRoot) == 0x0002B0, "Member 'ASpikeStairTrap_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, Move_Alpha_ED69D11A47A5C12D183264BCDCFE515B) == 0x0002B8, "Member 'ASpikeStairTrap_BP_C::Move_Alpha_ED69D11A47A5C12D183264BCDCFE515B' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, Move__Direction_ED69D11A47A5C12D183264BCDCFE515B) == 0x0002BC, "Member 'ASpikeStairTrap_BP_C::Move__Direction_ED69D11A47A5C12D183264BCDCFE515B' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, Move) == 0x0002C0, "Member 'ASpikeStairTrap_BP_C::Move' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, ActiveDelay) == 0x0002C8, "Member 'ASpikeStairTrap_BP_C::ActiveDelay' has a wrong offset!");
static_assert(offsetof(ASpikeStairTrap_BP_C, TrapActive) == 0x0002CC, "Member 'ASpikeStairTrap_BP_C::TrapActive' has a wrong offset!");

}

