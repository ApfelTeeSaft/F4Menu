#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MiddleRoute_RotationFootrest

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MiddleRoute_RotationFootrest.MiddleRoute_RotationFootrest_C
// 0x0038 (0x0258 - 0x0220)
class AMiddleRoute_RotationFootrest_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Root;                                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wheel;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation_Rate;                                     // 0x0248(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MiddleRoute_RotationFootrest(int32 EntryPoint);
	void Stop();
	void Active();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MiddleRoute_RotationFootrest_C">();
	}
	static class AMiddleRoute_RotationFootrest_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMiddleRoute_RotationFootrest_C>();
	}
};
static_assert(alignof(AMiddleRoute_RotationFootrest_C) == 0x000008, "Wrong alignment on AMiddleRoute_RotationFootrest_C");
static_assert(sizeof(AMiddleRoute_RotationFootrest_C) == 0x000258, "Wrong size on AMiddleRoute_RotationFootrest_C");
static_assert(offsetof(AMiddleRoute_RotationFootrest_C, UberGraphFrame) == 0x000220, "Member 'AMiddleRoute_RotationFootrest_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMiddleRoute_RotationFootrest_C, ParticleSystem) == 0x000228, "Member 'AMiddleRoute_RotationFootrest_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(AMiddleRoute_RotationFootrest_C, RotatingMovement) == 0x000230, "Member 'AMiddleRoute_RotationFootrest_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AMiddleRoute_RotationFootrest_C, Root) == 0x000238, "Member 'AMiddleRoute_RotationFootrest_C::Root' has a wrong offset!");
static_assert(offsetof(AMiddleRoute_RotationFootrest_C, Wheel) == 0x000240, "Member 'AMiddleRoute_RotationFootrest_C::Wheel' has a wrong offset!");
static_assert(offsetof(AMiddleRoute_RotationFootrest_C, Rotation_Rate) == 0x000248, "Member 'AMiddleRoute_RotationFootrest_C::Rotation_Rate' has a wrong offset!");

}

