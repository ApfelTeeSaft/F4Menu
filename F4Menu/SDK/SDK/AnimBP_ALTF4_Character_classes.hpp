#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_ALTF4_Character

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DynamicNode_structs.hpp"
#include "DynamicNode_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_ALTF4_Character.AnimBP_ALTF4_Character_C
// 0x0100 (0x16C0 - 0x15C0)
class UAnimBP_ALTF4_Character_C final : public UAnimMultiNodeInstance_DN
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x15C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x15C8(0x0030)()
	struct FAnimNode_CPPDynamic                   AnimGraphNode_CPPDynamic;                          // 0x15F8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1620(0x0080)()
	struct FRotator                               HeadRotation;                                      // 0x16A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16AC[0x4];                                     // 0x16AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Pawn_C*                       BP_ALTF4_Pawn;                                     // 0x16B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AnimBP_ALTF4_Character(int32 EntryPoint);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void F_SetHeadRotation();
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_ALTF4_Character_C">();
	}
	static class UAnimBP_ALTF4_Character_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_ALTF4_Character_C>();
	}
};
static_assert(alignof(UAnimBP_ALTF4_Character_C) == 0x000010, "Wrong alignment on UAnimBP_ALTF4_Character_C");
static_assert(sizeof(UAnimBP_ALTF4_Character_C) == 0x0016C0, "Wrong size on UAnimBP_ALTF4_Character_C");
static_assert(offsetof(UAnimBP_ALTF4_Character_C, UberGraphFrame) == 0x0015C0, "Member 'UAnimBP_ALTF4_Character_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_ALTF4_Character_C, AnimGraphNode_Root) == 0x0015C8, "Member 'UAnimBP_ALTF4_Character_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_ALTF4_Character_C, AnimGraphNode_CPPDynamic) == 0x0015F8, "Member 'UAnimBP_ALTF4_Character_C::AnimGraphNode_CPPDynamic' has a wrong offset!");
static_assert(offsetof(UAnimBP_ALTF4_Character_C, AnimGraphNode_SequencePlayer) == 0x001620, "Member 'UAnimBP_ALTF4_Character_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_ALTF4_Character_C, HeadRotation) == 0x0016A0, "Member 'UAnimBP_ALTF4_Character_C::HeadRotation' has a wrong offset!");
static_assert(offsetof(UAnimBP_ALTF4_Character_C, BP_ALTF4_Pawn) == 0x0016B0, "Member 'UAnimBP_ALTF4_Character_C::BP_ALTF4_Pawn' has a wrong offset!");

}

