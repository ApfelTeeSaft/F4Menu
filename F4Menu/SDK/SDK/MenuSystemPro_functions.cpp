#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuSystemPro

#include "Basic.hpp"

#include "MenuSystemPro_classes.hpp"
#include "MenuSystemPro_parameters.hpp"


namespace SDK
{

// Function MenuSystemPro.MenuSystemLibrary.ActionKeyMappingToString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputActionKeyMapping           InputActionKeyMapping                                  (Parm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMenuSystemLibrary::ActionKeyMappingToString(const struct FInputActionKeyMapping& InputActionKeyMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "ActionKeyMappingToString");

	Params::MenuSystemLibrary_ActionKeyMappingToString Parms{};

	Parms.InputActionKeyMapping = std::move(InputActionKeyMapping);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.ApplyPostProcessingSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    MotionBlur                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LensFlares                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SSR                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Bloom                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AntiAliasing                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AmbientOcclusion                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuSystemLibrary::ApplyPostProcessingSettings(bool MotionBlur, bool LensFlares, bool SSR, bool Bloom, int32 AntiAliasing, bool AmbientOcclusion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "ApplyPostProcessingSettings");

	Params::MenuSystemLibrary_ApplyPostProcessingSettings Parms{};

	Parms.MotionBlur = MotionBlur;
	Parms.LensFlares = LensFlares;
	Parms.SSR = SSR;
	Parms.Bloom = Bloom;
	Parms.AntiAliasing = AntiAliasing;
	Parms.AmbientOcclusion = AmbientOcclusion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MenuSystemPro.MenuSystemLibrary.ApplyRaytracingSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   RaytracedShadows                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedReflections                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedTranslucency                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedAmbientOcclusion                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedGlobalIllumination                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DLSS                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuSystemLibrary::ApplyRaytracingSettings(int32 RaytracedShadows, int32 RaytracedReflections, int32 RaytracedTranslucency, int32 RaytracedAmbientOcclusion, int32 RaytracedGlobalIllumination, int32 DLSS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "ApplyRaytracingSettings");

	Params::MenuSystemLibrary_ApplyRaytracingSettings Parms{};

	Parms.RaytracedShadows = RaytracedShadows;
	Parms.RaytracedReflections = RaytracedReflections;
	Parms.RaytracedTranslucency = RaytracedTranslucency;
	Parms.RaytracedAmbientOcclusion = RaytracedAmbientOcclusion;
	Parms.RaytracedGlobalIllumination = RaytracedGlobalIllumination;
	Parms.DLSS = DLSS;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MenuSystemPro.MenuSystemLibrary.AxisKeyMappingToString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputAxisKeyMapping             InputAxisKeyMapping                                    (ConstParm, Parm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMenuSystemLibrary::AxisKeyMappingToString(const struct FInputAxisKeyMapping& InputAxisKeyMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "AxisKeyMappingToString");

	Params::MenuSystemLibrary_AxisKeyMappingToString Parms{};

	Parms.InputAxisKeyMapping = std::move(InputAxisKeyMapping);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.CheckIfBenchmarkAlreadyRan
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::CheckIfBenchmarkAlreadyRan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "CheckIfBenchmarkAlreadyRan");

	Params::MenuSystemLibrary_CheckIfBenchmarkAlreadyRan Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetAudioSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   MasterAudioVolume                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MusicAudioVolume                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SFXAudioVolume                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VoiceAudioVolume                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MasterAudioVolumeDefault                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MusicAudioVolumeDefault                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SFXAudioVolumeDefault                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VoiceAudioVolumeDefault                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::GetAudioSettings(float* MasterAudioVolume, float* MusicAudioVolume, float* SFXAudioVolume, float* VoiceAudioVolume, float MasterAudioVolumeDefault, float MusicAudioVolumeDefault, float SFXAudioVolumeDefault, float VoiceAudioVolumeDefault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetAudioSettings");

	Params::MenuSystemLibrary_GetAudioSettings Parms{};

	Parms.MasterAudioVolumeDefault = MasterAudioVolumeDefault;
	Parms.MusicAudioVolumeDefault = MusicAudioVolumeDefault;
	Parms.SFXAudioVolumeDefault = SFXAudioVolumeDefault;
	Parms.VoiceAudioVolumeDefault = VoiceAudioVolumeDefault;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MasterAudioVolume != nullptr)
		*MasterAudioVolume = Parms.MasterAudioVolume;

	if (MusicAudioVolume != nullptr)
		*MusicAudioVolume = Parms.MusicAudioVolume;

	if (SFXAudioVolume != nullptr)
		*SFXAudioVolume = Parms.SFXAudioVolume;

	if (VoiceAudioVolume != nullptr)
		*VoiceAudioVolume = Parms.VoiceAudioVolume;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetControlsSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bInvertLookX                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInvertLookY                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CameraSpeedX                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CameraSpeedY                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRumble                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInvertLookXDefault                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInvertLookYDefault                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CameraSpeedXDefault                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CameraSpeedYDefault                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRumbleDefault                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::GetControlsSettings(bool* bInvertLookX, bool* bInvertLookY, float* CameraSpeedX, float* CameraSpeedY, bool* bRumble, bool bInvertLookXDefault, bool bInvertLookYDefault, float CameraSpeedXDefault, float CameraSpeedYDefault, bool bRumbleDefault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetControlsSettings");

	Params::MenuSystemLibrary_GetControlsSettings Parms{};

	Parms.bInvertLookXDefault = bInvertLookXDefault;
	Parms.bInvertLookYDefault = bInvertLookYDefault;
	Parms.CameraSpeedXDefault = CameraSpeedXDefault;
	Parms.CameraSpeedYDefault = CameraSpeedYDefault;
	Parms.bRumbleDefault = bRumbleDefault;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bInvertLookX != nullptr)
		*bInvertLookX = Parms.bInvertLookX;

	if (bInvertLookY != nullptr)
		*bInvertLookY = Parms.bInvertLookY;

	if (CameraSpeedX != nullptr)
		*CameraSpeedX = Parms.CameraSpeedX;

	if (CameraSpeedY != nullptr)
		*CameraSpeedY = Parms.CameraSpeedY;

	if (bRumble != nullptr)
		*bRumble = Parms.bRumble;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetCurrentViewMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMenuSystemLibrary::GetCurrentViewMode(const class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetCurrentViewMode");

	Params::MenuSystemLibrary_GetCurrentViewMode Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetDefaultActionMappings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FInputActionKeyMapping>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FInputActionKeyMapping> UMenuSystemLibrary::GetDefaultActionMappings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetDefaultActionMappings");

	Params::MenuSystemLibrary_GetDefaultActionMappings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetDefaultAxisMappings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FInputAxisKeyMapping>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FInputAxisKeyMapping> UMenuSystemLibrary::GetDefaultAxisMappings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetDefaultAxisMappings");

	Params::MenuSystemLibrary_GetDefaultAxisMappings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetDefaultInputBindingsVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMenuSystemLibrary::GetDefaultInputBindingsVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetDefaultInputBindingsVersion");

	Params::MenuSystemLibrary_GetDefaultInputBindingsVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetDisplaySettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   Brightness                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FieldOfView                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BrightnessDefault                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FieldOfViewDefault                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::GetDisplaySettings(float* Brightness, float* FieldOfView, const float BrightnessDefault, const float FieldOfViewDefault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetDisplaySettings");

	Params::MenuSystemLibrary_GetDisplaySettings Parms{};

	Parms.BrightnessDefault = BrightnessDefault;
	Parms.FieldOfViewDefault = FieldOfViewDefault;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Brightness != nullptr)
		*Brightness = Parms.Brightness;

	if (FieldOfView != nullptr)
		*FieldOfView = Parms.FieldOfView;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetGameSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Difficulty                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Language                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SubtitlesEnabled                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   Languages                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   DifficultyDefault                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LanguageDefault                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SubtitlesEnabledDefault                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::GetGameSettings(int32* Difficulty, int32* Language, bool* SubtitlesEnabled, TArray<class FString>* Languages, int32 DifficultyDefault, int32 LanguageDefault, bool SubtitlesEnabledDefault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetGameSettings");

	Params::MenuSystemLibrary_GetGameSettings Parms{};

	Parms.DifficultyDefault = DifficultyDefault;
	Parms.LanguageDefault = LanguageDefault;
	Parms.SubtitlesEnabledDefault = SubtitlesEnabledDefault;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Difficulty != nullptr)
		*Difficulty = Parms.Difficulty;

	if (Language != nullptr)
		*Language = Parms.Language;

	if (SubtitlesEnabled != nullptr)
		*SubtitlesEnabled = Parms.SubtitlesEnabled;

	if (Languages != nullptr)
		*Languages = std::move(Parms.Languages);

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetLanguageCodeArray
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UMenuSystemLibrary::GetLanguageCodeArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetLanguageCodeArray");

	Params::MenuSystemLibrary_GetLanguageCodeArray Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetPersistentVariable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           CustomVariableValue                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SettingsSection                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CustomVariableName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CustomVariableValueDefault                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::GetPersistentVariable(class FString* CustomVariableValue, const class FString& SettingsSection, const class FString& CustomVariableName, const class FString& CustomVariableValueDefault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetPersistentVariable");

	Params::MenuSystemLibrary_GetPersistentVariable Parms{};

	Parms.SettingsSection = std::move(SettingsSection);
	Parms.CustomVariableName = std::move(CustomVariableName);
	Parms.CustomVariableValueDefault = std::move(CustomVariableValueDefault);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CustomVariableValue != nullptr)
		*CustomVariableValue = std::move(Parms.CustomVariableValue);

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetPostProcessingSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    MotionBlur                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LensFlares                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SSR                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Bloom                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AntiAliasing                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AmbientOcclusion                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    MotionBlurDefault                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LensFlaresDefault                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SSRDefault                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    BloomDefault                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AntiAliasingDefault                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AmbientOcclusionDefault                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::GetPostProcessingSettings(bool* MotionBlur, bool* LensFlares, bool* SSR, bool* Bloom, int32* AntiAliasing, bool* AmbientOcclusion, bool MotionBlurDefault, bool LensFlaresDefault, bool SSRDefault, bool BloomDefault, int32 AntiAliasingDefault, bool AmbientOcclusionDefault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetPostProcessingSettings");

	Params::MenuSystemLibrary_GetPostProcessingSettings Parms{};

	Parms.MotionBlurDefault = MotionBlurDefault;
	Parms.LensFlaresDefault = LensFlaresDefault;
	Parms.SSRDefault = SSRDefault;
	Parms.BloomDefault = BloomDefault;
	Parms.AntiAliasingDefault = AntiAliasingDefault;
	Parms.AmbientOcclusionDefault = AmbientOcclusionDefault;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MotionBlur != nullptr)
		*MotionBlur = Parms.MotionBlur;

	if (LensFlares != nullptr)
		*LensFlares = Parms.LensFlares;

	if (SSR != nullptr)
		*SSR = Parms.SSR;

	if (Bloom != nullptr)
		*Bloom = Parms.Bloom;

	if (AntiAliasing != nullptr)
		*AntiAliasing = Parms.AntiAliasing;

	if (AmbientOcclusion != nullptr)
		*AmbientOcclusion = Parms.AmbientOcclusion;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetProjectVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMenuSystemLibrary::GetProjectVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetProjectVersion");

	Params::MenuSystemLibrary_GetProjectVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetRaytracingSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   RaytracedShadows                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedReflections                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedTranslucency                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedAmbientOcclusion                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedGlobalIllumination                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DLSS                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedShadowsDefault                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedReflectionsDefault                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedTranslucencyDefault                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedAmbientDefault                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedGlobalIlluminationDefault                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DLSSDefault                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::GetRaytracingSettings(int32* RaytracedShadows, int32* RaytracedReflections, int32* RaytracedTranslucency, int32* RaytracedAmbientOcclusion, int32* RaytracedGlobalIllumination, int32* DLSS, int32 RaytracedShadowsDefault, int32 RaytracedReflectionsDefault, int32 RaytracedTranslucencyDefault, int32 RaytracedAmbientDefault, int32 RaytracedGlobalIlluminationDefault, int32 DLSSDefault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetRaytracingSettings");

	Params::MenuSystemLibrary_GetRaytracingSettings Parms{};

	Parms.RaytracedShadowsDefault = RaytracedShadowsDefault;
	Parms.RaytracedReflectionsDefault = RaytracedReflectionsDefault;
	Parms.RaytracedTranslucencyDefault = RaytracedTranslucencyDefault;
	Parms.RaytracedAmbientDefault = RaytracedAmbientDefault;
	Parms.RaytracedGlobalIlluminationDefault = RaytracedGlobalIlluminationDefault;
	Parms.DLSSDefault = DLSSDefault;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RaytracedShadows != nullptr)
		*RaytracedShadows = Parms.RaytracedShadows;

	if (RaytracedReflections != nullptr)
		*RaytracedReflections = Parms.RaytracedReflections;

	if (RaytracedTranslucency != nullptr)
		*RaytracedTranslucency = Parms.RaytracedTranslucency;

	if (RaytracedAmbientOcclusion != nullptr)
		*RaytracedAmbientOcclusion = Parms.RaytracedAmbientOcclusion;

	if (RaytracedGlobalIllumination != nullptr)
		*RaytracedGlobalIllumination = Parms.RaytracedGlobalIllumination;

	if (DLSS != nullptr)
		*DLSS = Parms.DLSS;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetScreenResolution
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMenuSystemLibrary::GetScreenResolution()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetScreenResolution");

	Params::MenuSystemLibrary_GetScreenResolution Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetSupportedScreenResolutions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   Resolutions                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   CurrentScreenResolutionIndex                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::GetSupportedScreenResolutions(TArray<class FString>* Resolutions, int32* CurrentScreenResolutionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetSupportedScreenResolutions");

	Params::MenuSystemLibrary_GetSupportedScreenResolutions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Resolutions != nullptr)
		*Resolutions = std::move(Parms.Resolutions);

	if (CurrentScreenResolutionIndex != nullptr)
		*CurrentScreenResolutionIndex = Parms.CurrentScreenResolutionIndex;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.GetVRAM
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   UsedVRAM                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalVRAM                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuSystemLibrary::GetVRAM(float* UsedVRAM, float* TotalVRAM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "GetVRAM");

	Params::MenuSystemLibrary_GetVRAM Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (UsedVRAM != nullptr)
		*UsedVRAM = Parms.UsedVRAM;

	if (TotalVRAM != nullptr)
		*TotalVRAM = Parms.TotalVRAM;
}


// Function MenuSystemPro.MenuSystemLibrary.SetAudioSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   MasterAudioVolume                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MusicAudioVolume                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SFXAudioVolume                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VoiceAudioVolume                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundClass*                      MasterSoundClass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundClass*                      MusicSoundClass                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundClass*                      SFXSoundClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundClass*                      VoiceSoundClass                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::SetAudioSettings(const float MasterAudioVolume, const float MusicAudioVolume, const float SFXAudioVolume, const float VoiceAudioVolume, class USoundClass* MasterSoundClass, class USoundClass* MusicSoundClass, class USoundClass* SFXSoundClass, class USoundClass* VoiceSoundClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "SetAudioSettings");

	Params::MenuSystemLibrary_SetAudioSettings Parms{};

	Parms.MasterAudioVolume = MasterAudioVolume;
	Parms.MusicAudioVolume = MusicAudioVolume;
	Parms.SFXAudioVolume = SFXAudioVolume;
	Parms.VoiceAudioVolume = VoiceAudioVolume;
	Parms.MasterSoundClass = MasterSoundClass;
	Parms.MusicSoundClass = MusicSoundClass;
	Parms.SFXSoundClass = SFXSoundClass;
	Parms.VoiceSoundClass = VoiceSoundClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.SetBenchmarkAlreadyRan
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    BenchmarkAlreadyRan                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuSystemLibrary::SetBenchmarkAlreadyRan(bool BenchmarkAlreadyRan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "SetBenchmarkAlreadyRan");

	Params::MenuSystemLibrary_SetBenchmarkAlreadyRan Parms{};

	Parms.BenchmarkAlreadyRan = BenchmarkAlreadyRan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MenuSystemPro.MenuSystemLibrary.SetControlsSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bInvertLookX                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInvertLookY                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CameraSpeedX                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CameraSpeedY                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRumble                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::SetControlsSettings(const bool bInvertLookX, const bool bInvertLookY, const float CameraSpeedX, const float CameraSpeedY, const bool bRumble)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "SetControlsSettings");

	Params::MenuSystemLibrary_SetControlsSettings Parms{};

	Parms.bInvertLookX = bInvertLookX;
	Parms.bInvertLookY = bInvertLookY;
	Parms.CameraSpeedX = CameraSpeedX;
	Parms.CameraSpeedY = CameraSpeedY;
	Parms.bRumble = bRumble;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.SetDefaultActionMappings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<struct FInputActionKeyMapping>   ActionKeyMappings                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::SetDefaultActionMappings(const TArray<struct FInputActionKeyMapping>& ActionKeyMappings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "SetDefaultActionMappings");

	Params::MenuSystemLibrary_SetDefaultActionMappings Parms{};

	Parms.ActionKeyMappings = std::move(ActionKeyMappings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.SetDefaultAxisMappings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<struct FInputAxisKeyMapping>     AxisKeyMappings                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::SetDefaultAxisMappings(const TArray<struct FInputAxisKeyMapping>& AxisKeyMappings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "SetDefaultAxisMappings");

	Params::MenuSystemLibrary_SetDefaultAxisMappings Parms{};

	Parms.AxisKeyMappings = std::move(AxisKeyMappings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.SetDefaultInputBindingsVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           DefaultInputBindingsVersion                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuSystemLibrary::SetDefaultInputBindingsVersion(const class FString& DefaultInputBindingsVersion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "SetDefaultInputBindingsVersion");

	Params::MenuSystemLibrary_SetDefaultInputBindingsVersion Parms{};

	Parms.DefaultInputBindingsVersion = std::move(DefaultInputBindingsVersion);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MenuSystemPro.MenuSystemLibrary.SetDisplaySettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   Brightness                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FieldOfView                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::SetDisplaySettings(float Brightness, float FieldOfView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "SetDisplaySettings");

	Params::MenuSystemLibrary_SetDisplaySettings Parms{};

	Parms.Brightness = Brightness;
	Parms.FieldOfView = FieldOfView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.SetGameSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Difficulty                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Language                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SubtitlesEnabled                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::SetGameSettings(const int32 Difficulty, const int32 Language, const bool SubtitlesEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "SetGameSettings");

	Params::MenuSystemLibrary_SetGameSettings Parms{};

	Parms.Difficulty = Difficulty;
	Parms.Language = Language;
	Parms.SubtitlesEnabled = SubtitlesEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.SetLanguageCodeArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   InLanguageCodeArray                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UMenuSystemLibrary::SetLanguageCodeArray(const TArray<class FString>& InLanguageCodeArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "SetLanguageCodeArray");

	Params::MenuSystemLibrary_SetLanguageCodeArray Parms{};

	Parms.InLanguageCodeArray = std::move(InLanguageCodeArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MenuSystemPro.MenuSystemLibrary.SetPersistentVariable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           SettingsSection                                        (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CustomVariableName                                     (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CustomVariableValue                                    (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::SetPersistentVariable(const class FString& SettingsSection, const class FString& CustomVariableName, const class FString& CustomVariableValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "SetPersistentVariable");

	Params::MenuSystemLibrary_SetPersistentVariable Parms{};

	Parms.SettingsSection = std::move(SettingsSection);
	Parms.CustomVariableName = std::move(CustomVariableName);
	Parms.CustomVariableValue = std::move(CustomVariableValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.SetPostProcessingSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    MotionBlur                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LensFlares                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    SSR                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Bloom                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AntiAliasing                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AmbientOcclusion                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::SetPostProcessingSettings(bool MotionBlur, bool LensFlares, bool SSR, bool Bloom, int32 AntiAliasing, bool AmbientOcclusion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "SetPostProcessingSettings");

	Params::MenuSystemLibrary_SetPostProcessingSettings Parms{};

	Parms.MotionBlur = MotionBlur;
	Parms.LensFlares = LensFlares;
	Parms.SSR = SSR;
	Parms.Bloom = Bloom;
	Parms.AntiAliasing = AntiAliasing;
	Parms.AmbientOcclusion = AmbientOcclusion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.SetRaytracingSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   RaytracedShadows                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedReflections                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedTranslucency                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedAmbientOcclusion                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RaytracedGlobalIllumination                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DLSS                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuSystemLibrary::SetRaytracingSettings(int32 RaytracedShadows, int32 RaytracedReflections, int32 RaytracedTranslucency, int32 RaytracedAmbientOcclusion, int32 RaytracedGlobalIllumination, int32 DLSS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "SetRaytracingSettings");

	Params::MenuSystemLibrary_SetRaytracingSettings Parms{};

	Parms.RaytracedShadows = RaytracedShadows;
	Parms.RaytracedReflections = RaytracedReflections;
	Parms.RaytracedTranslucency = RaytracedTranslucency;
	Parms.RaytracedAmbientOcclusion = RaytracedAmbientOcclusion;
	Parms.RaytracedGlobalIllumination = RaytracedGlobalIllumination;
	Parms.DLSS = DLSS;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.StringToActionKeyMapping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ActionKeyMappingString                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputActionKeyMapping           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInputActionKeyMapping UMenuSystemLibrary::StringToActionKeyMapping(const class FString& ActionKeyMappingString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "StringToActionKeyMapping");

	Params::MenuSystemLibrary_StringToActionKeyMapping Parms{};

	Parms.ActionKeyMappingString = std::move(ActionKeyMappingString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MenuSystemPro.MenuSystemLibrary.StringToAxisKeyMapping
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           AxisKeyMappingString                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputAxisKeyMapping             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInputAxisKeyMapping UMenuSystemLibrary::StringToAxisKeyMapping(const class FString& AxisKeyMappingString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MenuSystemLibrary", "StringToAxisKeyMapping");

	Params::MenuSystemLibrary_StringToAxisKeyMapping Parms{};

	Parms.AxisKeyMappingString = std::move(AxisKeyMappingString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

