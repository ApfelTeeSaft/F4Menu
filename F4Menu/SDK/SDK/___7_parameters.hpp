#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ___7

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ¬´7.¬´7_C.ExecuteUbergraph_¬´7
// 0x01A8 (0x01A8 - 0x0000)
struct ___7_C_ExecuteUbergraph____7 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ___bool_Has_Been_Initd_Variable;                   // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable;                         // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0104(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  K2Node_CustomEvent_PawnHIT__;                      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ALTF4_Pawn_C*                       K2Node_DynamicCast_AsBP_ALTF4_Pawn;                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(___7_C_ExecuteUbergraph____7) == 0x000008, "Wrong alignment on ___7_C_ExecuteUbergraph____7");
static_assert(sizeof(___7_C_ExecuteUbergraph____7) == 0x0001A8, "Wrong size on ___7_C_ExecuteUbergraph____7");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, EntryPoint) == 0x000000, "Member '___7_C_ExecuteUbergraph____7::EntryPoint' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member '___7_C_ExecuteUbergraph____7::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member '___7_C_ExecuteUbergraph____7::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member '___7_C_ExecuteUbergraph____7::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member '___7_C_ExecuteUbergraph____7::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member '___7_C_ExecuteUbergraph____7::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member '___7_C_ExecuteUbergraph____7::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, ___bool_Has_Been_Initd_Variable) == 0x0000B4, "Member '___7_C_ExecuteUbergraph____7::___bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_DynamicCast_AsPawn) == 0x0000B8, "Member '___7_C_ExecuteUbergraph____7::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member '___7_C_ExecuteUbergraph____7::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, ___bool_IsClosed_Variable) == 0x0000C1, "Member '___7_C_ExecuteUbergraph____7::___bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_Event_DeltaSeconds) == 0x0000C4, "Member '___7_C_ExecuteUbergraph____7::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C8, "Member '___7_C_ExecuteUbergraph____7::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0000D8, "Member '___7_C_ExecuteUbergraph____7::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_ComponentBoundEvent_HitComponent) == 0x0000E0, "Member '___7_C_ExecuteUbergraph____7::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0000E8, "Member '___7_C_ExecuteUbergraph____7::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0000F0, "Member '___7_C_ExecuteUbergraph____7::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0000F8, "Member '___7_C_ExecuteUbergraph____7::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_ComponentBoundEvent_Hit) == 0x000104, "Member '___7_C_ExecuteUbergraph____7::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_CustomEvent_PawnHIT__) == 0x000190, "Member '___7_C_ExecuteUbergraph____7::K2Node_CustomEvent_PawnHIT__' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_DynamicCast_AsBP_ALTF4_Pawn) == 0x000198, "Member '___7_C_ExecuteUbergraph____7::K2Node_DynamicCast_AsBP_ALTF4_Pawn' has a wrong offset!");
static_assert(offsetof(___7_C_ExecuteUbergraph____7, K2Node_DynamicCast_bSuccess_1) == 0x0001A0, "Member '___7_C_ExecuteUbergraph____7::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ¬´7.¬´7_C.BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct ___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on ___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on ___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member '___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member '___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member '___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member '___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member '___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member '___7_C_BndEvt__OVER_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function ¬´7.¬´7_C.TrapActivate
// 0x0008 (0x0008 - 0x0000)
struct ___7_C_TrapActivate final
{
public:
	class APawn*                                  PawnHIT__;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(___7_C_TrapActivate) == 0x000008, "Wrong alignment on ___7_C_TrapActivate");
static_assert(sizeof(___7_C_TrapActivate) == 0x000008, "Wrong size on ___7_C_TrapActivate");
static_assert(offsetof(___7_C_TrapActivate, PawnHIT__) == 0x000000, "Member '___7_C_TrapActivate::PawnHIT__' has a wrong offset!");

// Function ¬´7.¬´7_C.BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct ___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on ___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on ___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member '___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member '___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member '___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member '___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member '___7_C_BndEvt__Barrel_K2Node_ComponentBoundEvent_40_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function ¬´7.¬´7_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ___7_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(___7_C_ReceiveTick) == 0x000004, "Wrong alignment on ___7_C_ReceiveTick");
static_assert(sizeof(___7_C_ReceiveTick) == 0x000004, "Wrong size on ___7_C_ReceiveTick");
static_assert(offsetof(___7_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member '___7_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

