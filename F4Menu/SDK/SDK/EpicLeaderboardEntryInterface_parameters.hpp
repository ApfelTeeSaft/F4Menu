#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EpicLeaderboardEntryInterface

#include "Basic.hpp"

#include "EpicLeaderboard_structs.hpp"


namespace SDK::Params
{

// Function EpicLeaderboardEntryInterface.EpicLeaderboardEntryInterface_C.InitFields
// 0x00A0 (0x00A0 - 0x0000)
struct EpicLeaderboardEntryInterface_C_InitFields final
{
public:
	bool                                          Highlight;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEpicLeaderboardEntry                  ScoreEntry;                                        // 0x0008(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(EpicLeaderboardEntryInterface_C_InitFields) == 0x000008, "Wrong alignment on EpicLeaderboardEntryInterface_C_InitFields");
static_assert(sizeof(EpicLeaderboardEntryInterface_C_InitFields) == 0x0000A0, "Wrong size on EpicLeaderboardEntryInterface_C_InitFields");
static_assert(offsetof(EpicLeaderboardEntryInterface_C_InitFields, Highlight) == 0x000000, "Member 'EpicLeaderboardEntryInterface_C_InitFields::Highlight' has a wrong offset!");
static_assert(offsetof(EpicLeaderboardEntryInterface_C_InitFields, ScoreEntry) == 0x000008, "Member 'EpicLeaderboardEntryInterface_C_InitFields::ScoreEntry' has a wrong offset!");

}

