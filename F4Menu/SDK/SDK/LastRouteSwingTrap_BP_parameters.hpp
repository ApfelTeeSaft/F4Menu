#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LastRouteSwingTrap_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function LastRouteSwingTrap_BP.LastRouteSwingTrap_BP_C.ExecuteUbergraph_LastRouteSwingTrap_BP
// 0x0288 (0x0288 - 0x0000)
struct LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SphericalToCartesianCoordinates_NewCartesianCoord; // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0020(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00AC(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x013C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x01E8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Pawn_SoloPlay_C*              K2Node_DynamicCast_AsBP_ALTF4_Pawn_Solo_Play;      // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP) == 0x000008, "Wrong alignment on LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP");
static_assert(sizeof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP) == 0x000288, "Wrong size on LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, EntryPoint) == 0x000000, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, CallFunc_MakeRotator_ReturnValue) == 0x000008, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, CallFunc_SphericalToCartesianCoordinates_NewCartesianCoord) == 0x000014, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::CallFunc_SphericalToCartesianCoordinates_NewCartesianCoord' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000020, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000AC, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, CallFunc_Not_PreBool_ReturnValue) == 0x000138, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x00013C, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0001C8, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x0001D0, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x0001D8, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001E0, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x0001E4, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x0001E8, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Pawn_Solo_Play) == 0x000278, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Pawn_Solo_Play' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'LastRouteSwingTrap_BP_C_ExecuteUbergraph_LastRouteSwingTrap_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LastRouteSwingTrap_BP.LastRouteSwingTrap_BP_C.BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'LastRouteSwingTrap_BP_C_BndEvt__LastRouteSwingTrap_BP_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function LastRouteSwingTrap_BP.LastRouteSwingTrap_BP_C.UserConstructionScript
// 0x02A0 (0x02A0 - 0x0000)
struct LastRouteSwingTrap_BP_C_UserConstructionScript final
{
public:
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0034(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00CC(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SphericalToCartesianCoordinates_NewCartesianCoord; // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x016C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         ___int_Variable;                                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_3;          // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_228[0x8];                                      // 0x0228(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0230(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LastRouteSwingTrap_BP_C_UserConstructionScript) == 0x000010, "Wrong alignment on LastRouteSwingTrap_BP_C_UserConstructionScript");
static_assert(sizeof(LastRouteSwingTrap_BP_C_UserConstructionScript) == 0x0002A0, "Wrong size on LastRouteSwingTrap_BP_C_UserConstructionScript");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000000, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_FCeil_ReturnValue) == 0x000004, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_FCeil_ReturnValue_1) == 0x000010, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000014, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000018, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000034, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue_1) == 0x0000C0, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000CC, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000158, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_SphericalToCartesianCoordinates_NewCartesianCoord) == 0x00015C, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_SphericalToCartesianCoordinates_NewCartesianCoord' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000168, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00016C, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, ___int_Variable) == 0x0001F8, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::___int_Variable' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0001FC, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x000200, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue_2) == 0x000204, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue) == 0x000210, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue_3) == 0x000214, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000218, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x00021C, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x000230, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000260, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_AddInstance_ReturnValue) == 0x000264, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_GetLocalBounds_Min) == 0x000268, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_GetLocalBounds_Max) == 0x000274, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000280, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000284, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000288, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00028C, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_2) == 0x000290, "Member 'LastRouteSwingTrap_BP_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");

// Function LastRouteSwingTrap_BP.LastRouteSwingTrap_BP_C.SphericalToCartesianCoordinates
// 0x0050 (0x0050 - 0x0000)
struct LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates final
{
public:
	float                                         R;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Polar;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Azimuthal;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewCartesianCoord;                                 // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue_1;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue_1;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue_2;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates) == 0x000004, "Wrong alignment on LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates");
static_assert(sizeof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates) == 0x000050, "Wrong size on LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, R) == 0x000000, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::R' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, Polar) == 0x000004, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::Polar' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, Azimuthal) == 0x000008, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::Azimuthal' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, NewCartesianCoord) == 0x00000C, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::NewCartesianCoord' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, CallFunc_DegSin_ReturnValue) == 0x000018, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, CallFunc_DegSin_ReturnValue_1) == 0x00001C, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::CallFunc_DegSin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, CallFunc_DegCos_ReturnValue) == 0x000020, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, CallFunc_DegCos_ReturnValue_1) == 0x000024, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000030, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000034, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, CallFunc_DegCos_ReturnValue_2) == 0x000038, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::CallFunc_DegCos_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00003C, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000040, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'LastRouteSwingTrap_BP_C_SphericalToCartesianCoordinates::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function LastRouteSwingTrap_BP.LastRouteSwingTrap_BP_C.TrapHeadMatOverride
// 0x0010 (0x0010 - 0x0000)
struct LastRouteSwingTrap_BP_C_TrapHeadMatOverride final
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LastRouteSwingTrap_BP_C_TrapHeadMatOverride) == 0x000008, "Wrong alignment on LastRouteSwingTrap_BP_C_TrapHeadMatOverride");
static_assert(sizeof(LastRouteSwingTrap_BP_C_TrapHeadMatOverride) == 0x000010, "Wrong size on LastRouteSwingTrap_BP_C_TrapHeadMatOverride");
static_assert(offsetof(LastRouteSwingTrap_BP_C_TrapHeadMatOverride, Material) == 0x000000, "Member 'LastRouteSwingTrap_BP_C_TrapHeadMatOverride::Material' has a wrong offset!");
static_assert(offsetof(LastRouteSwingTrap_BP_C_TrapHeadMatOverride, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'LastRouteSwingTrap_BP_C_TrapHeadMatOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

