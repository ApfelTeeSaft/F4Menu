#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DrunkNPC_Pawn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DynamicNode_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DrunkNPC_Pawn.DrunkNPC_Pawn_C
// 0x0020 (0x05E0 - 0x05C0)
class ADrunkNPC_Pawn_C final : public ADNCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	bool                                          Dead;                                              // 0x05C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Anim;                                              // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DrunkNPC_Pawn(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Reset();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DrunkNPC_Pawn_C">();
	}
	static class ADrunkNPC_Pawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADrunkNPC_Pawn_C>();
	}
};
static_assert(alignof(ADrunkNPC_Pawn_C) == 0x000010, "Wrong alignment on ADrunkNPC_Pawn_C");
static_assert(sizeof(ADrunkNPC_Pawn_C) == 0x0005E0, "Wrong size on ADrunkNPC_Pawn_C");
static_assert(offsetof(ADrunkNPC_Pawn_C, UberGraphFrame) == 0x0005C0, "Member 'ADrunkNPC_Pawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADrunkNPC_Pawn_C, Dead) == 0x0005C8, "Member 'ADrunkNPC_Pawn_C::Dead' has a wrong offset!");
static_assert(offsetof(ADrunkNPC_Pawn_C, Anim) == 0x0005D0, "Member 'ADrunkNPC_Pawn_C::Anim' has a wrong offset!");

}

