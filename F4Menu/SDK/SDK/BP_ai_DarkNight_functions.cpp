#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ai_DarkNight

#include "Basic.hpp"

#include "BP_ai_DarkNight_classes.hpp"
#include "BP_ai_DarkNight_parameters.hpp"


namespace SDK
{

// Function BP_ai_DarkNight.BP_ai_DarkNight_C.ExecuteUbergraph_BP_ai_DarkNight
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::ExecuteUbergraph_BP_ai_DarkNight(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "ExecuteUbergraph_BP_ai_DarkNight");

	Params::BP_ai_DarkNight_C_ExecuteUbergraph_BP_ai_DarkNight Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_40
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::InpAxisEvt_LookUp_K2Node_InputAxisEvent_40(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "InpAxisEvt_LookUp_K2Node_InputAxisEvent_40");

	Params::BP_ai_DarkNight_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_47
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::InpAxisEvt_Turn_K2Node_InputAxisEvent_47(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "InpAxisEvt_Turn_K2Node_InputAxisEvent_47");

	Params::BP_ai_DarkNight_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79");

	Params::BP_ai_DarkNight_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90");

	Params::BP_ai_DarkNight_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38");

	Params::BP_ai_DarkNight_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53");

	Params::BP_ai_DarkNight_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.SetRotationRateTo_Null
// (BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::SetRotationRateTo_Null()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "SetRotationRateTo_Null");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.SetRotationRateTo_Current
// (BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::SetRotationRateTo_Current()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "SetRotationRateTo_Current");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.WallJumpProcessStart
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::WallJumpProcessStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "WallJumpProcessStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.Server_IkSet
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can_                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ai_DarkNight_C::Server_IkSet(bool Can_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "Server_IkSet");

	Params::BP_ai_DarkNight_C_Server_IkSet Parms{};

	Parms.Can_ = Can_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.Server_MontageSet
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageStanding_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::Server_MontageSet(class UAnimMontage* MontageStanding_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "Server_MontageSet");

	Params::BP_ai_DarkNight_C_Server_MontageSet Parms{};

	Parms.MontageStanding_0 = MontageStanding_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.Server_RagdollSwitch
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ai_DarkNight_C::Server_RagdollSwitch(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "Server_RagdollSwitch");

	Params::BP_ai_DarkNight_C_Server_RagdollSwitch Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.All_RagdollSwitch
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ai_DarkNight_C::All_RagdollSwitch(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "All_RagdollSwitch");

	Params::BP_ai_DarkNight_C_All_RagdollSwitch Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.Server_StandingProcess
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ai_DarkNight_C::Server_StandingProcess(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "Server_StandingProcess");

	Params::BP_ai_DarkNight_C_Server_StandingProcess Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.All_StandingProcess
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ai_DarkNight_C::All_StandingProcess(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "All_StandingProcess");

	Params::BP_ai_DarkNight_C_All_StandingProcess Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.All_MontageSet
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageStanding_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::All_MontageSet(class UAnimMontage* MontageStanding_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "All_MontageSet");

	Params::BP_ai_DarkNight_C_All_MontageSet Parms{};

	Parms.MontageStanding_0 = MontageStanding_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.ToRagdoll
// (BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::ToRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "ToRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.All_CapsuleUpdateLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::All_CapsuleUpdateLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "All_CapsuleUpdateLocation");

	Params::BP_ai_DarkNight_C_All_CapsuleUpdateLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.Server_CapsuleUpdate
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::Server_CapsuleUpdate(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "Server_CapsuleUpdate");

	Params::BP_ai_DarkNight_C_Server_CapsuleUpdate Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.Client_GetMeshVelocity
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::Client_GetMeshVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "Client_GetMeshVelocity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.Server_SetMeshVelocity
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::Server_SetMeshVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "Server_SetMeshVelocity");

	Params::BP_ai_DarkNight_C_Server_SetMeshVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.All_SetMeshVelocity
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::All_SetMeshVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "All_SetMeshVelocity");

	Params::BP_ai_DarkNight_C_All_SetMeshVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.ClientGetCapsuleLocation
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::ClientGetCapsuleLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "ClientGetCapsuleLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.Client_RepRagdoll
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::Client_RepRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "Client_RepRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.Server_RepRagdoll
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          LinearVelocity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          AngularVelocity                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::Server_RepRagdoll(const struct FVector& LinearVelocity, const struct FVector& AngularVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "Server_RepRagdoll");

	Params::BP_ai_DarkNight_C_Server_RepRagdoll Parms{};

	Parms.LinearVelocity = std::move(LinearVelocity);
	Parms.AngularVelocity = std::move(AngularVelocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.Server_StandingDetect
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::Server_StandingDetect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "Server_StandingDetect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.All_StandingDetect
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::All_StandingDetect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "All_StandingDetect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.Server_HeadRotation
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::Server_HeadRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "Server_HeadRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.Server_GetYawRotation
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::Server_GetYawRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "Server_GetYawRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.ClimbRelease
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::ClimbRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "ClimbRelease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.ClimbEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::ClimbEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "ClimbEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.ClimbLocation
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::ClimbLocation(const struct FVector& Start, const struct FVector& End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "ClimbLocation");

	Params::BP_ai_DarkNight_C_ClimbLocation Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.GiveDamageReset
// (BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::GiveDamageReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "GiveDamageReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ai_DarkNight_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.AI_CollisionTypeOri
// (BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::AI_CollisionTypeOri()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "AI_CollisionTypeOri");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.AI_CollisionTypeChange
// (BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::AI_CollisionTypeChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "AI_CollisionTypeChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.BndEvt__BP_ai_DarkNight_HitCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ai_DarkNight_C::BndEvt__BP_ai_DarkNight_HitCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "BndEvt__BP_ai_DarkNight_HitCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_ai_DarkNight_C_BndEvt__BP_ai_DarkNight_HitCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.UltimateKill_AI
// (BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::UltimateKill_AI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "UltimateKill_AI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.BndEvt__Box1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ai_DarkNight_C::BndEvt__Box1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "BndEvt__Box1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_ai_DarkNight_C_BndEvt__Box1_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.go
// (BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::Go()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "go");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ai_DarkNight_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "ReceiveHit");

	Params::BP_ai_DarkNight_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "ReceiveTick");

	Params::BP_ai_DarkNight_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ai_DarkNight_C::BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_ai_DarkNight_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_ai_DarkNight_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ai_DarkNight_C::BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_ai_DarkNight_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ai_DarkNight_C::BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::BP_ai_DarkNight_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_ai_DarkNight_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "OnLanded");

	Params::BP_ai_DarkNight_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.InpActEvt_Jump_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::InpActEvt_Jump_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "InpActEvt_Jump_K2Node_InputActionEvent_0");

	Params::BP_ai_DarkNight_C_InpActEvt_Jump_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.InpActEvt_Jump_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::InpActEvt_Jump_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "InpActEvt_Jump_K2Node_InputActionEvent_1");

	Params::BP_ai_DarkNight_C_InpActEvt_Jump_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.InpTchEvt_Pressed
// (BlueprintEvent)
// Parameters:
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::InpTchEvt_Pressed(ETouchIndex FingerIndex, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "InpTchEvt_Pressed");

	Params::BP_ai_DarkNight_C_InpTchEvt_Pressed Parms{};

	Parms.FingerIndex = FingerIndex;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.InpTchEvt_Released
// (BlueprintEvent)
// Parameters:
// ETouchIndex                             FingerIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::InpTchEvt_Released(ETouchIndex FingerIndex, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "InpTchEvt_Released");

	Params::BP_ai_DarkNight_C_InpTchEvt_Released Parms{};

	Parms.FingerIndex = FingerIndex;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.InpActEvt_C_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::InpActEvt_C_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "InpActEvt_C_K2Node_InputKeyEvent_0");

	Params::BP_ai_DarkNight_C_InpActEvt_C_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.InpActEvt_R_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::InpActEvt_R_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "InpActEvt_R_K2Node_InputKeyEvent_1");

	Params::BP_ai_DarkNight_C_InpActEvt_R_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.OnSuccess_5B3FF67B467EC668F9C2DCA185FA7B72
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::OnSuccess_5B3FF67B467EC668F9C2DCA185FA7B72(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "OnSuccess_5B3FF67B467EC668F9C2DCA185FA7B72");

	Params::BP_ai_DarkNight_C_OnSuccess_5B3FF67B467EC668F9C2DCA185FA7B72 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.OnFail_5B3FF67B467EC668F9C2DCA185FA7B72
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::OnFail_5B3FF67B467EC668F9C2DCA185FA7B72(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "OnFail_5B3FF67B467EC668F9C2DCA185FA7B72");

	Params::BP_ai_DarkNight_C_OnFail_5B3FF67B467EC668F9C2DCA185FA7B72 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.PhysOut__UpdateFunc
// (BlueprintEvent)

void ABP_ai_DarkNight_C::PhysOut__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "PhysOut__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.PhysOut__FinishedFunc
// (BlueprintEvent)

void ABP_ai_DarkNight_C::PhysOut__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "PhysOut__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.F_Owner_SetCameraMode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::F_Owner_SetCameraMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "F_Owner_SetCameraMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.F_GetLoockRotation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::F_GetLoockRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "F_GetLoockRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.F_SetRotationPawnFromControll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Rotate_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ai_DarkNight_C::F_SetRotationPawnFromControll(bool Rotate_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "F_SetRotationPawnFromControll");

	Params::BP_ai_DarkNight_C_F_SetRotationPawnFromControll Parms{};

	Parms.Rotate_ = Rotate_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.F_GetCanWallJump
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can_                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ai_DarkNight_C::F_GetCanWallJump(bool* Can_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "F_GetCanWallJump");

	Params::BP_ai_DarkNight_C_F_GetCanWallJump Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Can_ != nullptr)
		*Can_ = Parms.Can_;
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.F_JumpPressed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ai_DarkNight_C::F_JumpPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "F_JumpPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.F_SetCanMoving
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can_                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ai_DarkNight_C::F_SetCanMoving(bool Can_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "F_SetCanMoving");

	Params::BP_ai_DarkNight_C_F_SetCanMoving Parms{};

	Parms.Can_ = Can_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.F_GetHitResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    CanRagdol_                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ai_DarkNight_C::F_GetHitResult(class UPrimitiveComponent* Component, const struct FHitResult& Hit, bool* CanRagdol_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "F_GetHitResult");

	Params::BP_ai_DarkNight_C_F_GetHitResult Parms{};

	Parms.Component = Component;
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);

	if (CanRagdol_ != nullptr)
		*CanRagdol_ = Parms.CanRagdol_;
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.F_GetOverlapResult
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Comp                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanRagdol_                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::F_GetOverlapResult(class UObject* Object, class UPrimitiveComponent* Comp, bool* CanRagdol_, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "F_GetOverlapResult");

	Params::BP_ai_DarkNight_C_F_GetOverlapResult Parms{};

	Parms.Object = Object;
	Parms.Comp = Comp;

	UObject::ProcessEvent(Func, &Parms);

	if (CanRagdol_ != nullptr)
		*CanRagdol_ = Parms.CanRagdol_;

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.F_SetInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   ToMode                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowCursos_                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ai_DarkNight_C::F_SetInputMode(uint8 ToMode, class UWidget* Widget, bool ShowCursos_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "F_SetInputMode");

	Params::BP_ai_DarkNight_C_F_SetInputMode Parms{};

	Parms.ToMode = ToMode;
	Parms.Widget = Widget;
	Parms.ShowCursos_ = ShowCursos_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ai_DarkNight.BP_ai_DarkNight_C.F_GetFVectorAndRightVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ForwardVector                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          RightVector                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ai_DarkNight_C::F_GetFVectorAndRightVector(struct FVector* ForwardVector, struct FVector* RightVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ai_DarkNight_C", "F_GetFVectorAndRightVector");

	Params::BP_ai_DarkNight_C_F_GetFVectorAndRightVector Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ForwardVector != nullptr)
		*ForwardVector = std::move(Parms.ForwardVector);

	if (RightVector != nullptr)
		*RightVector = std::move(Parms.RightVector);
}

}

