#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SwingFire_Trap_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SwingFire_Trap_BP.SwingFire_Trap_BP_C
// 0x0068 (0x0288 - 0x0220)
class ASwingFire_Trap_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               Par_MissileTrails2;                                // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Fire;                                            // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       P_Spawn;                                           // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCableComponent*                        Rope;                                              // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BirdCage;                                          // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Chain_Holder;                                      // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Body;                                              // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Pile2;                                             // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Move_Alpha_E7CD42C04F9C444568BFDA84929F9E9D;       // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            Move__Direction_E7CD42C04F9C444568BFDA84929F9E9D;  // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Move;                                              // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SwingFire_Trap_BP(int32 EntryPoint);
	void Stop();
	void Active();
	void ReceiveBeginPlay();
	void Move__UpdateFunc();
	void Move__FinishedFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SwingFire_Trap_BP_C">();
	}
	static class ASwingFire_Trap_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASwingFire_Trap_BP_C>();
	}
};
static_assert(alignof(ASwingFire_Trap_BP_C) == 0x000008, "Wrong alignment on ASwingFire_Trap_BP_C");
static_assert(sizeof(ASwingFire_Trap_BP_C) == 0x000288, "Wrong size on ASwingFire_Trap_BP_C");
static_assert(offsetof(ASwingFire_Trap_BP_C, UberGraphFrame) == 0x000220, "Member 'ASwingFire_Trap_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, Par_MissileTrails2) == 0x000228, "Member 'ASwingFire_Trap_BP_C::Par_MissileTrails2' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, P_Fire) == 0x000230, "Member 'ASwingFire_Trap_BP_C::P_Fire' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, P_Spawn) == 0x000238, "Member 'ASwingFire_Trap_BP_C::P_Spawn' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, RotatingMovement) == 0x000240, "Member 'ASwingFire_Trap_BP_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, Rope) == 0x000248, "Member 'ASwingFire_Trap_BP_C::Rope' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, BirdCage) == 0x000250, "Member 'ASwingFire_Trap_BP_C::BirdCage' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, Chain_Holder) == 0x000258, "Member 'ASwingFire_Trap_BP_C::Chain_Holder' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, Body) == 0x000260, "Member 'ASwingFire_Trap_BP_C::Body' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, Pile2) == 0x000268, "Member 'ASwingFire_Trap_BP_C::Pile2' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, DefaultSceneRoot) == 0x000270, "Member 'ASwingFire_Trap_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, Move_Alpha_E7CD42C04F9C444568BFDA84929F9E9D) == 0x000278, "Member 'ASwingFire_Trap_BP_C::Move_Alpha_E7CD42C04F9C444568BFDA84929F9E9D' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, Move__Direction_E7CD42C04F9C444568BFDA84929F9E9D) == 0x00027C, "Member 'ASwingFire_Trap_BP_C::Move__Direction_E7CD42C04F9C444568BFDA84929F9E9D' has a wrong offset!");
static_assert(offsetof(ASwingFire_Trap_BP_C, Move) == 0x000280, "Member 'ASwingFire_Trap_BP_C::Move' has a wrong offset!");

}

