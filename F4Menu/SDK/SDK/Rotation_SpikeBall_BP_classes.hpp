#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Rotation_SpikeBall_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Rotation_SpikeBall_BP.Rotation_SpikeBall_BP_C
// 0x0040 (0x0260 - 0x0220)
class ARotation_SpikeBall_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   ChainHolder;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraint;                                 // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Spike_Ball;                                     // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCableComponent*                        Cable;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Root;                                              // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Gear;                                              // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Rotation_SpikeBall_BP(int32 EntryPoint);
	void Stop();
	void Active();
	void BndEvt__Rotation_SpikeBall_BP_SM_Spike_Ball_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Rotation_SpikeBall_BP_C">();
	}
	static class ARotation_SpikeBall_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARotation_SpikeBall_BP_C>();
	}
};
static_assert(alignof(ARotation_SpikeBall_BP_C) == 0x000008, "Wrong alignment on ARotation_SpikeBall_BP_C");
static_assert(sizeof(ARotation_SpikeBall_BP_C) == 0x000260, "Wrong size on ARotation_SpikeBall_BP_C");
static_assert(offsetof(ARotation_SpikeBall_BP_C, UberGraphFrame) == 0x000220, "Member 'ARotation_SpikeBall_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ARotation_SpikeBall_BP_C, ChainHolder) == 0x000228, "Member 'ARotation_SpikeBall_BP_C::ChainHolder' has a wrong offset!");
static_assert(offsetof(ARotation_SpikeBall_BP_C, RotatingMovement) == 0x000230, "Member 'ARotation_SpikeBall_BP_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(ARotation_SpikeBall_BP_C, PhysicsConstraint) == 0x000238, "Member 'ARotation_SpikeBall_BP_C::PhysicsConstraint' has a wrong offset!");
static_assert(offsetof(ARotation_SpikeBall_BP_C, SM_Spike_Ball) == 0x000240, "Member 'ARotation_SpikeBall_BP_C::SM_Spike_Ball' has a wrong offset!");
static_assert(offsetof(ARotation_SpikeBall_BP_C, Cable) == 0x000248, "Member 'ARotation_SpikeBall_BP_C::Cable' has a wrong offset!");
static_assert(offsetof(ARotation_SpikeBall_BP_C, Root) == 0x000250, "Member 'ARotation_SpikeBall_BP_C::Root' has a wrong offset!");
static_assert(offsetof(ARotation_SpikeBall_BP_C, Gear) == 0x000258, "Member 'ARotation_SpikeBall_BP_C::Gear' has a wrong offset!");

}

