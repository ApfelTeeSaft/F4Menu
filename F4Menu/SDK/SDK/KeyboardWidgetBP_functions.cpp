#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KeyboardWidgetBP

#include "Basic.hpp"

#include "KeyboardWidgetBP_classes.hpp"
#include "KeyboardWidgetBP_parameters.hpp"


namespace SDK
{

// Function KeyboardWidgetBP.KeyboardWidgetBP_C.OnHoveredKeyboardWidgetKey__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UKeyboardWidgetBP_C::OnHoveredKeyboardWidgetKey__DelegateSignature(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyboardWidgetBP_C", "OnHoveredKeyboardWidgetKey__DelegateSignature");

	Params::KeyboardWidgetBP_C_OnHoveredKeyboardWidgetKey__DelegateSignature Parms{};

	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function KeyboardWidgetBP.KeyboardWidgetBP_C.ExecuteUbergraph_KeyboardWidgetBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UKeyboardWidgetBP_C::ExecuteUbergraph_KeyboardWidgetBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyboardWidgetBP_C", "ExecuteUbergraph_KeyboardWidgetBP");

	Params::KeyboardWidgetBP_C_ExecuteUbergraph_KeyboardWidgetBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function KeyboardWidgetBP.KeyboardWidgetBP_C.OnHoverKeyboardKey
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UKeyboardWidgetBP_C::OnHoverKeyboardKey(const struct FKey& InKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyboardWidgetBP_C", "OnHoverKeyboardKey");

	Params::KeyboardWidgetBP_C_OnHoverKeyboardKey Parms{};

	Parms.InKey = std::move(InKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function KeyboardWidgetBP.KeyboardWidgetBP_C.OnGlobalSettingsApply
// (BlueprintCallable, BlueprintEvent)

void UKeyboardWidgetBP_C::OnGlobalSettingsApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyboardWidgetBP_C", "OnGlobalSettingsApply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function KeyboardWidgetBP.KeyboardWidgetBP_C.HighlightKey
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bHighlight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bFocusHighlight                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UKeyboardWidgetBP_C::HighlightKey(const struct FKey& InKey, bool bHighlight, bool bFocusHighlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyboardWidgetBP_C", "HighlightKey");

	Params::KeyboardWidgetBP_C_HighlightKey Parms{};

	Parms.InKey = std::move(InKey);
	Parms.bHighlight = bHighlight;
	Parms.bFocusHighlight = bFocusHighlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function KeyboardWidgetBP.KeyboardWidgetBP_C.SetGlobalSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UKeyboardWidgetBP_C::SetGlobalSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyboardWidgetBP_C", "SetGlobalSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function KeyboardWidgetBP.KeyboardWidgetBP_C.SetupKeyboardKeyArray
// (Public, BlueprintCallable, BlueprintEvent)

void UKeyboardWidgetBP_C::SetupKeyboardKeyArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyboardWidgetBP_C", "SetupKeyboardKeyArray");

	UObject::ProcessEvent(Func, nullptr);
}


// Function KeyboardWidgetBP.KeyboardWidgetBP_C.ResetKeyboardVisualization
// (Public, BlueprintCallable, BlueprintEvent)

void UKeyboardWidgetBP_C::ResetKeyboardVisualization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeyboardWidgetBP_C", "ResetKeyboardVisualization");

	UObject::ProcessEvent(Func, nullptr);
}

}

