#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GlobalInteractableUserWidget

#include "Basic.hpp"

#include "GlobalInteractableUserWidget_classes.hpp"
#include "GlobalInteractableUserWidget_parameters.hpp"


namespace SDK
{

// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnChangeInputDeviceUI__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsGamepadBeingUsed_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::OnChangeInputDeviceUI__DelegateSignature(bool bIsGamepadBeingUsed_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnChangeInputDeviceUI__DelegateSignature");

	Params::GlobalInteractableUserWidget_C_OnChangeInputDeviceUI__DelegateSignature Parms{};

	Parms.bIsGamepadBeingUsed_0 = bIsGamepadBeingUsed_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.ExecuteUbergraph_GlobalInteractableUserWidget
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::ExecuteUbergraph_GlobalInteractableUserWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "ExecuteUbergraph_GlobalInteractableUserWidget");

	Params::GlobalInteractableUserWidget_C_ExecuteUbergraph_GlobalInteractableUserWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "PreConstruct");

	Params::GlobalInteractableUserWidget_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnNavigationCooldownStart
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnNavigationCooldownStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnNavigationCooldownStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedExtra
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedExtra()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedExtra");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedReset
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedBack
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedSelect
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedLeft
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedRight
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedDown
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedUp
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnGlobalSettingsApply
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnGlobalSettingsApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnGlobalSettingsApply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnPressedAnyKey
// (BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::OnPressedAnyKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnPressedAnyKey");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetTextAppearence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextBlock*                       TextObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateFontInfo                   Font                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::SetTextAppearence(class UTextBlock* TextObject, const struct FSlateFontInfo& Font, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetTextAppearence");

	Params::GlobalInteractableUserWidget_C_SetTextAppearence Parms{};

	Parms.TextObject = TextObject;
	Parms.Font = std::move(Font);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetEditableTextAppearence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEditableText*                    EditableText                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateFontInfo                   Font                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::SetEditableTextAppearence(class UEditableText* EditableText, const struct FSlateFontInfo& Font, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetEditableTextAppearence");

	Params::GlobalInteractableUserWidget_C_SetEditableTextAppearence Parms{};

	Parms.EditableText = EditableText;
	Parms.Font = std::move(Font);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetGlobalGeneralData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bPlayFadeAnimations_0                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   PlayFadeAnimationLength_0                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIntroLogosSkippable_0                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bIntroEnabled_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::GetGlobalGeneralData(bool* bPlayFadeAnimations_0, float* PlayFadeAnimationLength_0, bool* bIntroLogosSkippable_0, bool* bIntroEnabled_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetGlobalGeneralData");

	Params::GlobalInteractableUserWidget_C_GetGlobalGeneralData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPlayFadeAnimations_0 != nullptr)
		*bPlayFadeAnimations_0 = Parms.bPlayFadeAnimations_0;

	if (PlayFadeAnimationLength_0 != nullptr)
		*PlayFadeAnimationLength_0 = Parms.PlayFadeAnimationLength_0;

	if (bIntroLogosSkippable_0 != nullptr)
		*bIntroLogosSkippable_0 = Parms.bIntroLogosSkippable_0;

	if (bIntroEnabled_0 != nullptr)
		*bIntroEnabled_0 = Parms.bIntroEnabled_0;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetGlobalFonts
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateFontInfo                   MainFont_0                                             (Parm, OutParm, HasGetValueTypeHash)
// struct FSlateFontInfo                   SmallTitleFont_0                                       (Parm, OutParm, HasGetValueTypeHash)
// struct FSlateFontInfo                   MediumTitleFont_0                                      (Parm, OutParm, HasGetValueTypeHash)
// struct FSlateFontInfo                   LargeTitleFont_0                                       (Parm, OutParm, HasGetValueTypeHash)
// struct FSlateFontInfo                   ValueFont_0                                            (Parm, OutParm, HasGetValueTypeHash)
// bool                                    OnlyUppercase_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::GetGlobalFonts(struct FSlateFontInfo* MainFont_0, struct FSlateFontInfo* SmallTitleFont_0, struct FSlateFontInfo* MediumTitleFont_0, struct FSlateFontInfo* LargeTitleFont_0, struct FSlateFontInfo* ValueFont_0, bool* OnlyUppercase_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetGlobalFonts");

	Params::GlobalInteractableUserWidget_C_GetGlobalFonts Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MainFont_0 != nullptr)
		*MainFont_0 = std::move(Parms.MainFont_0);

	if (SmallTitleFont_0 != nullptr)
		*SmallTitleFont_0 = std::move(Parms.SmallTitleFont_0);

	if (MediumTitleFont_0 != nullptr)
		*MediumTitleFont_0 = std::move(Parms.MediumTitleFont_0);

	if (LargeTitleFont_0 != nullptr)
		*LargeTitleFont_0 = std::move(Parms.LargeTitleFont_0);

	if (ValueFont_0 != nullptr)
		*ValueFont_0 = std::move(Parms.ValueFont_0);

	if (OnlyUppercase_0 != nullptr)
		*OnlyUppercase_0 = Parms.OnlyUppercase_0;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetGlobalSounds
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USoundCue*                        SelectSound_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        BackSound_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        HoverSound_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        ChangeSound_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        SliderSound_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        BackgroundMusic_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        CreditsMusic_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::GetGlobalSounds(class USoundCue** SelectSound_0, class USoundCue** BackSound_0, class USoundCue** HoverSound_0, class USoundCue** ChangeSound_0, class USoundCue** SliderSound_0, class USoundCue** BackgroundMusic_0, class USoundCue** CreditsMusic_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetGlobalSounds");

	Params::GlobalInteractableUserWidget_C_GetGlobalSounds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectSound_0 != nullptr)
		*SelectSound_0 = Parms.SelectSound_0;

	if (BackSound_0 != nullptr)
		*BackSound_0 = Parms.BackSound_0;

	if (HoverSound_0 != nullptr)
		*HoverSound_0 = Parms.HoverSound_0;

	if (ChangeSound_0 != nullptr)
		*ChangeSound_0 = Parms.ChangeSound_0;

	if (SliderSound_0 != nullptr)
		*SliderSound_0 = Parms.SliderSound_0;

	if (BackgroundMusic_0 != nullptr)
		*BackgroundMusic_0 = Parms.BackgroundMusic_0;

	if (CreditsMusic_0 != nullptr)
		*CreditsMusic_0 = Parms.CreditsMusic_0;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetGlobalColors
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     MainColor_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     HighlightColor_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     HighlightExtraColor_0                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     MenuBackgroundColor_0                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     WidgetBackgroundColor_0                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     SymbolColor_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     SubtleColor_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     DecisionButtonColor_0                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     SliderBackgroundColor_0                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGlobalInteractableUserWidget_C::GetGlobalColors(struct FLinearColor* MainColor_0, struct FLinearColor* HighlightColor_0, struct FLinearColor* HighlightExtraColor_0, struct FLinearColor* MenuBackgroundColor_0, struct FLinearColor* WidgetBackgroundColor_0, struct FLinearColor* SymbolColor_0, struct FLinearColor* SubtleColor_0, struct FLinearColor* DecisionButtonColor_0, struct FLinearColor* SliderBackgroundColor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetGlobalColors");

	Params::GlobalInteractableUserWidget_C_GetGlobalColors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MainColor_0 != nullptr)
		*MainColor_0 = std::move(Parms.MainColor_0);

	if (HighlightColor_0 != nullptr)
		*HighlightColor_0 = std::move(Parms.HighlightColor_0);

	if (HighlightExtraColor_0 != nullptr)
		*HighlightExtraColor_0 = std::move(Parms.HighlightExtraColor_0);

	if (MenuBackgroundColor_0 != nullptr)
		*MenuBackgroundColor_0 = std::move(Parms.MenuBackgroundColor_0);

	if (WidgetBackgroundColor_0 != nullptr)
		*WidgetBackgroundColor_0 = std::move(Parms.WidgetBackgroundColor_0);

	if (SymbolColor_0 != nullptr)
		*SymbolColor_0 = std::move(Parms.SymbolColor_0);

	if (SubtleColor_0 != nullptr)
		*SubtleColor_0 = std::move(Parms.SubtleColor_0);

	if (DecisionButtonColor_0 != nullptr)
		*DecisionButtonColor_0 = std::move(Parms.DecisionButtonColor_0);

	if (SliderBackgroundColor_0 != nullptr)
		*SliderBackgroundColor_0 = std::move(Parms.SliderBackgroundColor_0);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetGlobalVariableValues
// (Public, BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::SetGlobalVariableValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetGlobalVariableValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetCurrentInputDeviceUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bIsMouseInput                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::SetCurrentInputDeviceUI(const struct FKey& InKey, bool bIsMouseInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetCurrentInputDeviceUI");

	Params::GlobalInteractableUserWidget_C_SetCurrentInputDeviceUI Parms{};

	Parms.InKey = std::move(InKey);
	Parms.bIsMouseInput = bIsMouseInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetCurrentInputDeviceUI
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIsGamepadBeingUsed_0                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::GetCurrentInputDeviceUI(bool* bIsGamepadBeingUsed_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetCurrentInputDeviceUI");

	Params::GlobalInteractableUserWidget_C_GetCurrentInputDeviceUI Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsGamepadBeingUsed_0 != nullptr)
		*bIsGamepadBeingUsed_0 = Parms.bIsGamepadBeingUsed_0;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnMouseMove
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UGlobalInteractableUserWidget_C::OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnMouseMove");

	Params::GlobalInteractableUserWidget_C_OnMouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UGlobalInteractableUserWidget_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnMouseButtonDown");

	Params::GlobalInteractableUserWidget_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetActiveMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsActiveMenu_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::SetActiveMenu(bool bIsActiveMenu_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetActiveMenu");

	Params::GlobalInteractableUserWidget_C_SetActiveMenu Parms{};

	Parms.bIsActiveMenu_0 = bIsActiveMenu_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetIsActiveMenu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIsActiveMenu_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::GetIsActiveMenu(bool* bIsActiveMenu_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetIsActiveMenu");

	Params::GlobalInteractableUserWidget_C_GetIsActiveMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsActiveMenu_0 != nullptr)
		*bIsActiveMenu_0 = Parms.bIsActiveMenu_0;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UGlobalInteractableUserWidget_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnKeyDown");

	Params::GlobalInteractableUserWidget_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetAllowNavigation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAllowNavigation_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::SetAllowNavigation(bool bAllowNavigation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetAllowNavigation");

	Params::GlobalInteractableUserWidget_C_SetAllowNavigation Parms{};

	Parms.bAllowNavigation_0 = bAllowNavigation_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetAllowNavigation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bAllowNavigation_0                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::GetAllowNavigation(bool* bAllowNavigation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetAllowNavigation");

	Params::GlobalInteractableUserWidget_C_GetAllowNavigation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAllowNavigation_0 != nullptr)
		*bAllowNavigation_0 = Parms.bAllowNavigation_0;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UGlobalInteractableUserWidget_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "OnKeyUp");

	Params::GlobalInteractableUserWidget_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetIsMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsMenu_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::SetIsMenu(bool bIsMenu_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetIsMenu");

	Params::GlobalInteractableUserWidget_C_SetIsMenu Parms{};

	Parms.bIsMenu_0 = bIsMenu_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetIsMenu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIsMenu_0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::GetIsMenu(bool* bIsMenu_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetIsMenu");

	Params::GlobalInteractableUserWidget_C_GetIsMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsMenu_0 != nullptr)
		*bIsMenu_0 = Parms.bIsMenu_0;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.GetIsGamepadBeingUsed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIsGamepadBeingUsed_0                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::GetIsGamepadBeingUsed(bool* bIsGamepadBeingUsed_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "GetIsGamepadBeingUsed");

	Params::GlobalInteractableUserWidget_C_GetIsGamepadBeingUsed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsGamepadBeingUsed_0 != nullptr)
		*bIsGamepadBeingUsed_0 = Parms.bIsGamepadBeingUsed_0;
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetGlobalSettingsGeneral
// (Public, BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::SetGlobalSettingsGeneral()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetGlobalSettingsGeneral");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetGlobalSettingsColors
// (Public, BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::SetGlobalSettingsColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetGlobalSettingsColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetGlobalSettingsSounds
// (Public, BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::SetGlobalSettingsSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetGlobalSettingsSounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetGlobalSettingsFonts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::SetGlobalSettingsFonts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetGlobalSettingsFonts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetGlobalSettingsMenuKeybindings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGlobalInteractableUserWidget_C::SetGlobalSettingsMenuKeybindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetGlobalSettingsMenuKeybindings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.SetIsGamepadBeingUsed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsGamepadBeingUsed_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGlobalInteractableUserWidget_C::SetIsGamepadBeingUsed(bool bIsGamepadBeingUsed_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "SetIsGamepadBeingUsed");

	Params::GlobalInteractableUserWidget_C_SetIsGamepadBeingUsed Parms{};

	Parms.bIsGamepadBeingUsed_0 = bIsGamepadBeingUsed_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GlobalInteractableUserWidget.GlobalInteractableUserWidget_C.DelayAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidgetAnimation*                 DelayAnimation_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void()>                       Delegate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor)

void UGlobalInteractableUserWidget_C::DelayAnimation(class UWidgetAnimation* DelayAnimation_0, TDelegate<void()> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GlobalInteractableUserWidget_C", "DelayAnimation");

	Params::GlobalInteractableUserWidget_C_DelayAnimation Parms{};

	Parms.DelayAnimation_0 = DelayAnimation_0;
	Parms.Delegate = Delegate;

	UObject::ProcessEvent(Func, &Parms);
}

}

