#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ElevatorTrap_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ElevatorTrap_BP.ElevatorTrap_BP_C.ExecuteUbergraph_ElevatorTrap_BP
// 0x0190 (0x0190 - 0x0000)
struct ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0040(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ALTF4_Chick_Pawn_C*                 K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00F0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Pawn_SoloPlay_C*              K2Node_DynamicCast_AsBP_ALTF4_Pawn_Solo_Play;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP) == 0x000008, "Wrong alignment on ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP");
static_assert(sizeof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP) == 0x000190, "Wrong size on ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, EntryPoint) == 0x000000, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, CallFunc_BreakVector_X) == 0x000004, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, CallFunc_BreakVector_Y) == 0x000008, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, CallFunc_BreakVector_Z) == 0x00000C, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000020, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000028, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000030, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000038, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x00003C, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000040, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, CallFunc_MakeVector_ReturnValue_1) == 0x0000CC, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn) == 0x0000D8, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, CallFunc_VLerp_ReturnValue) == 0x0000E4, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000F0, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Pawn_Solo_Play) == 0x000180, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Pawn_Solo_Play' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'ElevatorTrap_BP_C_ExecuteUbergraph_ElevatorTrap_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ElevatorTrap_BP.ElevatorTrap_BP_C.BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'ElevatorTrap_BP_C_BndEvt__ElevatorTrap_BP_DeathZone_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function ElevatorTrap_BP.ElevatorTrap_BP_C.UserConstructionScript
// 0x000C (0x000C - 0x0000)
struct ElevatorTrap_BP_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ElevatorTrap_BP_C_UserConstructionScript) == 0x000004, "Wrong alignment on ElevatorTrap_BP_C_UserConstructionScript");
static_assert(sizeof(ElevatorTrap_BP_C_UserConstructionScript) == 0x00000C, "Wrong size on ElevatorTrap_BP_C_UserConstructionScript");
static_assert(offsetof(ElevatorTrap_BP_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'ElevatorTrap_BP_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

