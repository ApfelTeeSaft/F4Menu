#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pawn

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_Pawn.BP_Pawn_C.ExecuteUbergraph_BP_Pawn
// 0x0F70 (0x0F70 - 0x0000)
struct BP_Pawn_C_ExecuteUbergraph_BP_Pawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   ___struct_Variable;                                // 0x0058(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_IsClosed_Variable;                         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Has_Been_Initd_Variable;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0090(0x0018)(HasGetValueTypeHash)
	bool                                          ___bool_IsClosed_Variable_1;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_1;                 // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable_2;                       // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_2;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x00B0(0x0018)(HasGetValueTypeHash)
	bool                                          ___bool_IsClosed_Variable_3;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_3;                 // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit_1;                                // 0x00CC(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0204(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0294(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x02D0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363[0x5];                                      // 0x0363(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0378(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_385[0x3];                                      // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0388(0x0018)(HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x03C0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue_1;        // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0462(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0463(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0465(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0466(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Variable;                                  // 0x0467(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable_4;                       // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_4;                 // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46B[0x1];                                      // 0x046B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x046C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0478(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0480(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0490(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_5;                 // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_4;                 // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x04B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable_5;                       // 0x04BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x04BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_5;                 // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ___object_Variable;                                // 0x04E8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x04F8(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0584(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_585[0x3];                                      // 0x0585(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ___object_Variable_1;                              // 0x0588(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59A[0x2];                                      // 0x059A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x05A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x05B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x05BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x05C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x05E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0600(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x060C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_619[0x3];                                      // 0x0619(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetYawPitchFromVector_Yaw;                // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetYawPitchFromVector_Pitch;              // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0624(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0625(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_626[0x2];                                      // 0x0626(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0628(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0634(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_635[0x3];                                      // 0x0635(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0638(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ___struct_Variable_1;                              // 0x0644(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Can_;                           // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0652(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_653[0x5];                                      // 0x0653(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_MontageStanding_1;              // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_On__3;                          // 0x0661(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0662(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0663(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_On__2;                          // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETouchIndex                                   ___byte_Variable;                                  // 0x0665(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_On__1;                          // 0x0666(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_On_;                            // 0x0667(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_MontageStanding;                // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x0670(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x067C(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_709[0x3];                                      // 0x0709(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x070C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   K2Node_InputTouchEvent_FingerIndex;                // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_719[0x3];                                      // 0x0719(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_InputTouchEvent_Location;                   // 0x071C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETouchIndex                                   K2Node_InputTouchEvent_FingerIndex_1;              // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x3];                                      // 0x0729(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_InputTouchEvent_Location_1;                 // 0x072C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0738(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_F_GetFVectorAndRightVector_ForwardVector; // 0x0750(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_GetFVectorAndRightVector_RightVector;   // 0x075C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_GetFVectorAndRightVector_ForwardVector_1; // 0x0768(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_F_GetFVectorAndRightVector_RightVector_1; // 0x0774(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0780(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0790(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_799[0x3];                                      // 0x0799(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x079C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x07A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x07B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x07C0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x084C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0858(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_864[0x4];                                      // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_1;     // 0x0868(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentHasTag_ReturnValue;              // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_871[0x3];                                      // 0x0871(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0874(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0889(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_6;                 // 0x088A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable_6;                       // 0x088B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x088C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_88D[0x3];                                      // 0x088D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0890(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x089C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89D[0x3];                                      // 0x089D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_2;     // 0x08A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   ___struct_Variable_2;                              // 0x08A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x08C0(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x08D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x08E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x08F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x08F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8FC[0x4];                                      // 0x08FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0900(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x091C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_IsClosed_Variable_7;                       // 0x0924(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_925[0x3];                                      // 0x0925(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0928(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0934(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0940(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x094C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0958(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_964[0xC];                                      // 0x0964(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0970(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x09A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A1[0x7];                                      // 0x09A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B1[0x7];                                      // 0x09B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGoose_shot_C*                          CallFunc_FinishSpawningActor_ReturnValue;          // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x09C0(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x09D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E4[0x4];                                      // 0x09E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x09E8(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x0A00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0A0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0A18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0A24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0A30(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A69[0x7];                                      // 0x0A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGoose_shot_C*                          CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0A79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0A7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0A7B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x0A7C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A89[0x7];                                      // 0x0A89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue_3;     // 0x0A90(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0A98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0A9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0A9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0A9E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x0A9F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_BuildString_Float_ReturnValue;            // 0x0AA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_6;    // 0x0AB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Has_Been_Initd_Variable_7;                 // 0x0ABC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_8;                 // 0x0ABD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ABE[0x2];                                      // 0x0ABE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Start;                          // 0x0AC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_End;                            // 0x0ACC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_IsClosed_Variable_8;                       // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_9;                 // 0x0AD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ADA[0x2];                                      // 0x0ADA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0ADC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0AE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0AE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x0AEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AEB[0x1];                                      // 0x0AEB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x0AEC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0AF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AFC[0x4];                                      // 0x0AFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0B08(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0B14(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0B20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_2;         // 0x0B24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_3;         // 0x0B30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0B3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x0B48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x0B60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x0B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x0B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x0B81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B82[0x2];                                      // 0x0B82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0B84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x0B88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x0B89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x0B8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0B8B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x0B8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B8D[0x3];                                      // 0x0B8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x0B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue_1;                 // 0x0B94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0B98(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0BA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0BB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x0BBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BBD[0x3];                                      // 0x0BBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0BC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_2;          // 0x0BCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0BD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue_1;   // 0x0BE4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0BF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x0BFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0C04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0C0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_6;         // 0x0C0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x0C0E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x0C0F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C11[0x7];                                      // 0x0C11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ___object_Variable_2;                              // 0x0C18(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x0C28(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x0CB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB5[0x3];                                      // 0x0CB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0CB8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0CC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0CCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CCD[0x3];                                      // 0x0CCD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   ___struct_Variable_3;                              // 0x0CD0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0CE8(0x0018)(HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_LinearVelocity;                 // 0x0D00(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_AngularVelocity;                // 0x0D0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue; // 0x0D18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue_2;   // 0x0D24(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0D30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_3;          // 0x0D3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_4;          // 0x0D48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x0D54(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x0D60(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0D6C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0D78(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0E04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E05[0x3];                                      // 0x0E05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Velocity_1;                     // 0x0E08(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0E14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0E15(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E16[0x2];                                      // 0x0E16(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0E18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0E1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0E20(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0E2C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0E38(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0E44(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0E60(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0E70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0E74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0E78(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0E84(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Velocity;                       // 0x0E90(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x0E9C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue_3;   // 0x0EA8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_IsClosed_Variable_9;                       // 0x0EB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB5[0x3];                                      // 0x0EB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0EB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_2;    // 0x0EC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0ECC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0ED0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0ED4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0ED8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0EDC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0EE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE9[0x3];                                      // 0x0EE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0EEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0EF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0EF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0F00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0F08(0x0018)(HasGetValueTypeHash)
	struct FPhysicalAnimationData                 K2Node_MakeStruct_PhysicalAnimationData;           // 0x0F20(0x0024)(NoDestructor)
	uint8                                         Pad_F44[0x4];                                      // 0x0F44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0F48(0x0018)(HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x0F60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn) == 0x000010, "Wrong alignment on BP_Pawn_C_ExecuteUbergraph_BP_Pawn");
static_assert(sizeof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn) == 0x000F70, "Wrong size on BP_Pawn_C_ExecuteUbergraph_BP_Pawn");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, EntryPoint) == 0x000000, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_MakeVector_ReturnValue_1) == 0x000014, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetActorForwardVector_ReturnValue) == 0x000024, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetSocketLocation_ReturnValue) == 0x000030, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___struct_Variable) == 0x000058, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000070, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_IsClosed_Variable) == 0x00007C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000080, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_Has_Been_Initd_Variable) == 0x00008C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputActionEvent_Key_5) == 0x000090, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_IsClosed_Variable_1) == 0x0000A8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_Has_Been_Initd_Variable_1) == 0x0000A9, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_IsClosed_Variable_2) == 0x0000AA, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000AB, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_Has_Been_Initd_Variable_2) == 0x0000AC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputActionEvent_Key_6) == 0x0000B0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_IsClosed_Variable_3) == 0x0000C8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000C9, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_Has_Been_Initd_Variable_3) == 0x0000CA, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_Event_Hit_1) == 0x0000CC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_Event_Hit_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetComponentVelocity_ReturnValue) == 0x000158, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_bBlockingHit) == 0x000164, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_bInitialOverlap) == 0x000165, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_Time) == 0x000168, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_Distance) == 0x00016C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_ImpactPoint) == 0x00017C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_Normal) == 0x000188, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_ImpactNormal) == 0x000194, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_PhysMat) == 0x0001A0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_HitActor) == 0x0001A8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_HitComponent) == 0x0001B0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_HitBoneName) == 0x0001B8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_HitItem) == 0x0001C0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_FaceIndex) == 0x0001C4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_TraceStart) == 0x0001C8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_TraceEnd) == 0x0001D4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_HitComponent) == 0x0001E0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OtherActor_3) == 0x0001E8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OtherComp_3) == 0x0001F0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0001F8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_Hit) == 0x000204, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_IsValid_ReturnValue) == 0x000290, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetVelocity_ReturnValue) == 0x000294, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002A0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x0002B0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OtherActor_2) == 0x0002B8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OtherComp_2) == 0x0002C0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x0002C8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x0002CC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_SweepResult_1) == 0x0002D0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_VSize_ReturnValue) == 0x00035C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000360, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue) == 0x000361, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_1) == 0x000362, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000368, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000370, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000378, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000380, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_2) == 0x000384, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputKeyEvent_Key_1) == 0x000388, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0003A0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OtherActor) == 0x0003A8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OtherComp) == 0x0003B0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0003B8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_bFromSweep) == 0x0003BC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_ComponentBoundEvent_SweepResult) == 0x0003C0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetObjectClass_ReturnValue) == 0x000450, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetObjectClass_ReturnValue_1) == 0x000458, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000460, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_NotEqual_ClassClass_ReturnValue_1) == 0x000461, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_NotEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000462, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000463, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_3) == 0x000464, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_4) == 0x000465, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_5) == 0x000466, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_Variable) == 0x000467, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_6) == 0x000468, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_IsClosed_Variable_4) == 0x000469, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_Has_Been_Initd_Variable_4) == 0x00046A, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00046C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000478, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000480, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputKeyEvent_Key_2) == 0x000490, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputAxisEvent_AxisValue_5) == 0x0004A8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputAxisEvent_AxisValue_5' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputAxisEvent_AxisValue_4) == 0x0004AC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputAxisEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputAxisEvent_AxisValue_3) == 0x0004B0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputAxisEvent_AxisValue_2) == 0x0004B4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0004B8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x0004B9, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_IsClosed_Variable_5) == 0x0004BA, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanOR_ReturnValue) == 0x0004BB, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_Has_Been_Initd_Variable_5) == 0x0004BC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputAxisEvent_AxisValue_1) == 0x0004C0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputAxisEvent_AxisValue) == 0x0004C4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0004C8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0004CC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0004D0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0004D4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0004D8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0004DC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_Event_DeltaSeconds) == 0x0004E0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___object_Variable) == 0x0004E8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_LineTraceSingle_OutHit) == 0x0004F8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_LineTraceSingle_ReturnValue) == 0x000584, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___object_Variable_1) == 0x000588, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000598, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000599, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_Time_1) == 0x00059C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_Distance_1) == 0x0005A0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_Location_1) == 0x0005A4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0005B0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_Normal_1) == 0x0005BC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0005C8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_PhysMat_1) == 0x0005D8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_HitActor_1) == 0x0005E0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_HitComponent_1) == 0x0005E8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_HitBoneName_1) == 0x0005F0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_HitItem_1) == 0x0005F8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_FaceIndex_1) == 0x0005FC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_TraceStart_1) == 0x000600, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_TraceEnd_1) == 0x00060C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000618, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetYawPitchFromVector_Yaw) == 0x00061C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetYawPitchFromVector_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetYawPitchFromVector_Pitch) == 0x000620, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetYawPitchFromVector_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_3) == 0x000624, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000625, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000628, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_7) == 0x000634, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000638, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___struct_Variable_1) == 0x000644, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_4) == 0x000650, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_Can_) == 0x000651, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_Can_' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_5) == 0x000652, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_MontageStanding_1) == 0x000658, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_MontageStanding_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_8) == 0x000660, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_On__3) == 0x000661, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_On__3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_9) == 0x000662, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_10) == 0x000663, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_On__2) == 0x000664, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_On__2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___byte_Variable) == 0x000665, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_On__1) == 0x000666, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_On__1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_On_) == 0x000667, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_On_' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_MontageStanding) == 0x000668, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_MontageStanding' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_Location_1) == 0x000670, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x00067C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000708, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_Location) == 0x00070C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputTouchEvent_FingerIndex) == 0x000718, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputTouchEvent_FingerIndex' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputTouchEvent_Location) == 0x00071C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputTouchEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputTouchEvent_FingerIndex_1) == 0x000728, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputTouchEvent_FingerIndex_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputTouchEvent_Location_1) == 0x00072C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputTouchEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputKeyEvent_Key) == 0x000738, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_F_GetFVectorAndRightVector_ForwardVector) == 0x000750, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_F_GetFVectorAndRightVector_ForwardVector' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_F_GetFVectorAndRightVector_RightVector) == 0x00075C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_F_GetFVectorAndRightVector_RightVector' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_F_GetFVectorAndRightVector_ForwardVector_1) == 0x000768, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_F_GetFVectorAndRightVector_ForwardVector_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_F_GetFVectorAndRightVector_RightVector_1) == 0x000774, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_F_GetFVectorAndRightVector_RightVector_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_Event_MyComp) == 0x000780, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_Event_Other) == 0x000788, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_Event_OtherComp) == 0x000790, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_Event_bSelfMoved) == 0x000798, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_Event_HitLocation) == 0x00079C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_Event_HitNormal) == 0x0007A8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_Event_NormalImpulse) == 0x0007B4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_Event_Hit) == 0x0007C0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00084C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000858, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_SpawnEmitterAtLocation_ReturnValue_1) == 0x000868, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_SpawnEmitterAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_ComponentHasTag_ReturnValue) == 0x000870, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_ComponentHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000874, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_VSize_ReturnValue_1) == 0x000880, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000884, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000888, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000889, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_Has_Been_Initd_Variable_6) == 0x00088A, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_Has_Been_Initd_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_IsClosed_Variable_6) == 0x00088B, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_IsClosed_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_6) == 0x00088C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000890, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_11) == 0x00089C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_SpawnEmitterAtLocation_ReturnValue_2) == 0x0008A0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_SpawnEmitterAtLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___struct_Variable_2) == 0x0008A8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputActionEvent_Key_7) == 0x0008C0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0008D8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetForwardVector_ReturnValue) == 0x0008E4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakVector_X) == 0x0008F0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakVector_Y) == 0x0008F4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakVector_Z) == 0x0008F8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputActionEvent_Key) == 0x000900, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Add_FloatFloat_ReturnValue) == 0x000918, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x00091C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000920, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_IsClosed_Variable_7) == 0x000924, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_IsClosed_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_MakeVector_ReturnValue_2) == 0x000928, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000934, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000940, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00094C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000958, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_MakeTransform_ReturnValue) == 0x000970, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_7) == 0x0009A0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0009A8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_12) == 0x0009B0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_FinishSpawningActor_ReturnValue) == 0x0009B8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputActionEvent_Key_8) == 0x0009C0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0009D8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputActionEvent_Key_1) == 0x0009E8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x000A00, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000A0C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000A18, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000A24, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_MakeTransform_ReturnValue_1) == 0x000A30, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000A60, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Greater_IntInt_ReturnValue) == 0x000A68, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000A70, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000A78, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000A79, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000A7A, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000A7B, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x000A7C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_8) == 0x000A88, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_SpawnEmitterAtLocation_ReturnValue_3) == 0x000A90, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_SpawnEmitterAtLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000A98, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_9) == 0x000A9C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_13) == 0x000A9D, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_14) == 0x000A9E, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_15) == 0x000A9F, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BuildString_Float_ReturnValue) == 0x000AA0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BuildString_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetComponentLocation_ReturnValue_6) == 0x000AB0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetComponentLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_Has_Been_Initd_Variable_7) == 0x000ABC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_Has_Been_Initd_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_Has_Been_Initd_Variable_8) == 0x000ABD, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_Has_Been_Initd_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_Start) == 0x000AC0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_Start' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_End) == 0x000ACC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_End' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_IsClosed_Variable_8) == 0x000AD8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_IsClosed_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_Has_Been_Initd_Variable_9) == 0x000AD9, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_Has_Been_Initd_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetControlRotation_ReturnValue) == 0x000ADC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_IsFalling_ReturnValue) == 0x000AE8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_10) == 0x000AE9, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_11) == 0x000AEA, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetControlRotation_ReturnValue_1) == 0x000AEC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000AF8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetPlayerController_ReturnValue) == 0x000B00, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000B08, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000B14, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000B20, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetControlRotation_ReturnValue_2) == 0x000B24, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetControlRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetControlRotation_ReturnValue_3) == 0x000B30, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetControlRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000B3C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x000B48, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakRotator_Roll) == 0x000B54, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakRotator_Pitch) == 0x000B58, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakRotator_Yaw) == 0x000B5C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x000B60, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_ClampAngle_ReturnValue) == 0x000B6C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakRotator_Roll_1) == 0x000B70, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakRotator_Pitch_1) == 0x000B74, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakRotator_Yaw_1) == 0x000B78, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Abs_ReturnValue) == 0x000B7C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_12) == 0x000B80, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x000B81, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Abs_ReturnValue_1) == 0x000B84, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_16) == 0x000B88, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x000B89, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_17) == 0x000B8A, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanOR_ReturnValue_1) == 0x000B8B, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_18) == 0x000B8C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x000B90, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_ClampAngle_ReturnValue_1) == 0x000B94, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_MakeRotator_ReturnValue) == 0x000B98, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_ComposeRotators_ReturnValue) == 0x000BA4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_RInterpTo_ReturnValue) == 0x000BB0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Not_PreBool_ReturnValue_13) == 0x000BBC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000BC0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetSocketLocation_ReturnValue_2) == 0x000BCC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetSocketLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_FindLookAtRotation_ReturnValue) == 0x000BD8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetPhysicsLinearVelocity_ReturnValue_1) == 0x000BE4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetPhysicsLinearVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetForwardVector_ReturnValue_1) == 0x000BF0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_VSize_ReturnValue_2) == 0x000BFC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakVector_X_1) == 0x000C00, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakVector_Y_1) == 0x000C04, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakVector_Z_1) == 0x000C08, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Less_FloatFloat_ReturnValue) == 0x000C0C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Greater_FloatFloat_ReturnValue_6) == 0x000C0D, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Greater_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_19) == 0x000C0E, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_20) == 0x000C0F, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BooleanAND_ReturnValue_21) == 0x000C10, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___object_Variable_2) == 0x000C18, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_CapsuleTraceSingle_OutHit) == 0x000C28, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x000CB4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000CB8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Array_Length_ReturnValue) == 0x000CC8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000CCC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___struct_Variable_3) == 0x000CD0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputActionEvent_Key_2) == 0x000CE8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_LinearVelocity) == 0x000D00, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_LinearVelocity' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_AngularVelocity) == 0x000D0C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_AngularVelocity' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue) == 0x000D18, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetPhysicsAngularVelocityInRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetPhysicsLinearVelocity_ReturnValue_2) == 0x000D24, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetPhysicsLinearVelocity_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000D30, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetSocketLocation_ReturnValue_3) == 0x000D3C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetSocketLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetSocketLocation_ReturnValue_4) == 0x000D48, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetSocketLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Add_VectorVector_ReturnValue_6) == 0x000D54, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Add_VectorVector_ReturnValue_7) == 0x000D60, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000D6C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_LineTraceSingle_OutHit_1) == 0x000D78, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000E04, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_Velocity_1) == 0x000E08, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_Velocity_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000E14, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000E15, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_Time_2) == 0x000E18, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_Distance_2) == 0x000E1C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_Location_2) == 0x000E20, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000E2C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_Normal_2) == 0x000E38, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000E44, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_PhysMat_2) == 0x000E50, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_HitActor_2) == 0x000E58, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_HitComponent_2) == 0x000E60, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_HitBoneName_2) == 0x000E68, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_HitItem_2) == 0x000E70, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_FaceIndex_2) == 0x000E74, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_TraceStart_2) == 0x000E78, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakHitResult_TraceEnd_2) == 0x000E84, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_CustomEvent_Velocity) == 0x000E90, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_CustomEvent_Velocity' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Add_VectorVector_ReturnValue_8) == 0x000E9C, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetPhysicsLinearVelocity_ReturnValue_3) == 0x000EA8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetPhysicsLinearVelocity_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, ___bool_IsClosed_Variable_9) == 0x000EB4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::___bool_IsClosed_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_GetAnimInstance_ReturnValue) == 0x000EB8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_GetComponentRotation_ReturnValue_2) == 0x000EC0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_GetComponentRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakRotator_Roll_2) == 0x000ECC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakRotator_Pitch_2) == 0x000ED0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_BreakRotator_Yaw_2) == 0x000ED4, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000ED8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_MakeRotator_ReturnValue_1) == 0x000EDC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000EE8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_Montage_Play_ReturnValue) == 0x000EEC, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_MakeLiteralName_ReturnValue) == 0x000EF0, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000EF8, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000F00, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputActionEvent_Key_3) == 0x000F08, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_MakeStruct_PhysicalAnimationData) == 0x000F20, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_MakeStruct_PhysicalAnimationData' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, K2Node_InputActionEvent_Key_4) == 0x000F48, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ExecuteUbergraph_BP_Pawn, CallFunc_MakeLiteralName_ReturnValue_3) == 0x000F60, "Member 'BP_Pawn_C_ExecuteUbergraph_BP_Pawn::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.Server_SetMeshVelocity
// 0x000C (0x000C - 0x0000)
struct BP_Pawn_C_Server_SetMeshVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_Server_SetMeshVelocity) == 0x000004, "Wrong alignment on BP_Pawn_C_Server_SetMeshVelocity");
static_assert(sizeof(BP_Pawn_C_Server_SetMeshVelocity) == 0x00000C, "Wrong size on BP_Pawn_C_Server_SetMeshVelocity");
static_assert(offsetof(BP_Pawn_C_Server_SetMeshVelocity, Velocity) == 0x000000, "Member 'BP_Pawn_C_Server_SetMeshVelocity::Velocity' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.All_SetMeshVelocity
// 0x000C (0x000C - 0x0000)
struct BP_Pawn_C_All_SetMeshVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_All_SetMeshVelocity) == 0x000004, "Wrong alignment on BP_Pawn_C_All_SetMeshVelocity");
static_assert(sizeof(BP_Pawn_C_All_SetMeshVelocity) == 0x00000C, "Wrong size on BP_Pawn_C_All_SetMeshVelocity");
static_assert(offsetof(BP_Pawn_C_All_SetMeshVelocity, Velocity) == 0x000000, "Member 'BP_Pawn_C_All_SetMeshVelocity::Velocity' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.Server_RepRagdoll
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_Server_RepRagdoll final
{
public:
	struct FVector                                LinearVelocity;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AngularVelocity;                                   // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_Server_RepRagdoll) == 0x000004, "Wrong alignment on BP_Pawn_C_Server_RepRagdoll");
static_assert(sizeof(BP_Pawn_C_Server_RepRagdoll) == 0x000018, "Wrong size on BP_Pawn_C_Server_RepRagdoll");
static_assert(offsetof(BP_Pawn_C_Server_RepRagdoll, LinearVelocity) == 0x000000, "Member 'BP_Pawn_C_Server_RepRagdoll::LinearVelocity' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_Server_RepRagdoll, AngularVelocity) == 0x00000C, "Member 'BP_Pawn_C_Server_RepRagdoll::AngularVelocity' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.ClimbLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_ClimbLocation final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_ClimbLocation) == 0x000004, "Wrong alignment on BP_Pawn_C_ClimbLocation");
static_assert(sizeof(BP_Pawn_C_ClimbLocation) == 0x000018, "Wrong size on BP_Pawn_C_ClimbLocation");
static_assert(offsetof(BP_Pawn_C_ClimbLocation, Start) == 0x000000, "Member 'BP_Pawn_C_ClimbLocation::Start' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ClimbLocation, End) == 0x00000C, "Member 'BP_Pawn_C_ClimbLocation::End' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.ReceiveHit
// 0x00D0 (0x00D0 - 0x0000)
struct BP_Pawn_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Pawn_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_Pawn_C_ReceiveHit");
static_assert(sizeof(BP_Pawn_C_ReceiveHit) == 0x0000D0, "Wrong size on BP_Pawn_C_ReceiveHit");
static_assert(offsetof(BP_Pawn_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_Pawn_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ReceiveHit, Other) == 0x000008, "Member 'BP_Pawn_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_Pawn_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_Pawn_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'BP_Pawn_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ReceiveHit, HitNormal) == 0x000028, "Member 'BP_Pawn_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'BP_Pawn_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_ReceiveHit, Hit) == 0x000040, "Member 'BP_Pawn_C_ReceiveHit::Hit' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.Server_CapsuleUpdate
// 0x000C (0x000C - 0x0000)
struct BP_Pawn_C_Server_CapsuleUpdate final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_Server_CapsuleUpdate) == 0x000004, "Wrong alignment on BP_Pawn_C_Server_CapsuleUpdate");
static_assert(sizeof(BP_Pawn_C_Server_CapsuleUpdate) == 0x00000C, "Wrong size on BP_Pawn_C_Server_CapsuleUpdate");
static_assert(offsetof(BP_Pawn_C_Server_CapsuleUpdate, Location) == 0x000000, "Member 'BP_Pawn_C_Server_CapsuleUpdate::Location' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.All_CapsuleUpdateLocation
// 0x000C (0x000C - 0x0000)
struct BP_Pawn_C_All_CapsuleUpdateLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_All_CapsuleUpdateLocation) == 0x000004, "Wrong alignment on BP_Pawn_C_All_CapsuleUpdateLocation");
static_assert(sizeof(BP_Pawn_C_All_CapsuleUpdateLocation) == 0x00000C, "Wrong size on BP_Pawn_C_All_CapsuleUpdateLocation");
static_assert(offsetof(BP_Pawn_C_All_CapsuleUpdateLocation, Location) == 0x000000, "Member 'BP_Pawn_C_All_CapsuleUpdateLocation::Location' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.All_MontageSet
// 0x0008 (0x0008 - 0x0000)
struct BP_Pawn_C_All_MontageSet final
{
public:
	class UAnimMontage*                           MontageStanding_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_All_MontageSet) == 0x000008, "Wrong alignment on BP_Pawn_C_All_MontageSet");
static_assert(sizeof(BP_Pawn_C_All_MontageSet) == 0x000008, "Wrong size on BP_Pawn_C_All_MontageSet");
static_assert(offsetof(BP_Pawn_C_All_MontageSet, MontageStanding_0) == 0x000000, "Member 'BP_Pawn_C_All_MontageSet::MontageStanding_0' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.All_StandingProcess
// 0x0001 (0x0001 - 0x0000)
struct BP_Pawn_C_All_StandingProcess final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_All_StandingProcess) == 0x000001, "Wrong alignment on BP_Pawn_C_All_StandingProcess");
static_assert(sizeof(BP_Pawn_C_All_StandingProcess) == 0x000001, "Wrong size on BP_Pawn_C_All_StandingProcess");
static_assert(offsetof(BP_Pawn_C_All_StandingProcess, On_) == 0x000000, "Member 'BP_Pawn_C_All_StandingProcess::On_' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.Server_StandingProcess
// 0x0001 (0x0001 - 0x0000)
struct BP_Pawn_C_Server_StandingProcess final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_Server_StandingProcess) == 0x000001, "Wrong alignment on BP_Pawn_C_Server_StandingProcess");
static_assert(sizeof(BP_Pawn_C_Server_StandingProcess) == 0x000001, "Wrong size on BP_Pawn_C_Server_StandingProcess");
static_assert(offsetof(BP_Pawn_C_Server_StandingProcess, On_) == 0x000000, "Member 'BP_Pawn_C_Server_StandingProcess::On_' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.All_RagdollSwitch
// 0x0001 (0x0001 - 0x0000)
struct BP_Pawn_C_All_RagdollSwitch final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_All_RagdollSwitch) == 0x000001, "Wrong alignment on BP_Pawn_C_All_RagdollSwitch");
static_assert(sizeof(BP_Pawn_C_All_RagdollSwitch) == 0x000001, "Wrong size on BP_Pawn_C_All_RagdollSwitch");
static_assert(offsetof(BP_Pawn_C_All_RagdollSwitch, On_) == 0x000000, "Member 'BP_Pawn_C_All_RagdollSwitch::On_' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.Server_RagdollSwitch
// 0x0001 (0x0001 - 0x0000)
struct BP_Pawn_C_Server_RagdollSwitch final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_Server_RagdollSwitch) == 0x000001, "Wrong alignment on BP_Pawn_C_Server_RagdollSwitch");
static_assert(sizeof(BP_Pawn_C_Server_RagdollSwitch) == 0x000001, "Wrong size on BP_Pawn_C_Server_RagdollSwitch");
static_assert(offsetof(BP_Pawn_C_Server_RagdollSwitch, On_) == 0x000000, "Member 'BP_Pawn_C_Server_RagdollSwitch::On_' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.Server_MontageSet
// 0x0008 (0x0008 - 0x0000)
struct BP_Pawn_C_Server_MontageSet final
{
public:
	class UAnimMontage*                           MontageStanding_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_Server_MontageSet) == 0x000008, "Wrong alignment on BP_Pawn_C_Server_MontageSet");
static_assert(sizeof(BP_Pawn_C_Server_MontageSet) == 0x000008, "Wrong size on BP_Pawn_C_Server_MontageSet");
static_assert(offsetof(BP_Pawn_C_Server_MontageSet, MontageStanding_0) == 0x000000, "Member 'BP_Pawn_C_Server_MontageSet::MontageStanding_0' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.Server_IkSet
// 0x0001 (0x0001 - 0x0000)
struct BP_Pawn_C_Server_IkSet final
{
public:
	bool                                          Can_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_Server_IkSet) == 0x000001, "Wrong alignment on BP_Pawn_C_Server_IkSet");
static_assert(sizeof(BP_Pawn_C_Server_IkSet) == 0x000001, "Wrong size on BP_Pawn_C_Server_IkSet");
static_assert(offsetof(BP_Pawn_C_Server_IkSet, Can_) == 0x000000, "Member 'BP_Pawn_C_Server_IkSet::Can_' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Pawn_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Pawn_C_ReceiveTick");
static_assert(sizeof(BP_Pawn_C_ReceiveTick) == 0x000004, "Wrong size on BP_Pawn_C_ReceiveTick");
static_assert(offsetof(BP_Pawn_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Pawn_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53
// 0x0004 (0x0004 - 0x0000)
struct BP_Pawn_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53) == 0x000004, "Wrong alignment on BP_Pawn_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53");
static_assert(sizeof(BP_Pawn_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53) == 0x000004, "Wrong size on BP_Pawn_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53");
static_assert(offsetof(BP_Pawn_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53, AxisValue) == 0x000000, "Member 'BP_Pawn_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53::AxisValue' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38
// 0x0004 (0x0004 - 0x0000)
struct BP_Pawn_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38) == 0x000004, "Wrong alignment on BP_Pawn_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38");
static_assert(sizeof(BP_Pawn_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38) == 0x000004, "Wrong size on BP_Pawn_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38");
static_assert(offsetof(BP_Pawn_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38, AxisValue) == 0x000000, "Member 'BP_Pawn_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38::AxisValue' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90
// 0x0004 (0x0004 - 0x0000)
struct BP_Pawn_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90) == 0x000004, "Wrong alignment on BP_Pawn_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90");
static_assert(sizeof(BP_Pawn_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90) == 0x000004, "Wrong size on BP_Pawn_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90");
static_assert(offsetof(BP_Pawn_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90, AxisValue) == 0x000000, "Member 'BP_Pawn_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90::AxisValue' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79
// 0x0004 (0x0004 - 0x0000)
struct BP_Pawn_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79) == 0x000004, "Wrong alignment on BP_Pawn_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79");
static_assert(sizeof(BP_Pawn_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79) == 0x000004, "Wrong size on BP_Pawn_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79");
static_assert(offsetof(BP_Pawn_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79, AxisValue) == 0x000000, "Member 'BP_Pawn_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79::AxisValue' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_47
// 0x0004 (0x0004 - 0x0000)
struct BP_Pawn_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47) == 0x000004, "Wrong alignment on BP_Pawn_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47");
static_assert(sizeof(BP_Pawn_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47) == 0x000004, "Wrong size on BP_Pawn_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47");
static_assert(offsetof(BP_Pawn_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47, AxisValue) == 0x000000, "Member 'BP_Pawn_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47::AxisValue' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_40
// 0x0004 (0x0004 - 0x0000)
struct BP_Pawn_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40) == 0x000004, "Wrong alignment on BP_Pawn_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40");
static_assert(sizeof(BP_Pawn_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40) == 0x000004, "Wrong size on BP_Pawn_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40");
static_assert(offsetof(BP_Pawn_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40, AxisValue) == 0x000000, "Member 'BP_Pawn_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40::AxisValue' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Pawn_C_BndEvt__HeadFalling_K2Node_ComponentBoundEvent_648_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_27_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Pawn_C_BndEvt__FallingCapsule_K2Node_ComponentBoundEvent_235_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'BP_Pawn_C_BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.OnLanded
// 0x008C (0x008C - 0x0000)
struct BP_Pawn_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Pawn_C_OnLanded) == 0x000004, "Wrong alignment on BP_Pawn_C_OnLanded");
static_assert(sizeof(BP_Pawn_C_OnLanded) == 0x00008C, "Wrong size on BP_Pawn_C_OnLanded");
static_assert(offsetof(BP_Pawn_C_OnLanded, Hit) == 0x000000, "Member 'BP_Pawn_C_OnLanded::Hit' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpActEvt_N_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_InpActEvt_N_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpActEvt_N_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_Pawn_C_InpActEvt_N_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_Pawn_C_InpActEvt_N_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_Pawn_C_InpActEvt_N_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_Pawn_C_InpActEvt_N_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_Pawn_C_InpActEvt_N_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpActEvt_camera_zoom_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_InpActEvt_camera_zoom_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpActEvt_camera_zoom_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_Pawn_C_InpActEvt_camera_zoom_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_Pawn_C_InpActEvt_camera_zoom_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_Pawn_C_InpActEvt_camera_zoom_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_Pawn_C_InpActEvt_camera_zoom_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_Pawn_C_InpActEvt_camera_zoom_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpActEvt_camera_out_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_InpActEvt_camera_out_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpActEvt_camera_out_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_Pawn_C_InpActEvt_camera_out_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_Pawn_C_InpActEvt_camera_out_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_Pawn_C_InpActEvt_camera_out_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_Pawn_C_InpActEvt_camera_out_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_Pawn_C_InpActEvt_camera_out_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpActEvt_zoom_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpActEvt_zoom_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_Pawn_C_InpActEvt_zoom_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpActEvt_shot_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_InpActEvt_shot_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpActEvt_shot_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BP_Pawn_C_InpActEvt_shot_K2Node_InputActionEvent_4");
static_assert(sizeof(BP_Pawn_C_InpActEvt_shot_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BP_Pawn_C_InpActEvt_shot_K2Node_InputActionEvent_4");
static_assert(offsetof(BP_Pawn_C_InpActEvt_shot_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BP_Pawn_C_InpActEvt_shot_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpActEvt_slide_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_5");
static_assert(sizeof(BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_5");
static_assert(offsetof(BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpActEvt_slide_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_6");
static_assert(sizeof(BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_6");
static_assert(offsetof(BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'BP_Pawn_C_InpActEvt_slide_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpActEvt_R_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_InpActEvt_R_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpActEvt_R_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_Pawn_C_InpActEvt_R_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_Pawn_C_InpActEvt_R_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_Pawn_C_InpActEvt_R_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_Pawn_C_InpActEvt_R_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_Pawn_C_InpActEvt_R_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpActEvt_C_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_InpActEvt_C_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpActEvt_C_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_Pawn_C_InpActEvt_C_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_Pawn_C_InpActEvt_C_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_Pawn_C_InpActEvt_C_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_Pawn_C_InpActEvt_C_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_Pawn_C_InpActEvt_C_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpTchEvt_Pressed
// 0x0010 (0x0010 - 0x0000)
struct BP_Pawn_C_InpTchEvt_Pressed final
{
public:
	ETouchIndex                                   FingerIndex;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpTchEvt_Pressed) == 0x000004, "Wrong alignment on BP_Pawn_C_InpTchEvt_Pressed");
static_assert(sizeof(BP_Pawn_C_InpTchEvt_Pressed) == 0x000010, "Wrong size on BP_Pawn_C_InpTchEvt_Pressed");
static_assert(offsetof(BP_Pawn_C_InpTchEvt_Pressed, FingerIndex) == 0x000000, "Member 'BP_Pawn_C_InpTchEvt_Pressed::FingerIndex' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_InpTchEvt_Pressed, Location) == 0x000004, "Member 'BP_Pawn_C_InpTchEvt_Pressed::Location' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpTchEvt_Released
// 0x0010 (0x0010 - 0x0000)
struct BP_Pawn_C_InpTchEvt_Released final
{
public:
	ETouchIndex                                   FingerIndex;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpTchEvt_Released) == 0x000004, "Wrong alignment on BP_Pawn_C_InpTchEvt_Released");
static_assert(sizeof(BP_Pawn_C_InpTchEvt_Released) == 0x000010, "Wrong size on BP_Pawn_C_InpTchEvt_Released");
static_assert(offsetof(BP_Pawn_C_InpTchEvt_Released, FingerIndex) == 0x000000, "Member 'BP_Pawn_C_InpTchEvt_Released::FingerIndex' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_InpTchEvt_Released, Location) == 0x000004, "Member 'BP_Pawn_C_InpTchEvt_Released::Location' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpActEvt_Jump_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_7");
static_assert(sizeof(BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_7");
static_assert(offsetof(BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.InpActEvt_Jump_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_8");
static_assert(sizeof(BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_8");
static_assert(offsetof(BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'BP_Pawn_C_InpActEvt_Jump_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.UserConstructionScript
// 0x0098 (0x0098 - 0x0000)
struct BP_Pawn_C_UserConstructionScript final
{
public:
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0008(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_Pawn_C_UserConstructionScript");
static_assert(sizeof(BP_Pawn_C_UserConstructionScript) == 0x000098, "Wrong size on BP_Pawn_C_UserConstructionScript");
static_assert(offsetof(BP_Pawn_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_Pawn_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_UserConstructionScript, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000004, "Member 'BP_Pawn_C_UserConstructionScript::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000008, "Member 'BP_Pawn_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000094, "Member 'BP_Pawn_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.F_GetLoockRotation
// 0x0068 (0x0068 - 0x0000)
struct BP_Pawn_C_F_GetLoockRotation final
{
public:
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_F_GetLoockRotation) == 0x000004, "Wrong alignment on BP_Pawn_C_F_GetLoockRotation");
static_assert(sizeof(BP_Pawn_C_F_GetLoockRotation) == 0x000068, "Wrong size on BP_Pawn_C_F_GetLoockRotation");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_GetControlRotation_ReturnValue) == 0x000000, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_BreakRotator_Roll) == 0x00000C, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_BreakRotator_Pitch) == 0x000010, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_BreakRotator_Yaw) == 0x000014, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000020, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_ClampAngle_ReturnValue) == 0x00002C, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_GetControlRotation_ReturnValue_1) == 0x000030, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000040, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_BreakRotator_Roll_1) == 0x00004C, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_BreakRotator_Pitch_1) == 0x000050, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_BreakRotator_Yaw_1) == 0x000054, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_ClampAngle_ReturnValue_1) == 0x000058, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetLoockRotation, CallFunc_MakeRotator_ReturnValue) == 0x00005C, "Member 'BP_Pawn_C_F_GetLoockRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.F_SetRotationPawnFromControll
// 0x0001 (0x0001 - 0x0000)
struct BP_Pawn_C_F_SetRotationPawnFromControll final
{
public:
	bool                                          Rotate_;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_F_SetRotationPawnFromControll) == 0x000001, "Wrong alignment on BP_Pawn_C_F_SetRotationPawnFromControll");
static_assert(sizeof(BP_Pawn_C_F_SetRotationPawnFromControll) == 0x000001, "Wrong size on BP_Pawn_C_F_SetRotationPawnFromControll");
static_assert(offsetof(BP_Pawn_C_F_SetRotationPawnFromControll, Rotate_) == 0x000000, "Member 'BP_Pawn_C_F_SetRotationPawnFromControll::Rotate_' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.F_GetCanWallJump
// 0x0001 (0x0001 - 0x0000)
struct BP_Pawn_C_F_GetCanWallJump final
{
public:
	bool                                          Can_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_F_GetCanWallJump) == 0x000001, "Wrong alignment on BP_Pawn_C_F_GetCanWallJump");
static_assert(sizeof(BP_Pawn_C_F_GetCanWallJump) == 0x000001, "Wrong size on BP_Pawn_C_F_GetCanWallJump");
static_assert(offsetof(BP_Pawn_C_F_GetCanWallJump, Can_) == 0x000000, "Member 'BP_Pawn_C_F_GetCanWallJump::Can_' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.F_SetCanMoving
// 0x0002 (0x0002 - 0x0000)
struct BP_Pawn_C_F_SetCanMoving final
{
public:
	bool                                          Can_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_F_SetCanMoving) == 0x000001, "Wrong alignment on BP_Pawn_C_F_SetCanMoving");
static_assert(sizeof(BP_Pawn_C_F_SetCanMoving) == 0x000002, "Wrong size on BP_Pawn_C_F_SetCanMoving");
static_assert(offsetof(BP_Pawn_C_F_SetCanMoving, Can_) == 0x000000, "Member 'BP_Pawn_C_F_SetCanMoving::Can_' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_SetCanMoving, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Pawn_C_F_SetCanMoving::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.F_GetHitResult
// 0x0150 (0x0150 - 0x0000)
struct BP_Pawn_C_F_GetHitResult final
{
public:
	class UPrimitiveComponent*                    Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x008C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CanRagdol_;                                        // 0x0094(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_F_GetHitResult) == 0x000008, "Wrong alignment on BP_Pawn_C_F_GetHitResult");
static_assert(sizeof(BP_Pawn_C_F_GetHitResult) == 0x000150, "Wrong size on BP_Pawn_C_F_GetHitResult");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, Component) == 0x000000, "Member 'BP_Pawn_C_F_GetHitResult::Component' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, Hit) == 0x000008, "Member 'BP_Pawn_C_F_GetHitResult::Hit' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CanRagdol_) == 0x000094, "Member 'BP_Pawn_C_F_GetHitResult::CanRagdol_' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_GetVelocity_ReturnValue) == 0x000098, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_bBlockingHit) == 0x0000A4, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000A5, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_Time) == 0x0000A8, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_Distance) == 0x0000AC, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_Location) == 0x0000B0, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_ImpactPoint) == 0x0000BC, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_Normal) == 0x0000C8, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_ImpactNormal) == 0x0000D4, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_PhysMat) == 0x0000E0, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_HitActor) == 0x0000E8, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_HitComponent) == 0x0000F0, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_HitBoneName) == 0x0000F8, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_HitItem) == 0x000100, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_FaceIndex) == 0x000104, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_TraceStart) == 0x000108, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakHitResult_TraceEnd) == 0x000114, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000120, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakVector_X) == 0x00012C, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakVector_Y) == 0x000130, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BreakVector_Z) == 0x000134, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000138, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000144, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_VSize_ReturnValue) == 0x000148, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00014C, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetHitResult, CallFunc_BooleanOR_ReturnValue) == 0x00014D, "Member 'BP_Pawn_C_F_GetHitResult::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.F_GetOverlapResult
// 0x0080 (0x0080 - 0x0000)
struct BP_Pawn_C_F_GetOverlapResult final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Comp;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanRagdol_;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Direction;                                         // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_F_GetOverlapResult) == 0x000008, "Wrong alignment on BP_Pawn_C_F_GetOverlapResult");
static_assert(sizeof(BP_Pawn_C_F_GetOverlapResult) == 0x000080, "Wrong size on BP_Pawn_C_F_GetOverlapResult");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, Object) == 0x000000, "Member 'BP_Pawn_C_F_GetOverlapResult::Object' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, Comp) == 0x000008, "Member 'BP_Pawn_C_F_GetOverlapResult::Comp' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, CanRagdol_) == 0x000010, "Member 'BP_Pawn_C_F_GetOverlapResult::CanRagdol_' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, Direction) == 0x000014, "Member 'BP_Pawn_C_F_GetOverlapResult::Direction' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000020, "Member 'BP_Pawn_C_F_GetOverlapResult::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00002C, "Member 'BP_Pawn_C_F_GetOverlapResult::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'BP_Pawn_C_F_GetOverlapResult::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'BP_Pawn_C_F_GetOverlapResult::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, CallFunc_GetVelocity_ReturnValue) == 0x000048, "Member 'BP_Pawn_C_F_GetOverlapResult::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, CallFunc_FindLookAtRotation_ReturnValue) == 0x000054, "Member 'BP_Pawn_C_F_GetOverlapResult::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'BP_Pawn_C_F_GetOverlapResult::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, CallFunc_GetForwardVector_ReturnValue) == 0x00006C, "Member 'BP_Pawn_C_F_GetOverlapResult::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, CallFunc_VSize_ReturnValue) == 0x000078, "Member 'BP_Pawn_C_F_GetOverlapResult::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetOverlapResult, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_Pawn_C_F_GetOverlapResult::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.F_SetInputMode
// 0x0040 (0x0040 - 0x0000)
struct BP_Pawn_C_F_SetInputMode final
{
public:
	uint8                                         ToMode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowCursos_;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Pawn_C_F_SetInputMode) == 0x000008, "Wrong alignment on BP_Pawn_C_F_SetInputMode");
static_assert(sizeof(BP_Pawn_C_F_SetInputMode) == 0x000040, "Wrong size on BP_Pawn_C_F_SetInputMode");
static_assert(offsetof(BP_Pawn_C_F_SetInputMode, ToMode) == 0x000000, "Member 'BP_Pawn_C_F_SetInputMode::ToMode' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_SetInputMode, Widget) == 0x000008, "Member 'BP_Pawn_C_F_SetInputMode::Widget' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_SetInputMode, ShowCursos_) == 0x000010, "Member 'BP_Pawn_C_F_SetInputMode::ShowCursos_' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_SetInputMode, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_Pawn_C_F_SetInputMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_SetInputMode, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BP_Pawn_C_F_SetInputMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_SetInputMode, CallFunc_GetPlayerController_ReturnValue_1) == 0x000028, "Member 'BP_Pawn_C_F_SetInputMode::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_SetInputMode, CallFunc_GetPlayerController_ReturnValue_2) == 0x000030, "Member 'BP_Pawn_C_F_SetInputMode::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_SetInputMode, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_Pawn_C_F_SetInputMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.F_GetFVectorAndRightVector
// 0x00B4 (0x00B4 - 0x0000)
struct BP_Pawn_C_F_GetFVectorAndRightVector final
{
public:
	struct FVector                                ForwardVector;                                     // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightVector;                                       // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue_1;             // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_F_GetFVectorAndRightVector) == 0x000004, "Wrong alignment on BP_Pawn_C_F_GetFVectorAndRightVector");
static_assert(sizeof(BP_Pawn_C_F_GetFVectorAndRightVector) == 0x0000B4, "Wrong size on BP_Pawn_C_F_GetFVectorAndRightVector");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, ForwardVector) == 0x000000, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::ForwardVector' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, RightVector) == 0x00000C, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::RightVector' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_GetForwardVector_ReturnValue) == 0x000018, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_BreakVector_X) == 0x000024, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000030, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_MakeRotator_ReturnValue) == 0x00003C, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_GetForwardVector_ReturnValue_1) == 0x000054, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_MakeRotator_ReturnValue_1) == 0x000060, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_GetControlRotation_ReturnValue) == 0x00006C, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_GetRightVector_ReturnValue) == 0x000078, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_BreakRotator_Roll_1) == 0x000084, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_BreakRotator_Pitch_1) == 0x000088, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_BreakRotator_Yaw_1) == 0x00008C, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_MakeRotator_ReturnValue_2) == 0x000090, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_GetForwardVector_ReturnValue_2) == 0x00009C, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_F_GetFVectorAndRightVector, CallFunc_GetRightVector_ReturnValue_1) == 0x0000A8, "Member 'BP_Pawn_C_F_GetFVectorAndRightVector::CallFunc_GetRightVector_ReturnValue_1' has a wrong offset!");

// Function BP_Pawn.BP_Pawn_C.Damage
// 0x0018 (0x0018 - 0x0000)
struct BP_Pawn_C_Damage final
{
public:
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Pawn_C_Damage) == 0x000008, "Wrong alignment on BP_Pawn_C_Damage");
static_assert(sizeof(BP_Pawn_C_Damage) == 0x000018, "Wrong size on BP_Pawn_C_Damage");
static_assert(offsetof(BP_Pawn_C_Damage, CallFunc_Conv_IntToString_ReturnValue) == 0x000000, "Member 'BP_Pawn_C_Damage::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Pawn_C_Damage, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_Pawn_C_Damage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

