#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuCharacterComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MenuCharacterComponent.MenuCharacterComponent_C
// 0x0038 (0x00E8 - 0x00B0)
class UMenuCharacterComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bInvertLookX;                                      // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInvertLookY;                                      // 0x00B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraSpeedX;                                      // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraSpeedY;                                      // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRumble;                                           // 0x00C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsGamepadBeingUsed;                                // 0x00C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UIngameMenuContainerWidgetBP_C*         IngameMenuWidget;                                  // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewVar_0;                                          // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Out_Actors;                                        // 0x00D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_MenuCharacterComponent(int32 EntryPoint);
	void Resume();
	void Pause();
	void InitializeMenu();
	void LoadControls();
	void Rumble();
	void OpenPauseMenu();
	void OpenPauseMenuGamepad();
	void OpenPauseMenuKeyboard();
	void ModifyAxisValue(float InVal, float SpeedMultiplier, bool InvertAxis, float* OutVal);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MenuCharacterComponent_C">();
	}
	static class UMenuCharacterComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuCharacterComponent_C>();
	}
};
static_assert(alignof(UMenuCharacterComponent_C) == 0x000008, "Wrong alignment on UMenuCharacterComponent_C");
static_assert(sizeof(UMenuCharacterComponent_C) == 0x0000E8, "Wrong size on UMenuCharacterComponent_C");
static_assert(offsetof(UMenuCharacterComponent_C, UberGraphFrame) == 0x0000B0, "Member 'UMenuCharacterComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMenuCharacterComponent_C, bInvertLookX) == 0x0000B8, "Member 'UMenuCharacterComponent_C::bInvertLookX' has a wrong offset!");
static_assert(offsetof(UMenuCharacterComponent_C, bInvertLookY) == 0x0000B9, "Member 'UMenuCharacterComponent_C::bInvertLookY' has a wrong offset!");
static_assert(offsetof(UMenuCharacterComponent_C, CameraSpeedX) == 0x0000BC, "Member 'UMenuCharacterComponent_C::CameraSpeedX' has a wrong offset!");
static_assert(offsetof(UMenuCharacterComponent_C, CameraSpeedY) == 0x0000C0, "Member 'UMenuCharacterComponent_C::CameraSpeedY' has a wrong offset!");
static_assert(offsetof(UMenuCharacterComponent_C, bRumble) == 0x0000C4, "Member 'UMenuCharacterComponent_C::bRumble' has a wrong offset!");
static_assert(offsetof(UMenuCharacterComponent_C, IsGamepadBeingUsed) == 0x0000C5, "Member 'UMenuCharacterComponent_C::IsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(UMenuCharacterComponent_C, IngameMenuWidget) == 0x0000C8, "Member 'UMenuCharacterComponent_C::IngameMenuWidget' has a wrong offset!");
static_assert(offsetof(UMenuCharacterComponent_C, NewVar_0) == 0x0000D0, "Member 'UMenuCharacterComponent_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UMenuCharacterComponent_C, Out_Actors) == 0x0000D8, "Member 'UMenuCharacterComponent_C::Out_Actors' has a wrong offset!");

}

