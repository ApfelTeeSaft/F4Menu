#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SteamMulti_GameInstance

#include "Basic.hpp"


namespace SDK::Params
{

// Function SteamMulti_GameInstance.SteamMulti_GameInstance_C.ExecuteUbergraph_SteamMulti_GameInstance
// 0x00B8 (0x00B8 - 0x0000)
struct SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_WrittenAchievementName_1;       // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WrittenProgress_1;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WrittenUserTag_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_WrittenAchievementName;         // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WrittenProgress;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WrittenUserTag;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         ___int_Variable;                                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ___float_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ___name_Variable;                                  // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAchievementQueryCallbackProxy*         CallFunc_CacheAchievements_ReturnValue;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAchievementWriteCallbackProxy*         CallFunc_WriteAchievementProgress_ReturnValue;     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance) == 0x000008, "Wrong alignment on SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance");
static_assert(sizeof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance) == 0x0000B8, "Wrong size on SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, EntryPoint) == 0x000000, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, K2Node_CustomEvent_WrittenAchievementName_1) == 0x000024, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::K2Node_CustomEvent_WrittenAchievementName_1' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, K2Node_CustomEvent_WrittenProgress_1) == 0x00002C, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::K2Node_CustomEvent_WrittenProgress_1' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, K2Node_CustomEvent_WrittenUserTag_1) == 0x000030, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::K2Node_CustomEvent_WrittenUserTag_1' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, K2Node_CustomEvent_WrittenAchievementName) == 0x000044, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::K2Node_CustomEvent_WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, K2Node_CustomEvent_WrittenProgress) == 0x00004C, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::K2Node_CustomEvent_WrittenProgress' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, K2Node_CustomEvent_WrittenUserTag) == 0x000050, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::K2Node_CustomEvent_WrittenUserTag' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, ___int_Variable) == 0x000064, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::___int_Variable' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, ___float_Variable) == 0x000068, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::___float_Variable' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, ___name_Variable) == 0x00006C, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::___name_Variable' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, CallFunc_Conv_NameToString_ReturnValue) == 0x000078, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, CallFunc_GetPlayerController_ReturnValue) == 0x000090, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, CallFunc_CacheAchievements_ReturnValue) == 0x000098, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::CallFunc_CacheAchievements_ReturnValue' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, CallFunc_WriteAchievementProgress_ReturnValue) == 0x0000A8, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::CallFunc_WriteAchievementProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'SteamMulti_GameInstance_C_ExecuteUbergraph_SteamMulti_GameInstance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function SteamMulti_GameInstance.SteamMulti_GameInstance_C.OnSuccess_8D1DA87E4031EE510894B7A66E3D985F
// 0x0010 (0x0010 - 0x0000)
struct SteamMulti_GameInstance_C_OnSuccess_8D1DA87E4031EE510894B7A66E3D985F final
{
public:
	class FName                                   WrittenAchievementName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WrittenProgress;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrittenUserTag;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SteamMulti_GameInstance_C_OnSuccess_8D1DA87E4031EE510894B7A66E3D985F) == 0x000004, "Wrong alignment on SteamMulti_GameInstance_C_OnSuccess_8D1DA87E4031EE510894B7A66E3D985F");
static_assert(sizeof(SteamMulti_GameInstance_C_OnSuccess_8D1DA87E4031EE510894B7A66E3D985F) == 0x000010, "Wrong size on SteamMulti_GameInstance_C_OnSuccess_8D1DA87E4031EE510894B7A66E3D985F");
static_assert(offsetof(SteamMulti_GameInstance_C_OnSuccess_8D1DA87E4031EE510894B7A66E3D985F, WrittenAchievementName) == 0x000000, "Member 'SteamMulti_GameInstance_C_OnSuccess_8D1DA87E4031EE510894B7A66E3D985F::WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_OnSuccess_8D1DA87E4031EE510894B7A66E3D985F, WrittenProgress) == 0x000008, "Member 'SteamMulti_GameInstance_C_OnSuccess_8D1DA87E4031EE510894B7A66E3D985F::WrittenProgress' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_OnSuccess_8D1DA87E4031EE510894B7A66E3D985F, WrittenUserTag) == 0x00000C, "Member 'SteamMulti_GameInstance_C_OnSuccess_8D1DA87E4031EE510894B7A66E3D985F::WrittenUserTag' has a wrong offset!");

// Function SteamMulti_GameInstance.SteamMulti_GameInstance_C.OnFailure_8D1DA87E4031EE510894B7A66E3D985F
// 0x0010 (0x0010 - 0x0000)
struct SteamMulti_GameInstance_C_OnFailure_8D1DA87E4031EE510894B7A66E3D985F final
{
public:
	class FName                                   WrittenAchievementName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WrittenProgress;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrittenUserTag;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SteamMulti_GameInstance_C_OnFailure_8D1DA87E4031EE510894B7A66E3D985F) == 0x000004, "Wrong alignment on SteamMulti_GameInstance_C_OnFailure_8D1DA87E4031EE510894B7A66E3D985F");
static_assert(sizeof(SteamMulti_GameInstance_C_OnFailure_8D1DA87E4031EE510894B7A66E3D985F) == 0x000010, "Wrong size on SteamMulti_GameInstance_C_OnFailure_8D1DA87E4031EE510894B7A66E3D985F");
static_assert(offsetof(SteamMulti_GameInstance_C_OnFailure_8D1DA87E4031EE510894B7A66E3D985F, WrittenAchievementName) == 0x000000, "Member 'SteamMulti_GameInstance_C_OnFailure_8D1DA87E4031EE510894B7A66E3D985F::WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_OnFailure_8D1DA87E4031EE510894B7A66E3D985F, WrittenProgress) == 0x000008, "Member 'SteamMulti_GameInstance_C_OnFailure_8D1DA87E4031EE510894B7A66E3D985F::WrittenProgress' has a wrong offset!");
static_assert(offsetof(SteamMulti_GameInstance_C_OnFailure_8D1DA87E4031EE510894B7A66E3D985F, WrittenUserTag) == 0x00000C, "Member 'SteamMulti_GameInstance_C_OnFailure_8D1DA87E4031EE510894B7A66E3D985F::WrittenUserTag' has a wrong offset!");

// Function SteamMulti_GameInstance.SteamMulti_GameInstance_C.ALTF4GameInstanceRef
// 0x0008 (0x0008 - 0x0000)
struct SteamMulti_GameInstance_C_ALTF4GameInstanceRef final
{
public:
	class USteamMulti_GameInstance_C*             ALTF4_GI;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SteamMulti_GameInstance_C_ALTF4GameInstanceRef) == 0x000008, "Wrong alignment on SteamMulti_GameInstance_C_ALTF4GameInstanceRef");
static_assert(sizeof(SteamMulti_GameInstance_C_ALTF4GameInstanceRef) == 0x000008, "Wrong size on SteamMulti_GameInstance_C_ALTF4GameInstanceRef");
static_assert(offsetof(SteamMulti_GameInstance_C_ALTF4GameInstanceRef, ALTF4_GI) == 0x000000, "Member 'SteamMulti_GameInstance_C_ALTF4GameInstanceRef::ALTF4_GI' has a wrong offset!");

}

