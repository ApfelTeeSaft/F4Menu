#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RotationBull_Trap_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function RotationBull_Trap_BP.RotationBull_Trap_BP_C.ExecuteUbergraph_RotationBull_Trap_BP
// 0x01B8 (0x01B8 - 0x0000)
struct RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_IsClosed_Variable;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable_1;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_1;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable_2;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_2;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent_1;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse_1;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit_1;                  // 0x0034(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_ALTF4_Chick_Pawn_C*                 K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Pawn_C*                       K2Node_DynamicCast_AsBP_ALTF4_Pawn;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0104(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ___bool_IsClosed_Variable_3;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Chick_Pawn_C*                 K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_1;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Pawn_C*                       K2Node_DynamicCast_AsBP_ALTF4_Pawn_1;              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_3;                 // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP) == 0x000008, "Wrong alignment on RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP");
static_assert(sizeof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP) == 0x0001B8, "Wrong size on RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, EntryPoint) == 0x000000, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, ___bool_IsClosed_Variable) == 0x000004, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::___bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, ___bool_Has_Been_Initd_Variable) == 0x000005, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::___bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, ___bool_IsClosed_Variable_1) == 0x000006, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::___bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, ___bool_Has_Been_Initd_Variable_1) == 0x000007, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::___bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, ___bool_IsClosed_Variable_2) == 0x000008, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::___bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, ___bool_Has_Been_Initd_Variable_2) == 0x000009, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::___bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_ComponentBoundEvent_HitComponent_1) == 0x000010, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_ComponentBoundEvent_HitComponent_1' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000018, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000020, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_ComponentBoundEvent_NormalImpulse_1) == 0x000028, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_ComponentBoundEvent_NormalImpulse_1' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_ComponentBoundEvent_Hit_1) == 0x000034, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_ComponentBoundEvent_Hit_1' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn) == 0x0000C0, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_DynamicCast_AsBP_ALTF4_Pawn) == 0x0000D0, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_DynamicCast_AsBP_ALTF4_Pawn' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_ComponentBoundEvent_HitComponent) == 0x0000E0, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x0000E8, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x0000F0, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0000F8, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_ComponentBoundEvent_Hit) == 0x000104, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, ___bool_IsClosed_Variable_3) == 0x000190, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::___bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_1) == 0x000198, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_1' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_DynamicCast_bSuccess_2) == 0x0001A0, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_DynamicCast_AsBP_ALTF4_Pawn_1) == 0x0001A8, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_DynamicCast_AsBP_ALTF4_Pawn_1' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, K2Node_DynamicCast_bSuccess_3) == 0x0001B0, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP, ___bool_Has_Been_Initd_Variable_3) == 0x0001B1, "Member 'RotationBull_Trap_BP_C_ExecuteUbergraph_RotationBull_Trap_BP::___bool_Has_Been_Initd_Variable_3' has a wrong offset!");

// Function RotationBull_Trap_BP.RotationBull_Trap_BP_C.BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function RotationBull_Trap_BP.RotationBull_Trap_BP_C.BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'RotationBull_Trap_BP_C_BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

}

