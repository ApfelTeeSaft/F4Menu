#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpikeStairTrap_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SpikeStairTrap_BP.SpikeStairTrap_BP_C.ExecuteUbergraph_SpikeStairTrap_BP
// 0x0170 (0x0170 - 0x0000)
struct SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Has_Been_Initd_Variable;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0020(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ___bool_IsClosed_Variable;                         // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00D0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Pawn_SoloPlay_C*              K2Node_DynamicCast_AsBP_ALTF4_Pawn_Solo_Play;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP) == 0x000008, "Wrong alignment on SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP");
static_assert(sizeof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP) == 0x000170, "Wrong size on SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, EntryPoint) == 0x000000, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, CallFunc_VLerp_ReturnValue) == 0x000010, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, ___bool_Has_Been_Initd_Variable) == 0x00001C, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::___bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000020, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, ___bool_IsClosed_Variable) == 0x0000AC, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::___bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000B0, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x0000B8, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x0000C0, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000C8, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000CC, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x0000D0, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Pawn_Solo_Play) == 0x000160, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Pawn_Solo_Play' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'SpikeStairTrap_BP_C_ExecuteUbergraph_SpikeStairTrap_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function SpikeStairTrap_BP.SpikeStairTrap_BP_C.BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'SpikeStairTrap_BP_C_BndEvt__SpikeStairTrap_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

}

