#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KeyboardKey

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function KeyboardKey.KeyboardKey_C.OnHoveredKeyboardKey__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct KeyboardKey_C_OnHoveredKeyboardKey__DelegateSignature final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardKey_C_OnHoveredKeyboardKey__DelegateSignature) == 0x000008, "Wrong alignment on KeyboardKey_C_OnHoveredKeyboardKey__DelegateSignature");
static_assert(sizeof(KeyboardKey_C_OnHoveredKeyboardKey__DelegateSignature) == 0x000018, "Wrong size on KeyboardKey_C_OnHoveredKeyboardKey__DelegateSignature");
static_assert(offsetof(KeyboardKey_C_OnHoveredKeyboardKey__DelegateSignature, InKey) == 0x000000, "Member 'KeyboardKey_C_OnHoveredKeyboardKey__DelegateSignature::InKey' has a wrong offset!");

// Function KeyboardKey.KeyboardKey_C.ExecuteUbergraph_KeyboardKey
// 0x0018 (0x0018 - 0x0000)
struct KeyboardKey_C_ExecuteUbergraph_KeyboardKey final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KeyboardKey_C_ExecuteUbergraph_KeyboardKey) == 0x000008, "Wrong alignment on KeyboardKey_C_ExecuteUbergraph_KeyboardKey");
static_assert(sizeof(KeyboardKey_C_ExecuteUbergraph_KeyboardKey) == 0x000018, "Wrong size on KeyboardKey_C_ExecuteUbergraph_KeyboardKey");
static_assert(offsetof(KeyboardKey_C_ExecuteUbergraph_KeyboardKey, EntryPoint) == 0x000000, "Member 'KeyboardKey_C_ExecuteUbergraph_KeyboardKey::EntryPoint' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_ExecuteUbergraph_KeyboardKey, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'KeyboardKey_C_ExecuteUbergraph_KeyboardKey::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_ExecuteUbergraph_KeyboardKey, CallFunc_Key_IsValid_ReturnValue) == 0x000010, "Member 'KeyboardKey_C_ExecuteUbergraph_KeyboardKey::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_ExecuteUbergraph_KeyboardKey, K2Node_Event_IsDesignTime) == 0x000011, "Member 'KeyboardKey_C_ExecuteUbergraph_KeyboardKey::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function KeyboardKey.KeyboardKey_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct KeyboardKey_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KeyboardKey_C_PreConstruct) == 0x000001, "Wrong alignment on KeyboardKey_C_PreConstruct");
static_assert(sizeof(KeyboardKey_C_PreConstruct) == 0x000001, "Wrong size on KeyboardKey_C_PreConstruct");
static_assert(offsetof(KeyboardKey_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'KeyboardKey_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function KeyboardKey.KeyboardKey_C.Highlight
// 0x00F8 (0x00F8 - 0x0000)
struct KeyboardKey_C_Highlight final
{
public:
	bool                                          bHighlight;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFocusHighlight;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            TintColorFocusHightligt;                           // 0x0008(0x0028)(Edit, BlueprintVisible)
	struct FSlateColor                            TintColorNormal;                                   // 0x0030(0x0028)(Edit, BlueprintVisible)
	struct FSlateColor                            TintColorHightligt;                                // 0x0058(0x0028)(Edit, BlueprintVisible)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0080(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00A8(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x00D0(0x0028)(UObjectWrapper)
};
static_assert(alignof(KeyboardKey_C_Highlight) == 0x000008, "Wrong alignment on KeyboardKey_C_Highlight");
static_assert(sizeof(KeyboardKey_C_Highlight) == 0x0000F8, "Wrong size on KeyboardKey_C_Highlight");
static_assert(offsetof(KeyboardKey_C_Highlight, bHighlight) == 0x000000, "Member 'KeyboardKey_C_Highlight::bHighlight' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_Highlight, bFocusHighlight) == 0x000001, "Member 'KeyboardKey_C_Highlight::bFocusHighlight' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_Highlight, TintColorFocusHightligt) == 0x000008, "Member 'KeyboardKey_C_Highlight::TintColorFocusHightligt' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_Highlight, TintColorNormal) == 0x000030, "Member 'KeyboardKey_C_Highlight::TintColorNormal' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_Highlight, TintColorHightligt) == 0x000058, "Member 'KeyboardKey_C_Highlight::TintColorHightligt' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_Highlight, K2Node_MakeStruct_SlateColor) == 0x000080, "Member 'KeyboardKey_C_Highlight::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_Highlight, K2Node_MakeStruct_SlateColor_1) == 0x0000A8, "Member 'KeyboardKey_C_Highlight::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_Highlight, K2Node_MakeStruct_SlateColor_2) == 0x0000D0, "Member 'KeyboardKey_C_Highlight::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");

// Function KeyboardKey.KeyboardKey_C.SetGlobalSettings
// 0x0200 (0x0200 - 0x0000)
struct KeyboardKey_C_SetGlobalSettings final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0028)()
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor;                // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor;           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor;      // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor;      // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor;    // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor;              // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor;              // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor;      // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor;    // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_1;              // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_1;         // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_1;    // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_1;    // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_1;  // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_1;            // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_1;            // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_1;    // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_1;  // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_2;              // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_2;         // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_2;    // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_2;    // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_2;  // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_2;            // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_2;            // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_2;    // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_2;  // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(KeyboardKey_C_SetGlobalSettings) == 0x000008, "Wrong alignment on KeyboardKey_C_SetGlobalSettings");
static_assert(sizeof(KeyboardKey_C_SetGlobalSettings) == 0x000200, "Wrong size on KeyboardKey_C_SetGlobalSettings");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'KeyboardKey_C_SetGlobalSettings::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'KeyboardKey_C_SetGlobalSettings::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor) == 0x000050, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor) == 0x000060, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor) == 0x000070, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor) == 0x000080, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor) == 0x000090, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor) == 0x0000A0, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor) == 0x0000B0, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor) == 0x0000C0, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor) == 0x0000D0, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_1) == 0x0000E0, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_1) == 0x0000F0, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_1) == 0x000100, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_1) == 0x000110, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_1) == 0x000120, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_1) == 0x000130, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_1) == 0x000140, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_1) == 0x000150, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_1) == 0x000160, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_2) == 0x000170, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_2) == 0x000180, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_2) == 0x000190, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_2) == 0x0001A0, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_2) == 0x0001B0, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_2) == 0x0001C0, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_2) == 0x0001D0, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_2) == 0x0001E0, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_2' has a wrong offset!");
static_assert(offsetof(KeyboardKey_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_2) == 0x0001F0, "Member 'KeyboardKey_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_2' has a wrong offset!");

}

