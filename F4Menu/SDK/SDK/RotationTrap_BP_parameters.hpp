#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RotationTrap_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function RotationTrap_BP.RotationTrap_BP_C.ExecuteUbergraph_RotationTrap_BP
// 0x0418 (0x0418 - 0x0000)
struct RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_4;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_4;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_4;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_4;          // 0x0028(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Chick_Pawn_C*                 K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Pawn_C*                       K2Node_DynamicCast_AsBP_ALTF4_Pawn;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_3;           // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_3;          // 0x00F8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Pawn_C*                       K2Node_DynamicCast_AsBP_ALTF4_Pawn_1;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Chick_Pawn_C*                 K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_1;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable;                         // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x01C8(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0278(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Pawn_C*                       K2Node_DynamicCast_AsBP_ALTF4_Pawn_2;              // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Pawn_C*                       K2Node_DynamicCast_AsBP_ALTF4_Pawn_3;              // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Chick_Pawn_C*                 K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_2;        // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Chick_Pawn_C*                 K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_3;        // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable;                   // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0348(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0368(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Pawn_C*                       K2Node_DynamicCast_AsBP_ALTF4_Pawn_4;              // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Chick_Pawn_C*                 K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_4;        // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP) == 0x000008, "Wrong alignment on RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP");
static_assert(sizeof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP) == 0x000418, "Wrong size on RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, EntryPoint) == 0x000000, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OverlappedComponent_4) == 0x000008, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OverlappedComponent_4' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherActor_4) == 0x000010, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherComp_4) == 0x000018, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_4) == 0x000020, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_4' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_bFromSweep_4) == 0x000024, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_bFromSweep_4' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_SweepResult_4) == 0x000028, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_SweepResult_4' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn) == 0x0000B8, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Pawn) == 0x0000C8, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Pawn' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x0000D8, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherActor_3) == 0x0000E0, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherComp_3) == 0x0000E8, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x0000F0, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_bFromSweep_3) == 0x0000F4, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_bFromSweep_3' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_SweepResult_3) == 0x0000F8, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_SweepResult_3' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Pawn_1) == 0x000188, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Pawn_1' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_bSuccess_2) == 0x000190, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_1) == 0x000198, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_1' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_bSuccess_3) == 0x0001A0, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, ___bool_IsClosed_Variable) == 0x0001A1, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::___bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x0001A8, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherActor_2) == 0x0001B0, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherComp_2) == 0x0001B8, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x0001C0, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x0001C4, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_SweepResult_2) == 0x0001C8, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000258, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000260, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000268, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000270, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000274, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000278, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Pawn_2) == 0x000308, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Pawn_2' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_bSuccess_4) == 0x000310, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Pawn_3) == 0x000318, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Pawn_3' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_bSuccess_5) == 0x000320, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_2) == 0x000328, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_2' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_bSuccess_6) == 0x000330, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_3) == 0x000338, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_3' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_bSuccess_7) == 0x000340, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, ___bool_Has_Been_Initd_Variable) == 0x000341, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::___bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000348, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherActor) == 0x000350, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherComp) == 0x000358, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000360, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_bFromSweep) == 0x000364, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_ComponentBoundEvent_SweepResult) == 0x000368, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Pawn_4) == 0x0003F8, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Pawn_4' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_bSuccess_8) == 0x000400, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_4) == 0x000408, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_AsBP_ALTF4_Chick_Pawn_4' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP, K2Node_DynamicCast_bSuccess_9) == 0x000410, "Member 'RotationTrap_BP_C_ExecuteUbergraph_RotationTrap_BP::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");

// Function RotationTrap_BP.RotationTrap_BP_C.BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_05_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function RotationTrap_BP.RotationTrap_BP_C.BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_04_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function RotationTrap_BP.RotationTrap_BP_C.BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_03_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function RotationTrap_BP.RotationTrap_BP_C.BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_02_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function RotationTrap_BP.RotationTrap_BP_C.BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000B0, "Wrong size on RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'RotationTrap_BP_C_BndEvt__RotationTrap_BP_Overlap_01_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

}

