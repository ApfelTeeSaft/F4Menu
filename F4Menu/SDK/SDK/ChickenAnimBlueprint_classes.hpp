#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChickenAnimBlueprint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DynamicNode_structs.hpp"
#include "DynamicNode_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ChickenAnimBlueprint.ChickenAnimBlueprint_C
// 0x0100 (0x16C0 - 0x15C0)
class UChickenAnimBlueprint_C final : public UAnimMultiNodeInstance_DN
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x15C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x15C8(0x0080)()
	struct FAnimNode_CPPDynamic                   AnimGraphNode_CPPDynamic;                          // 0x1648(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1670(0x0030)()
	float                                         Speed;                                             // 0x16A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInAir_;                                          // 0x16A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Throwing_;                                         // 0x16A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A6[0x2];                                     // 0x16A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Chicken_Pawn;                                      // 0x16A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrowValue;                                        // 0x16B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ChickenAnimBlueprint(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChickenAnimBlueprint_C">();
	}
	static class UChickenAnimBlueprint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChickenAnimBlueprint_C>();
	}
};
static_assert(alignof(UChickenAnimBlueprint_C) == 0x000010, "Wrong alignment on UChickenAnimBlueprint_C");
static_assert(sizeof(UChickenAnimBlueprint_C) == 0x0016C0, "Wrong size on UChickenAnimBlueprint_C");
static_assert(offsetof(UChickenAnimBlueprint_C, UberGraphFrame) == 0x0015C0, "Member 'UChickenAnimBlueprint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChickenAnimBlueprint_C, AnimGraphNode_SequencePlayer) == 0x0015C8, "Member 'UChickenAnimBlueprint_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UChickenAnimBlueprint_C, AnimGraphNode_CPPDynamic) == 0x001648, "Member 'UChickenAnimBlueprint_C::AnimGraphNode_CPPDynamic' has a wrong offset!");
static_assert(offsetof(UChickenAnimBlueprint_C, AnimGraphNode_Root) == 0x001670, "Member 'UChickenAnimBlueprint_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UChickenAnimBlueprint_C, Speed) == 0x0016A0, "Member 'UChickenAnimBlueprint_C::Speed' has a wrong offset!");
static_assert(offsetof(UChickenAnimBlueprint_C, IsInAir_) == 0x0016A4, "Member 'UChickenAnimBlueprint_C::IsInAir_' has a wrong offset!");
static_assert(offsetof(UChickenAnimBlueprint_C, Throwing_) == 0x0016A5, "Member 'UChickenAnimBlueprint_C::Throwing_' has a wrong offset!");
static_assert(offsetof(UChickenAnimBlueprint_C, Chicken_Pawn) == 0x0016A8, "Member 'UChickenAnimBlueprint_C::Chicken_Pawn' has a wrong offset!");
static_assert(offsetof(UChickenAnimBlueprint_C, ThrowValue) == 0x0016B0, "Member 'UChickenAnimBlueprint_C::ThrowValue' has a wrong offset!");

}

