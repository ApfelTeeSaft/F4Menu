#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StageA01_FishShot_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass StageA01_FishShot_BP.StageA01_FishShot_BP_C
// 0x0038 (0x02E0 - 0x02A8)
class AStageA01_FishShot_BP_C final : public ASkeletalMeshActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Fish_OverlapCollision;                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        FISH;                                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialForceComponent*                  RadialForce;                                       // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Min;                                               // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Max;                                               // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_StageA01_FishShot_BP(int32 EntryPoint);
	void BndEvt__fish_shot_BP1_SkeletalMeshComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__Fish_OverlapCollision_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();
	void OnSuccess_FF86D0DB4D8E7379D9F7FE9E76A214AF(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnFailure_FF86D0DB4D8E7379D9F7FE9E76A214AF(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnSuccess_963398A54D6699DCCAD309B4BCCA0AD9();
	void OnFailure_963398A54D6699DCCAD309B4BCCA0AD9();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"StageA01_FishShot_BP_C">();
	}
	static class AStageA01_FishShot_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AStageA01_FishShot_BP_C>();
	}
};
static_assert(alignof(AStageA01_FishShot_BP_C) == 0x000008, "Wrong alignment on AStageA01_FishShot_BP_C");
static_assert(sizeof(AStageA01_FishShot_BP_C) == 0x0002E0, "Wrong size on AStageA01_FishShot_BP_C");
static_assert(offsetof(AStageA01_FishShot_BP_C, UberGraphFrame) == 0x0002A8, "Member 'AStageA01_FishShot_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AStageA01_FishShot_BP_C, Fish_OverlapCollision) == 0x0002B0, "Member 'AStageA01_FishShot_BP_C::Fish_OverlapCollision' has a wrong offset!");
static_assert(offsetof(AStageA01_FishShot_BP_C, FISH) == 0x0002B8, "Member 'AStageA01_FishShot_BP_C::FISH' has a wrong offset!");
static_assert(offsetof(AStageA01_FishShot_BP_C, RadialForce) == 0x0002C0, "Member 'AStageA01_FishShot_BP_C::RadialForce' has a wrong offset!");
static_assert(offsetof(AStageA01_FishShot_BP_C, ProjectileMovement) == 0x0002C8, "Member 'AStageA01_FishShot_BP_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(AStageA01_FishShot_BP_C, Length) == 0x0002D0, "Member 'AStageA01_FishShot_BP_C::Length' has a wrong offset!");
static_assert(offsetof(AStageA01_FishShot_BP_C, Min) == 0x0002D4, "Member 'AStageA01_FishShot_BP_C::Min' has a wrong offset!");
static_assert(offsetof(AStageA01_FishShot_BP_C, Max) == 0x0002D8, "Member 'AStageA01_FishShot_BP_C::Max' has a wrong offset!");

}

