#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ALTF4_Pawn

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "DynamicNode_structs.hpp"
#include "DynamicNode_classes.hpp"
#include "InputCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ALTF4_Pawn.BP_ALTF4_Pawn_C
// 0x03B0 (0x0970 - 0x05C0)
class ABP_ALTF4_Pawn_C : public ADNCharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UAudioComponent*                        __4__e01_Cue;                                      // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_LowerArm_L;                                // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_LowerArm_R;                                // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_UpperArm_R;                                // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_UpperArm_L;                                // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Thigh_R;                                   // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Thigh_L;                                   // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Spine;                                     // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Shoulder_R;                                // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Shoulder_L;                                // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Rips;                                      // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Pelvis;                                    // 0x0620(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Head;                                      // 0x0628(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Hand_R;                                    // 0x0630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Hand_L;                                    // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Foot_R;                                    // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Foot_L;                                    // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Calf_R;                                    // 0x0650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Bone_Calf_L;                                    // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Par_Voya_01;                                       // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             Feather_Propeller_Rotation;                        // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Feather_propeller;                                 // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMenuCharacterComponent_C*              MenuCharacterComponent;                            // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       One_Camera;                                        // 0x0680(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Blood_04;                                          // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Blood_03;                                          // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Blood_02;                                          // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Blood_01;                                          // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       HeadOverlap;                                       // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GrainSack_mdl;                                     // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 InBag_Chicken;                                     // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CameraBoom;                                        // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Three_FollowCamera;                                // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHeight_Alpha_2D7506FF4A964CC1CEF09590F1048E10; // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            CapsuleHeight__Direction_2D7506FF4A964CC1CEF09590F1048E10; // 0x06D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D5[0x3];                                      // 0x06D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CapsuleHeight;                                     // 0x06D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GlowColor_2_Color_5A4EF96146202963BA3184974437439C; // 0x06E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            GlowColor_2__Direction_5A4EF96146202963BA3184974437439C; // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6ED[0x3];                                      // 0x06ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GlowColor_2;                                       // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZVelo_Alpha_375E0EDB425ADC2A0572C193406BA2B3;      // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            ZVelo__Direction_375E0EDB425ADC2A0572C193406BA2B3; // 0x06FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FD[0x3];                                      // 0x06FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ZVelo;                                             // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____5_Time_EE53F2F54C6AD5D154647B976BF69CA7;      // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            _____5__Direction_EE53F2F54C6AD5D154647B976BF69CA7; // 0x070C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70D[0x3];                                      // 0x070D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ___x_5;                                            // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____4______0_BAB8B5184080A6242FBE98893A5709AE;    // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            _____4__Direction_BAB8B5184080A6242FBE98893A5709AE; // 0x071C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71D[0x3];                                      // 0x071D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ___x_4;                                            // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____3_Time_1FCDA23C41EDDF81AB079783FFF3C33B;      // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            _____3__Direction_1FCDA23C41EDDF81AB079783FFF3C33B; // 0x072C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72D[0x3];                                      // 0x072D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ___x_3;                                            // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____2______0_610387D94D0E9C9CD105FD9C942D36BE;    // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            _____2__Direction_610387D94D0E9C9CD105FD9C942D36BE; // 0x073C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73D[0x3];                                      // 0x073D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ___x_2;                                            // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____1_Time_20F4E8F54800DA1D0E173CBB8E604A18;      // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            _____1__Direction_20F4E8F54800DA1D0E173CBB8E604A18; // 0x074C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74D[0x3];                                      // 0x074D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ___x_1;                                            // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _____0______0_379874B547E97B6897605592565C1FF6;    // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            _____0__Direction_379874B547E97B6897605592565C1FF6; // 0x075C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75D[0x3];                                      // 0x075D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ___x_0;                                            // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlowMotion_Time_F5BD00A14C4EF52D8738B1BA8886619B;  // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            SlowMotion__Direction_F5BD00A14C4EF52D8738B1BA8886619B; // 0x076C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76D[0x3];                                      // 0x076D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SlowMotion;                                        // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraOutTime______0_C11BE96347BBDF89B83C7EB156CBC6B9; // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            CameraOutTime__Direction_C11BE96347BBDF89B83C7EB156CBC6B9; // 0x077C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D[0x3];                                      // 0x077D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CameraOutTime;                                     // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseTurnRate;                                      // 0x0788(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseLookUpRate;                                    // 0x078C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LegsIK;                                            // 0x0790(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_791[0x3];                                      // 0x0791(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RagdollTimeToGround;                               // 0x0794(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RagdollLocationFromClient;                         // 0x0798(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRagdoll;                                         // 0x07A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A5[0x3];                                      // 0x07A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RagdollPos;                                        // 0x07A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RotationModeVelocity;                              // 0x07B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B5[0x3];                                      // 0x07B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotationRateOnFround;                              // 0x07B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseTurnInPlace;                                    // 0x07BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7BD[0x3];                                      // 0x07BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ShootOffset;                                       // 0x07C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CC[0x4];                                      // 0x07CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ShootTransform;                                    // 0x07D0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanMove_;                                          // 0x0800(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PossibleThrowing_;                                 // 0x0801(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Jump_;                                             // 0x0802(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RagdollPush_;                                      // 0x0803(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         Damage;                                            // 0x0804(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Die;                                               // 0x0808(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Save_;                                             // 0x0809(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WaterDie_;                                         // 0x080A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_80B[0x5];                                      // 0x080B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UParticleSystemComponent*>       BloodArray;                                        // 0x0810(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class AController*                            ChController;                                      // 0x0820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TutoInfoShow;                                      // 0x0828(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TutorialSleepPawn;                                 // 0x0829(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A[0x2];                                      // 0x082A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                V_DeadLocation;                                    // 0x082C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               V_DeadRotation;                                    // 0x0838(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_844[0x4];                                      // 0x0844(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 RestartChar;                                       // 0x0848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Save_Point_Location;                               // 0x0850(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x085C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 NormalDeadBody;                                    // 0x0860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         WaterBody_Z;                                       // 0x0868(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RespawnZ_Value;                                    // 0x086C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WaterDieLocation;                                  // 0x0870(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USteamMulti_GameInstance_C*             ALTF4_GI;                                          // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTutorial_Info_UI_C*                    TutoInfo_UI;                                       // 0x0888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UYouDie_UI_C*                           Die_UI;                                            // 0x0890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SaveArea;                                          // 0x0898(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SaveAreaB;                                         // 0x089C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SaveAreaOverlapArea;                               // 0x08A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeadBodySpawn_;                                    // 0x08A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A5[0x3];                                      // 0x08A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AALTF4_Start_Blueprint_C*>       StartPointValue;                                   // 0x08A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          Sliding_;                                          // 0x08B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Camera_3_;                                         // 0x08B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WheelCamera_;                                      // 0x08BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8BB[0x1];                                      // 0x08BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RotationRateCurrent;                               // 0x08BC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsFalling_;                                        // 0x08C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9[0x3];                                      // 0x08C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Camera_PitchMax;                                   // 0x08CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Camera_YawMax;                                     // 0x08D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D4[0x4];                                      // 0x08D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LevelName;                                         // 0x08D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          TA01_StereamLevelValue;                            // 0x08F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PossibleSuicide;                                   // 0x08F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          VillageMap_StereamLevel_;                          // 0x08F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TutorialLevelValue;                                // 0x08F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               HeadRotation;                                      // 0x08F4(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                TeleportLocation;                                  // 0x0900(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GroundLength;                                      // 0x090C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ALTF4_GameMAP;                                     // 0x0910(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Item_;                                             // 0x0911(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ItemUsePossible;                                   // 0x0912(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EggShot_;                                          // 0x0913(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Fly_;                                              // 0x0914(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_915[0x3];                                      // 0x0915(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Fly_Z_Velocity;                                    // 0x0918(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fly_Time;                                          // 0x091C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ultimate_;                                         // 0x0920(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_921[0x3];                                      // 0x0921(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UltimateEndDelay;                                  // 0x0924(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           ALTF4_BoneArray;                                   // 0x0928(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         CharFowardMoveValue;                               // 0x0938(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CharRightMoveValue;                                // 0x093C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpTown_Level;                                      // 0x0940(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          StageA01_Level;                                    // 0x0941(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PlayerDown_;                                       // 0x0942(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Shock_;                                            // 0x0943(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Shock_Material;                                    // 0x0944(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Airplane_Level;                                    // 0x0945(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Running_Level;                                     // 0x0946(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Hell_Level;                                        // 0x0947(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Clear_;                                            // 0x0948(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949[0x3];                                      // 0x0949(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShowLoadingInteger;                                // 0x094C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        NowSound;                                          // 0x0950(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTIP_UI_C*                              TIP_UI;                                            // 0x0958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TipShow;                                           // 0x0960(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Nintendo_Level;                                    // 0x0961(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_962[0x6];                                      // 0x0962(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNintendo_Stage_Start_Widget_C*         NinStartWidget;                                    // 0x0968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ALTF4_Pawn(int32 EntryPoint);
	void IceMode();
	void StopIceMode();
	void ElectronicShockDead();
	void PortalGO_();
	void End_Ultimate();
	void FlyEnd();
	void Egg_Fire();
	void ItemAbillty_01_SuperMode();
	void ItemAbillty_02_SaveSpawn();
	void ItemAbillty_03_Egg();
	void ItemAbillty_04_Fly();
	void ItemAbillty_05_Shield();
	void ItemAbillty_06();
	void InpAxisEvt_LookUp_K2Node_InputAxisEvent_40(float AxisValue);
	void InpAxisEvt_Turn_K2Node_InputAxisEvent_47(float AxisValue);
	void InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79(float AxisValue);
	void InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90(float AxisValue);
	void InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38(float AxisValue);
	void InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53(float AxisValue);
	void SetRotationRateTo_Null();
	void SetRotationRateTo_Current();
	void Dodge_Multi();
	void Dodge_Server();
	void ItemRoot();
	void ItemBlank();
	void BloodActive(class UActorComponent* BloodType);
	void BloodActive_Server(class UActorComponent* BloodType);
	void BloodActive_Multi(class UActorComponent* BloodType);
	void DieAndRespawn();
	void SendDamage();
	void Restart_Multi();
	void Restart_Server();
	void Restart();
	void WaterDD();
	void C_FireServer();
	void C_FireMultiCast();
	void ProjectileSpawn(float FirstShootDelay, float SecondShootDelay);
	void OnLanded(const struct FHitResult& Hit);
	void CharStandingDetect_Server();
	void CharStandingDetect_Multi();
	void UpdateRagdollServer(float TimeToGround, const struct FVector& ActorLocation, const struct FRotator& ActorRotation, const struct FVector& RagdollLocation);
	void UpdateRagdollMulticast(float TimeToGround, const struct FVector& ActorLocation, const struct FRotator& ActorRotation, const struct FVector& RagdollLocation);
	void RagdollGetupAnimCE(const class UAnimationAsset* Sequence);
	void RagdollAutoGetup();
	void FirstRagdollEnd();
	void AbsoluteRagdoll();
	void Nintendo_Start();
	void TipDelete_Event();
	void Tip_Event();
	void Reopen();
	void Tutorial_Info_Delete();
	void Tutorial_Info_UI(int32 SelectTutoInfoInteger);
	void AirplaneMap_Portal_IN_Status();
	void ImpulseHIT_();
	void TurnToSpineServer();
	void TurnToSpineMulti();
	void WakeUP_();
	void DeathKnight();
	void InstantDeath();
	void SavePointSet(const struct FVector& SavePointLocation);
	void WaterDie();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ChickHit_();
	void DeathSound_multi();
	void DeathSound_Server();
	void DeathSound();
	void HitSound_Multi();
	void HitSound_Server();
	void HitSound();
	void Hit__();
	void ChickStatusMulti();
	void ChickStatusServer();
	void ChickStatus();
	void UpdateRotationMode(bool OnlyRotationRate);
	void RagdollMulticast(bool Absolute_, bool OnLandRagdoll);
	void RagdollServer(bool Absolute_, bool OnLandRagdoll);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void OnSuccess_1FD8CEFC4B748114440C0E9535A49AB7();
	void OnFailure_1FD8CEFC4B748114440C0E9535A49AB7();
	void OnSuccess_7F3F889A4384097C5BD2E2B906A23A42(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnFailure_7F3F889A4384097C5BD2E2B906A23A42(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void InpActEvt_Jump_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_Jump_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpTchEvt_Pressed(ETouchIndex FingerIndex, const struct FVector& Location);
	void InpTchEvt_Released(ETouchIndex FingerIndex, const struct FVector& Location);
	void InpActEvt_zoom_K2Node_InputActionEvent_2(const struct FKey& Key);
	void OnSuccess_E394ADA94475F3F8E68F7F8E8215512A();
	void OnFailure_E394ADA94475F3F8E68F7F8E8215512A();
	void OnSuccess_DBC6469A403CE807C27C0E9C295C3D53(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnFailure_DBC6469A403CE807C27C0E9C295C3D53(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void InpActEvt_slide_K2Node_InputActionEvent_3(const struct FKey& Key);
	void OnSuccess_F4A843E945DAB799BBCEAEA8F5466C6E();
	void OnFailure_F4A843E945DAB799BBCEAEA8F5466C6E();
	void OnSuccess_257FE0A943D994B9EC18F8AFEC6BFDCB(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnFailure_257FE0A943D994B9EC18F8AFEC6BFDCB(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void InpActEvt_Fire_K2Node_InputActionEvent_4(const struct FKey& Key);
	void OnSuccess_F7417B9440034D83FD5801924844F6B6();
	void OnFailure_F7417B9440034D83FD5801924844F6B6();
	void OnSuccess_1E73F2BF4CD4DF27C6E7388745857FA6(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnFailure_1E73F2BF4CD4DF27C6E7388745857FA6(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnSuccess_3D3935B94F92A97A8D483782C691D2C1(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnFailure_3D3935B94F92A97A8D483782C691D2C1(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnSuccess_27E1D85F4F77C321709984A87F2E7B69();
	void OnFailure_27E1D85F4F77C321709984A87F2E7B69();
	void OnSuccess_EBAE4D284B7AFC251A3D6892EC48630A(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnFailure_EBAE4D284B7AFC251A3D6892EC48630A(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag);
	void OnSuccess_A2D0624C45DF805D154287B76FCECBD9();
	void OnFailure_A2D0624C45DF805D154287B76FCECBD9();
	void InpActEvt_Suicide_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_RegDoll_K2Node_InputActionEvent_6(const struct FKey& Key);
	void GlowColor_2__WhiteEvent__EventFunc();
	void GlowColor_2__BlueEvent__EventFunc();
	void GlowColor_2__UpdateFunc();
	void GlowColor_2__FinishedFunc();
	void ZVelo__UpdateFunc();
	void ZVelo__FinishedFunc();
	void CapsuleHeight__UpdateFunc();
	void CapsuleHeight__FinishedFunc();
	void ___x_2__UpdateFunc();
	void ___x_2__FinishedFunc();
	void ___x_3__UpdateFunc();
	void ___x_3__FinishedFunc();
	void ___x_0__UpdateFunc();
	void ___x_0__FinishedFunc();
	void ___x_1__UpdateFunc();
	void ___x_1__FinishedFunc();
	void ___x_4__UpdateFunc();
	void ___x_4__FinishedFunc();
	void ___x_5__UpdateFunc();
	void ___x_5__FinishedFunc();
	void CameraOutTime__UpdateFunc();
	void CameraOutTime__FinishedFunc();
	void SlowMotion__UpdateFunc();
	void SlowMotion__FinishedFunc();
	void UserConstructionScript();
	void F_SetCanMoving(bool Can_);
	void F_GetDamage();
	void F_DieBodySpawn();
	void F_ChangeCameraSet();
	void F_GetLookRotation();
	void F_GetGroundLegth();
	void F_ElectronicShockMaterial();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ALTF4_Pawn_C">();
	}
	static class ABP_ALTF4_Pawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ALTF4_Pawn_C>();
	}
};
static_assert(alignof(ABP_ALTF4_Pawn_C) == 0x000010, "Wrong alignment on ABP_ALTF4_Pawn_C");
static_assert(sizeof(ABP_ALTF4_Pawn_C) == 0x000970, "Wrong size on ABP_ALTF4_Pawn_C");
static_assert(offsetof(ABP_ALTF4_Pawn_C, UberGraphFrame) == 0x0005C0, "Member 'ABP_ALTF4_Pawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, __4__e01_Cue) == 0x0005C8, "Member 'ABP_ALTF4_Pawn_C::__4__e01_Cue' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_LowerArm_L) == 0x0005D0, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_LowerArm_L' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_LowerArm_R) == 0x0005D8, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_LowerArm_R' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_UpperArm_R) == 0x0005E0, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_UpperArm_R' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_UpperArm_L) == 0x0005E8, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_UpperArm_L' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Thigh_R) == 0x0005F0, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Thigh_R' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Thigh_L) == 0x0005F8, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Thigh_L' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Spine) == 0x000600, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Spine' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Shoulder_R) == 0x000608, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Shoulder_R' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Shoulder_L) == 0x000610, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Shoulder_L' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Rips) == 0x000618, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Rips' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Pelvis) == 0x000620, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Pelvis' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Head) == 0x000628, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Head' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Hand_R) == 0x000630, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Hand_R' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Hand_L) == 0x000638, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Hand_L' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Foot_R) == 0x000640, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Foot_R' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Foot_L) == 0x000648, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Foot_L' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Calf_R) == 0x000650, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Calf_R' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SM_Bone_Calf_L) == 0x000658, "Member 'ABP_ALTF4_Pawn_C::SM_Bone_Calf_L' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Par_Voya_01) == 0x000660, "Member 'ABP_ALTF4_Pawn_C::Par_Voya_01' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Feather_Propeller_Rotation) == 0x000668, "Member 'ABP_ALTF4_Pawn_C::Feather_Propeller_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Feather_propeller) == 0x000670, "Member 'ABP_ALTF4_Pawn_C::Feather_propeller' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, MenuCharacterComponent) == 0x000678, "Member 'ABP_ALTF4_Pawn_C::MenuCharacterComponent' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, One_Camera) == 0x000680, "Member 'ABP_ALTF4_Pawn_C::One_Camera' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Blood_04) == 0x000688, "Member 'ABP_ALTF4_Pawn_C::Blood_04' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Blood_03) == 0x000690, "Member 'ABP_ALTF4_Pawn_C::Blood_03' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Blood_02) == 0x000698, "Member 'ABP_ALTF4_Pawn_C::Blood_02' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Blood_01) == 0x0006A0, "Member 'ABP_ALTF4_Pawn_C::Blood_01' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, HeadOverlap) == 0x0006A8, "Member 'ABP_ALTF4_Pawn_C::HeadOverlap' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, GrainSack_mdl) == 0x0006B0, "Member 'ABP_ALTF4_Pawn_C::GrainSack_mdl' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, InBag_Chicken) == 0x0006B8, "Member 'ABP_ALTF4_Pawn_C::InBag_Chicken' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, CameraBoom) == 0x0006C0, "Member 'ABP_ALTF4_Pawn_C::CameraBoom' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Three_FollowCamera) == 0x0006C8, "Member 'ABP_ALTF4_Pawn_C::Three_FollowCamera' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, CapsuleHeight_Alpha_2D7506FF4A964CC1CEF09590F1048E10) == 0x0006D0, "Member 'ABP_ALTF4_Pawn_C::CapsuleHeight_Alpha_2D7506FF4A964CC1CEF09590F1048E10' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, CapsuleHeight__Direction_2D7506FF4A964CC1CEF09590F1048E10) == 0x0006D4, "Member 'ABP_ALTF4_Pawn_C::CapsuleHeight__Direction_2D7506FF4A964CC1CEF09590F1048E10' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, CapsuleHeight) == 0x0006D8, "Member 'ABP_ALTF4_Pawn_C::CapsuleHeight' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, GlowColor_2_Color_5A4EF96146202963BA3184974437439C) == 0x0006E0, "Member 'ABP_ALTF4_Pawn_C::GlowColor_2_Color_5A4EF96146202963BA3184974437439C' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, GlowColor_2__Direction_5A4EF96146202963BA3184974437439C) == 0x0006EC, "Member 'ABP_ALTF4_Pawn_C::GlowColor_2__Direction_5A4EF96146202963BA3184974437439C' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, GlowColor_2) == 0x0006F0, "Member 'ABP_ALTF4_Pawn_C::GlowColor_2' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ZVelo_Alpha_375E0EDB425ADC2A0572C193406BA2B3) == 0x0006F8, "Member 'ABP_ALTF4_Pawn_C::ZVelo_Alpha_375E0EDB425ADC2A0572C193406BA2B3' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ZVelo__Direction_375E0EDB425ADC2A0572C193406BA2B3) == 0x0006FC, "Member 'ABP_ALTF4_Pawn_C::ZVelo__Direction_375E0EDB425ADC2A0572C193406BA2B3' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ZVelo) == 0x000700, "Member 'ABP_ALTF4_Pawn_C::ZVelo' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, _____5_Time_EE53F2F54C6AD5D154647B976BF69CA7) == 0x000708, "Member 'ABP_ALTF4_Pawn_C::_____5_Time_EE53F2F54C6AD5D154647B976BF69CA7' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, _____5__Direction_EE53F2F54C6AD5D154647B976BF69CA7) == 0x00070C, "Member 'ABP_ALTF4_Pawn_C::_____5__Direction_EE53F2F54C6AD5D154647B976BF69CA7' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ___x_5) == 0x000710, "Member 'ABP_ALTF4_Pawn_C::___x_5' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, _____4______0_BAB8B5184080A6242FBE98893A5709AE) == 0x000718, "Member 'ABP_ALTF4_Pawn_C::_____4______0_BAB8B5184080A6242FBE98893A5709AE' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, _____4__Direction_BAB8B5184080A6242FBE98893A5709AE) == 0x00071C, "Member 'ABP_ALTF4_Pawn_C::_____4__Direction_BAB8B5184080A6242FBE98893A5709AE' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ___x_4) == 0x000720, "Member 'ABP_ALTF4_Pawn_C::___x_4' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, _____3_Time_1FCDA23C41EDDF81AB079783FFF3C33B) == 0x000728, "Member 'ABP_ALTF4_Pawn_C::_____3_Time_1FCDA23C41EDDF81AB079783FFF3C33B' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, _____3__Direction_1FCDA23C41EDDF81AB079783FFF3C33B) == 0x00072C, "Member 'ABP_ALTF4_Pawn_C::_____3__Direction_1FCDA23C41EDDF81AB079783FFF3C33B' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ___x_3) == 0x000730, "Member 'ABP_ALTF4_Pawn_C::___x_3' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, _____2______0_610387D94D0E9C9CD105FD9C942D36BE) == 0x000738, "Member 'ABP_ALTF4_Pawn_C::_____2______0_610387D94D0E9C9CD105FD9C942D36BE' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, _____2__Direction_610387D94D0E9C9CD105FD9C942D36BE) == 0x00073C, "Member 'ABP_ALTF4_Pawn_C::_____2__Direction_610387D94D0E9C9CD105FD9C942D36BE' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ___x_2) == 0x000740, "Member 'ABP_ALTF4_Pawn_C::___x_2' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, _____1_Time_20F4E8F54800DA1D0E173CBB8E604A18) == 0x000748, "Member 'ABP_ALTF4_Pawn_C::_____1_Time_20F4E8F54800DA1D0E173CBB8E604A18' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, _____1__Direction_20F4E8F54800DA1D0E173CBB8E604A18) == 0x00074C, "Member 'ABP_ALTF4_Pawn_C::_____1__Direction_20F4E8F54800DA1D0E173CBB8E604A18' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ___x_1) == 0x000750, "Member 'ABP_ALTF4_Pawn_C::___x_1' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, _____0______0_379874B547E97B6897605592565C1FF6) == 0x000758, "Member 'ABP_ALTF4_Pawn_C::_____0______0_379874B547E97B6897605592565C1FF6' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, _____0__Direction_379874B547E97B6897605592565C1FF6) == 0x00075C, "Member 'ABP_ALTF4_Pawn_C::_____0__Direction_379874B547E97B6897605592565C1FF6' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ___x_0) == 0x000760, "Member 'ABP_ALTF4_Pawn_C::___x_0' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SlowMotion_Time_F5BD00A14C4EF52D8738B1BA8886619B) == 0x000768, "Member 'ABP_ALTF4_Pawn_C::SlowMotion_Time_F5BD00A14C4EF52D8738B1BA8886619B' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SlowMotion__Direction_F5BD00A14C4EF52D8738B1BA8886619B) == 0x00076C, "Member 'ABP_ALTF4_Pawn_C::SlowMotion__Direction_F5BD00A14C4EF52D8738B1BA8886619B' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SlowMotion) == 0x000770, "Member 'ABP_ALTF4_Pawn_C::SlowMotion' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, CameraOutTime______0_C11BE96347BBDF89B83C7EB156CBC6B9) == 0x000778, "Member 'ABP_ALTF4_Pawn_C::CameraOutTime______0_C11BE96347BBDF89B83C7EB156CBC6B9' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, CameraOutTime__Direction_C11BE96347BBDF89B83C7EB156CBC6B9) == 0x00077C, "Member 'ABP_ALTF4_Pawn_C::CameraOutTime__Direction_C11BE96347BBDF89B83C7EB156CBC6B9' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, CameraOutTime) == 0x000780, "Member 'ABP_ALTF4_Pawn_C::CameraOutTime' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, BaseTurnRate) == 0x000788, "Member 'ABP_ALTF4_Pawn_C::BaseTurnRate' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, BaseLookUpRate) == 0x00078C, "Member 'ABP_ALTF4_Pawn_C::BaseLookUpRate' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, LegsIK) == 0x000790, "Member 'ABP_ALTF4_Pawn_C::LegsIK' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, RagdollTimeToGround) == 0x000794, "Member 'ABP_ALTF4_Pawn_C::RagdollTimeToGround' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, RagdollLocationFromClient) == 0x000798, "Member 'ABP_ALTF4_Pawn_C::RagdollLocationFromClient' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, IsRagdoll) == 0x0007A4, "Member 'ABP_ALTF4_Pawn_C::IsRagdoll' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, RagdollPos) == 0x0007A8, "Member 'ABP_ALTF4_Pawn_C::RagdollPos' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, RotationModeVelocity) == 0x0007B4, "Member 'ABP_ALTF4_Pawn_C::RotationModeVelocity' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, RotationRateOnFround) == 0x0007B8, "Member 'ABP_ALTF4_Pawn_C::RotationRateOnFround' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, UseTurnInPlace) == 0x0007BC, "Member 'ABP_ALTF4_Pawn_C::UseTurnInPlace' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ShootOffset) == 0x0007C0, "Member 'ABP_ALTF4_Pawn_C::ShootOffset' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ShootTransform) == 0x0007D0, "Member 'ABP_ALTF4_Pawn_C::ShootTransform' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, CanMove_) == 0x000800, "Member 'ABP_ALTF4_Pawn_C::CanMove_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, PossibleThrowing_) == 0x000801, "Member 'ABP_ALTF4_Pawn_C::PossibleThrowing_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Jump_) == 0x000802, "Member 'ABP_ALTF4_Pawn_C::Jump_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, RagdollPush_) == 0x000803, "Member 'ABP_ALTF4_Pawn_C::RagdollPush_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Damage) == 0x000804, "Member 'ABP_ALTF4_Pawn_C::Damage' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Die) == 0x000808, "Member 'ABP_ALTF4_Pawn_C::Die' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Save_) == 0x000809, "Member 'ABP_ALTF4_Pawn_C::Save_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, WaterDie_) == 0x00080A, "Member 'ABP_ALTF4_Pawn_C::WaterDie_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, BloodArray) == 0x000810, "Member 'ABP_ALTF4_Pawn_C::BloodArray' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ChController) == 0x000820, "Member 'ABP_ALTF4_Pawn_C::ChController' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, TutoInfoShow) == 0x000828, "Member 'ABP_ALTF4_Pawn_C::TutoInfoShow' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, TutorialSleepPawn) == 0x000829, "Member 'ABP_ALTF4_Pawn_C::TutorialSleepPawn' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, V_DeadLocation) == 0x00082C, "Member 'ABP_ALTF4_Pawn_C::V_DeadLocation' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, V_DeadRotation) == 0x000838, "Member 'ABP_ALTF4_Pawn_C::V_DeadRotation' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, RestartChar) == 0x000848, "Member 'ABP_ALTF4_Pawn_C::RestartChar' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Save_Point_Location) == 0x000850, "Member 'ABP_ALTF4_Pawn_C::Save_Point_Location' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Time) == 0x00085C, "Member 'ABP_ALTF4_Pawn_C::Time' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, NormalDeadBody) == 0x000860, "Member 'ABP_ALTF4_Pawn_C::NormalDeadBody' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, WaterBody_Z) == 0x000868, "Member 'ABP_ALTF4_Pawn_C::WaterBody_Z' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, RespawnZ_Value) == 0x00086C, "Member 'ABP_ALTF4_Pawn_C::RespawnZ_Value' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, WaterDieLocation) == 0x000870, "Member 'ABP_ALTF4_Pawn_C::WaterDieLocation' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ALTF4_GI) == 0x000880, "Member 'ABP_ALTF4_Pawn_C::ALTF4_GI' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, TutoInfo_UI) == 0x000888, "Member 'ABP_ALTF4_Pawn_C::TutoInfo_UI' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Die_UI) == 0x000890, "Member 'ABP_ALTF4_Pawn_C::Die_UI' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SaveArea) == 0x000898, "Member 'ABP_ALTF4_Pawn_C::SaveArea' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SaveAreaB) == 0x00089C, "Member 'ABP_ALTF4_Pawn_C::SaveAreaB' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, SaveAreaOverlapArea) == 0x0008A0, "Member 'ABP_ALTF4_Pawn_C::SaveAreaOverlapArea' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, DeadBodySpawn_) == 0x0008A4, "Member 'ABP_ALTF4_Pawn_C::DeadBodySpawn_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, StartPointValue) == 0x0008A8, "Member 'ABP_ALTF4_Pawn_C::StartPointValue' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Sliding_) == 0x0008B8, "Member 'ABP_ALTF4_Pawn_C::Sliding_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Camera_3_) == 0x0008B9, "Member 'ABP_ALTF4_Pawn_C::Camera_3_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, WheelCamera_) == 0x0008BA, "Member 'ABP_ALTF4_Pawn_C::WheelCamera_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, RotationRateCurrent) == 0x0008BC, "Member 'ABP_ALTF4_Pawn_C::RotationRateCurrent' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, IsFalling_) == 0x0008C8, "Member 'ABP_ALTF4_Pawn_C::IsFalling_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Camera_PitchMax) == 0x0008CC, "Member 'ABP_ALTF4_Pawn_C::Camera_PitchMax' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Camera_YawMax) == 0x0008D0, "Member 'ABP_ALTF4_Pawn_C::Camera_YawMax' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, LevelName) == 0x0008D8, "Member 'ABP_ALTF4_Pawn_C::LevelName' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, TA01_StereamLevelValue) == 0x0008F0, "Member 'ABP_ALTF4_Pawn_C::TA01_StereamLevelValue' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, PossibleSuicide) == 0x0008F1, "Member 'ABP_ALTF4_Pawn_C::PossibleSuicide' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, VillageMap_StereamLevel_) == 0x0008F2, "Member 'ABP_ALTF4_Pawn_C::VillageMap_StereamLevel_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, TutorialLevelValue) == 0x0008F3, "Member 'ABP_ALTF4_Pawn_C::TutorialLevelValue' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, HeadRotation) == 0x0008F4, "Member 'ABP_ALTF4_Pawn_C::HeadRotation' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, TeleportLocation) == 0x000900, "Member 'ABP_ALTF4_Pawn_C::TeleportLocation' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, GroundLength) == 0x00090C, "Member 'ABP_ALTF4_Pawn_C::GroundLength' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ALTF4_GameMAP) == 0x000910, "Member 'ABP_ALTF4_Pawn_C::ALTF4_GameMAP' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Item_) == 0x000911, "Member 'ABP_ALTF4_Pawn_C::Item_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ItemUsePossible) == 0x000912, "Member 'ABP_ALTF4_Pawn_C::ItemUsePossible' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, EggShot_) == 0x000913, "Member 'ABP_ALTF4_Pawn_C::EggShot_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Fly_) == 0x000914, "Member 'ABP_ALTF4_Pawn_C::Fly_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Fly_Z_Velocity) == 0x000918, "Member 'ABP_ALTF4_Pawn_C::Fly_Z_Velocity' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Fly_Time) == 0x00091C, "Member 'ABP_ALTF4_Pawn_C::Fly_Time' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Ultimate_) == 0x000920, "Member 'ABP_ALTF4_Pawn_C::Ultimate_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, UltimateEndDelay) == 0x000924, "Member 'ABP_ALTF4_Pawn_C::UltimateEndDelay' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ALTF4_BoneArray) == 0x000928, "Member 'ABP_ALTF4_Pawn_C::ALTF4_BoneArray' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, CharFowardMoveValue) == 0x000938, "Member 'ABP_ALTF4_Pawn_C::CharFowardMoveValue' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, CharRightMoveValue) == 0x00093C, "Member 'ABP_ALTF4_Pawn_C::CharRightMoveValue' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, UpTown_Level) == 0x000940, "Member 'ABP_ALTF4_Pawn_C::UpTown_Level' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, StageA01_Level) == 0x000941, "Member 'ABP_ALTF4_Pawn_C::StageA01_Level' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, PlayerDown_) == 0x000942, "Member 'ABP_ALTF4_Pawn_C::PlayerDown_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Shock_) == 0x000943, "Member 'ABP_ALTF4_Pawn_C::Shock_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Shock_Material) == 0x000944, "Member 'ABP_ALTF4_Pawn_C::Shock_Material' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Airplane_Level) == 0x000945, "Member 'ABP_ALTF4_Pawn_C::Airplane_Level' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Running_Level) == 0x000946, "Member 'ABP_ALTF4_Pawn_C::Running_Level' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Hell_Level) == 0x000947, "Member 'ABP_ALTF4_Pawn_C::Hell_Level' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Clear_) == 0x000948, "Member 'ABP_ALTF4_Pawn_C::Clear_' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, ShowLoadingInteger) == 0x00094C, "Member 'ABP_ALTF4_Pawn_C::ShowLoadingInteger' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, NowSound) == 0x000950, "Member 'ABP_ALTF4_Pawn_C::NowSound' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, TIP_UI) == 0x000958, "Member 'ABP_ALTF4_Pawn_C::TIP_UI' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, TipShow) == 0x000960, "Member 'ABP_ALTF4_Pawn_C::TipShow' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, Nintendo_Level) == 0x000961, "Member 'ABP_ALTF4_Pawn_C::Nintendo_Level' has a wrong offset!");
static_assert(offsetof(ABP_ALTF4_Pawn_C, NinStartWidget) == 0x000968, "Member 'ABP_ALTF4_Pawn_C::NinStartWidget' has a wrong offset!");

}

