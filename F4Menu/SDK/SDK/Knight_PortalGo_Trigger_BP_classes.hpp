#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Knight_PortalGo_Trigger_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Knight_PortalGo_Trigger_BP.Knight_PortalGo_Trigger_BP_C
// 0x0068 (0x0288 - 0x0220)
class AKnight_PortalGo_Trigger_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Overlap;                                           // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                In_Box_Extent;                                     // 0x0240(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UWorld>                  Level;                                             // 0x0250(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	class USteamMulti_GameInstance_C*             ALTF4_GI;                                          // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Blend_Time;                                        // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Knight_PortalGo_Trigger_BP(int32 EntryPoint);
	void ReceiveBeginPlay();
	void NextLevelGO_(int32 Integer_MapImage);
	void BndEvt__Knight_PortalGo_Trigger_BP_Overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Knight_PortalGo_Trigger_BP_C">();
	}
	static class AKnight_PortalGo_Trigger_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AKnight_PortalGo_Trigger_BP_C>();
	}
};
static_assert(alignof(AKnight_PortalGo_Trigger_BP_C) == 0x000008, "Wrong alignment on AKnight_PortalGo_Trigger_BP_C");
static_assert(sizeof(AKnight_PortalGo_Trigger_BP_C) == 0x000288, "Wrong size on AKnight_PortalGo_Trigger_BP_C");
static_assert(offsetof(AKnight_PortalGo_Trigger_BP_C, UberGraphFrame) == 0x000220, "Member 'AKnight_PortalGo_Trigger_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AKnight_PortalGo_Trigger_BP_C, Camera) == 0x000228, "Member 'AKnight_PortalGo_Trigger_BP_C::Camera' has a wrong offset!");
static_assert(offsetof(AKnight_PortalGo_Trigger_BP_C, Overlap) == 0x000230, "Member 'AKnight_PortalGo_Trigger_BP_C::Overlap' has a wrong offset!");
static_assert(offsetof(AKnight_PortalGo_Trigger_BP_C, DefaultSceneRoot) == 0x000238, "Member 'AKnight_PortalGo_Trigger_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AKnight_PortalGo_Trigger_BP_C, In_Box_Extent) == 0x000240, "Member 'AKnight_PortalGo_Trigger_BP_C::In_Box_Extent' has a wrong offset!");
static_assert(offsetof(AKnight_PortalGo_Trigger_BP_C, Level) == 0x000250, "Member 'AKnight_PortalGo_Trigger_BP_C::Level' has a wrong offset!");
static_assert(offsetof(AKnight_PortalGo_Trigger_BP_C, ALTF4_GI) == 0x000278, "Member 'AKnight_PortalGo_Trigger_BP_C::ALTF4_GI' has a wrong offset!");
static_assert(offsetof(AKnight_PortalGo_Trigger_BP_C, Blend_Time) == 0x000280, "Member 'AKnight_PortalGo_Trigger_BP_C::Blend_Time' has a wrong offset!");

}

