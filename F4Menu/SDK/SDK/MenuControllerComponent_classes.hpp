#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MenuControllerComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MenuControllerComponent.MenuControllerComponent_C
// 0x0038 (0x00E8 - 0x00B0)
class UMenuControllerComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bIsGamePaused;                                     // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnResumeGameMode;                                  // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bInvertLookX;                                      // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInvertLookY;                                      // 0x00D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraSpeedX;                                      // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraSpeedY;                                      // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRumble;                                           // 0x00DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsGamepadBeingUsed;                                // 0x00DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UIngameMenuContainerWidgetBP_C*         IngameMenuWidget;                                  // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnResumeGameMode__DelegateSignature();
	void ExecuteUbergraph_MenuControllerComponent(int32 EntryPoint);
	void InitializeMenu();
	void Rumble();
	void OpenPauseMenu();
	void OpenPauseMenuGamepad();
	void OpenPauseMenuKeyboard();
	void LoadControls();
	void Resume();
	void Pause();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MenuControllerComponent_C">();
	}
	static class UMenuControllerComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMenuControllerComponent_C>();
	}
};
static_assert(alignof(UMenuControllerComponent_C) == 0x000008, "Wrong alignment on UMenuControllerComponent_C");
static_assert(sizeof(UMenuControllerComponent_C) == 0x0000E8, "Wrong size on UMenuControllerComponent_C");
static_assert(offsetof(UMenuControllerComponent_C, UberGraphFrame) == 0x0000B0, "Member 'UMenuControllerComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMenuControllerComponent_C, bIsGamePaused) == 0x0000B8, "Member 'UMenuControllerComponent_C::bIsGamePaused' has a wrong offset!");
static_assert(offsetof(UMenuControllerComponent_C, OnResumeGameMode) == 0x0000C0, "Member 'UMenuControllerComponent_C::OnResumeGameMode' has a wrong offset!");
static_assert(offsetof(UMenuControllerComponent_C, bInvertLookX) == 0x0000D0, "Member 'UMenuControllerComponent_C::bInvertLookX' has a wrong offset!");
static_assert(offsetof(UMenuControllerComponent_C, bInvertLookY) == 0x0000D1, "Member 'UMenuControllerComponent_C::bInvertLookY' has a wrong offset!");
static_assert(offsetof(UMenuControllerComponent_C, CameraSpeedX) == 0x0000D4, "Member 'UMenuControllerComponent_C::CameraSpeedX' has a wrong offset!");
static_assert(offsetof(UMenuControllerComponent_C, CameraSpeedY) == 0x0000D8, "Member 'UMenuControllerComponent_C::CameraSpeedY' has a wrong offset!");
static_assert(offsetof(UMenuControllerComponent_C, bRumble) == 0x0000DC, "Member 'UMenuControllerComponent_C::bRumble' has a wrong offset!");
static_assert(offsetof(UMenuControllerComponent_C, IsGamepadBeingUsed) == 0x0000DD, "Member 'UMenuControllerComponent_C::IsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(UMenuControllerComponent_C, IngameMenuWidget) == 0x0000E0, "Member 'UMenuControllerComponent_C::IngameMenuWidget' has a wrong offset!");

}

