#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PhysicsGetUpBlend

#include "Basic.hpp"

#include "PhysicsGetUpBlend_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function PhysicsGetUpBlend.PhysicsGetUpBlendAnimInstance.SetAction
// 0x0001 (0x0001 - 0x0000)
struct PhysicsGetUpBlendAnimInstance_SetAction final
{
public:
	EActionType                                   NewAction;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PhysicsGetUpBlendAnimInstance_SetAction) == 0x000001, "Wrong alignment on PhysicsGetUpBlendAnimInstance_SetAction");
static_assert(sizeof(PhysicsGetUpBlendAnimInstance_SetAction) == 0x000001, "Wrong size on PhysicsGetUpBlendAnimInstance_SetAction");
static_assert(offsetof(PhysicsGetUpBlendAnimInstance_SetAction, NewAction) == 0x000000, "Member 'PhysicsGetUpBlendAnimInstance_SetAction::NewAction' has a wrong offset!");

// Function PhysicsGetUpBlend.PhysicsGetUpBlendAnimInstance.IsGetUpAnimation
// 0x0001 (0x0001 - 0x0000)
struct PhysicsGetUpBlendAnimInstance_IsGetUpAnimation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PhysicsGetUpBlendAnimInstance_IsGetUpAnimation) == 0x000001, "Wrong alignment on PhysicsGetUpBlendAnimInstance_IsGetUpAnimation");
static_assert(sizeof(PhysicsGetUpBlendAnimInstance_IsGetUpAnimation) == 0x000001, "Wrong size on PhysicsGetUpBlendAnimInstance_IsGetUpAnimation");
static_assert(offsetof(PhysicsGetUpBlendAnimInstance_IsGetUpAnimation, ReturnValue) == 0x000000, "Member 'PhysicsGetUpBlendAnimInstance_IsGetUpAnimation::ReturnValue' has a wrong offset!");

// Function PhysicsGetUpBlend.PhysicsGetUpBlendAnimInstance.IsRagdoll
// 0x0001 (0x0001 - 0x0000)
struct PhysicsGetUpBlendAnimInstance_IsRagdoll final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PhysicsGetUpBlendAnimInstance_IsRagdoll) == 0x000001, "Wrong alignment on PhysicsGetUpBlendAnimInstance_IsRagdoll");
static_assert(sizeof(PhysicsGetUpBlendAnimInstance_IsRagdoll) == 0x000001, "Wrong size on PhysicsGetUpBlendAnimInstance_IsRagdoll");
static_assert(offsetof(PhysicsGetUpBlendAnimInstance_IsRagdoll, ReturnValue) == 0x000000, "Member 'PhysicsGetUpBlendAnimInstance_IsRagdoll::ReturnValue' has a wrong offset!");

// Function PhysicsGetUpBlend.PhysicsGetUpBlendCharacter.Fall
// 0x0004 (0x0004 - 0x0000)
struct PhysicsGetUpBlendCharacter_Fall final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PhysicsGetUpBlendCharacter_Fall) == 0x000004, "Wrong alignment on PhysicsGetUpBlendCharacter_Fall");
static_assert(sizeof(PhysicsGetUpBlendCharacter_Fall) == 0x000004, "Wrong size on PhysicsGetUpBlendCharacter_Fall");
static_assert(offsetof(PhysicsGetUpBlendCharacter_Fall, Delay) == 0x000000, "Member 'PhysicsGetUpBlendCharacter_Fall::Delay' has a wrong offset!");

// Function PhysicsGetUpBlend.PhysicsGetUpBlendCharacter.Fall_NetMulticast
// 0x0004 (0x0004 - 0x0000)
struct PhysicsGetUpBlendCharacter_Fall_NetMulticast final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PhysicsGetUpBlendCharacter_Fall_NetMulticast) == 0x000004, "Wrong alignment on PhysicsGetUpBlendCharacter_Fall_NetMulticast");
static_assert(sizeof(PhysicsGetUpBlendCharacter_Fall_NetMulticast) == 0x000004, "Wrong size on PhysicsGetUpBlendCharacter_Fall_NetMulticast");
static_assert(offsetof(PhysicsGetUpBlendCharacter_Fall_NetMulticast, Delay) == 0x000000, "Member 'PhysicsGetUpBlendCharacter_Fall_NetMulticast::Delay' has a wrong offset!");

// Function PhysicsGetUpBlend.PhysicsGetUpBlendCharacter.Fall_Server
// 0x0004 (0x0004 - 0x0000)
struct PhysicsGetUpBlendCharacter_Fall_Server final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PhysicsGetUpBlendCharacter_Fall_Server) == 0x000004, "Wrong alignment on PhysicsGetUpBlendCharacter_Fall_Server");
static_assert(sizeof(PhysicsGetUpBlendCharacter_Fall_Server) == 0x000004, "Wrong size on PhysicsGetUpBlendCharacter_Fall_Server");
static_assert(offsetof(PhysicsGetUpBlendCharacter_Fall_Server, Delay) == 0x000000, "Member 'PhysicsGetUpBlendCharacter_Fall_Server::Delay' has a wrong offset!");

// Function PhysicsGetUpBlend.PhysicsGetUpBlendCharacter.FallImpulse
// 0x001C (0x001C - 0x0000)
struct PhysicsGetUpBlendCharacter_FallImpulse final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Strength;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERadialImpulseFalloff                         Falloff;                                           // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVelChange;                                        // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PhysicsGetUpBlendCharacter_FallImpulse) == 0x000004, "Wrong alignment on PhysicsGetUpBlendCharacter_FallImpulse");
static_assert(sizeof(PhysicsGetUpBlendCharacter_FallImpulse) == 0x00001C, "Wrong size on PhysicsGetUpBlendCharacter_FallImpulse");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse, Origin) == 0x000000, "Member 'PhysicsGetUpBlendCharacter_FallImpulse::Origin' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse, Radius) == 0x00000C, "Member 'PhysicsGetUpBlendCharacter_FallImpulse::Radius' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse, Strength) == 0x000010, "Member 'PhysicsGetUpBlendCharacter_FallImpulse::Strength' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse, Delay) == 0x000014, "Member 'PhysicsGetUpBlendCharacter_FallImpulse::Delay' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse, Falloff) == 0x000018, "Member 'PhysicsGetUpBlendCharacter_FallImpulse::Falloff' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse, bVelChange) == 0x000019, "Member 'PhysicsGetUpBlendCharacter_FallImpulse::bVelChange' has a wrong offset!");

// Function PhysicsGetUpBlend.PhysicsGetUpBlendCharacter.FallImpulse_NetMulticast
// 0x001C (0x001C - 0x0000)
struct PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Strength;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERadialImpulseFalloff                         Falloff;                                           // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVelChange;                                        // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast) == 0x000004, "Wrong alignment on PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast");
static_assert(sizeof(PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast) == 0x00001C, "Wrong size on PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast, Origin) == 0x000000, "Member 'PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast::Origin' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast, Radius) == 0x00000C, "Member 'PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast::Radius' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast, Strength) == 0x000010, "Member 'PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast::Strength' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast, Delay) == 0x000014, "Member 'PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast::Delay' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast, Falloff) == 0x000018, "Member 'PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast::Falloff' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast, bVelChange) == 0x000019, "Member 'PhysicsGetUpBlendCharacter_FallImpulse_NetMulticast::bVelChange' has a wrong offset!");

// Function PhysicsGetUpBlend.PhysicsGetUpBlendCharacter.FallImpulse_Server
// 0x001C (0x001C - 0x0000)
struct PhysicsGetUpBlendCharacter_FallImpulse_Server final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Strength;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERadialImpulseFalloff                         Falloff;                                           // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bVelChange;                                        // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PhysicsGetUpBlendCharacter_FallImpulse_Server) == 0x000004, "Wrong alignment on PhysicsGetUpBlendCharacter_FallImpulse_Server");
static_assert(sizeof(PhysicsGetUpBlendCharacter_FallImpulse_Server) == 0x00001C, "Wrong size on PhysicsGetUpBlendCharacter_FallImpulse_Server");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse_Server, Origin) == 0x000000, "Member 'PhysicsGetUpBlendCharacter_FallImpulse_Server::Origin' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse_Server, Radius) == 0x00000C, "Member 'PhysicsGetUpBlendCharacter_FallImpulse_Server::Radius' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse_Server, Strength) == 0x000010, "Member 'PhysicsGetUpBlendCharacter_FallImpulse_Server::Strength' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse_Server, Delay) == 0x000014, "Member 'PhysicsGetUpBlendCharacter_FallImpulse_Server::Delay' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse_Server, Falloff) == 0x000018, "Member 'PhysicsGetUpBlendCharacter_FallImpulse_Server::Falloff' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_FallImpulse_Server, bVelChange) == 0x000019, "Member 'PhysicsGetUpBlendCharacter_FallImpulse_Server::bVelChange' has a wrong offset!");

// Function PhysicsGetUpBlend.PhysicsGetUpBlendCharacter.K2_SetGetUpOrientation
// 0x0001 (0x0001 - 0x0000)
struct PhysicsGetUpBlendCharacter_K2_SetGetUpOrientation final
{
public:
	EGetUpOrientation                             GetUpOrientation;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PhysicsGetUpBlendCharacter_K2_SetGetUpOrientation) == 0x000001, "Wrong alignment on PhysicsGetUpBlendCharacter_K2_SetGetUpOrientation");
static_assert(sizeof(PhysicsGetUpBlendCharacter_K2_SetGetUpOrientation) == 0x000001, "Wrong size on PhysicsGetUpBlendCharacter_K2_SetGetUpOrientation");
static_assert(offsetof(PhysicsGetUpBlendCharacter_K2_SetGetUpOrientation, GetUpOrientation) == 0x000000, "Member 'PhysicsGetUpBlendCharacter_K2_SetGetUpOrientation::GetUpOrientation' has a wrong offset!");

// Function PhysicsGetUpBlend.PhysicsGetUpBlendCharacter.SetAction
// 0x0002 (0x0002 - 0x0000)
struct PhysicsGetUpBlendCharacter_SetAction final
{
public:
	EActionType                                   NewAction;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PhysicsGetUpBlendCharacter_SetAction) == 0x000001, "Wrong alignment on PhysicsGetUpBlendCharacter_SetAction");
static_assert(sizeof(PhysicsGetUpBlendCharacter_SetAction) == 0x000002, "Wrong size on PhysicsGetUpBlendCharacter_SetAction");
static_assert(offsetof(PhysicsGetUpBlendCharacter_SetAction, NewAction) == 0x000000, "Member 'PhysicsGetUpBlendCharacter_SetAction::NewAction' has a wrong offset!");
static_assert(offsetof(PhysicsGetUpBlendCharacter_SetAction, ReturnValue) == 0x000001, "Member 'PhysicsGetUpBlendCharacter_SetAction::ReturnValue' has a wrong offset!");

// Function PhysicsGetUpBlend.PhysicsGetUpBlendCharacter.SetGetUpOrientation_NetMulticast
// 0x0001 (0x0001 - 0x0000)
struct PhysicsGetUpBlendCharacter_SetGetUpOrientation_NetMulticast final
{
public:
	EGetUpOrientation                             GetUpOrientation;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PhysicsGetUpBlendCharacter_SetGetUpOrientation_NetMulticast) == 0x000001, "Wrong alignment on PhysicsGetUpBlendCharacter_SetGetUpOrientation_NetMulticast");
static_assert(sizeof(PhysicsGetUpBlendCharacter_SetGetUpOrientation_NetMulticast) == 0x000001, "Wrong size on PhysicsGetUpBlendCharacter_SetGetUpOrientation_NetMulticast");
static_assert(offsetof(PhysicsGetUpBlendCharacter_SetGetUpOrientation_NetMulticast, GetUpOrientation) == 0x000000, "Member 'PhysicsGetUpBlendCharacter_SetGetUpOrientation_NetMulticast::GetUpOrientation' has a wrong offset!");

}

