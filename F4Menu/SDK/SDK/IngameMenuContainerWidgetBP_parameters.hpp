#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IngameMenuContainerWidgetBP

#include "Basic.hpp"


namespace SDK::Params
{

// Function IngameMenuContainerWidgetBP.IngameMenuContainerWidgetBP_C.ExecuteUbergraph_IngameMenuContainerWidgetBP
// 0x0030 (0x0030 - 0x0000)
struct IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateFromMenu_1;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsGamepadBeingUsed;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateToMenu;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateFromMenu;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed_1; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP) == 0x000008, "Wrong alignment on IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP");
static_assert(sizeof(IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP) == 0x000030, "Wrong size on IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP, EntryPoint) == 0x000000, "Member 'IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP, CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed) == 0x000004, "Member 'IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP::CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP, K2Node_Event_NavigateFromMenu_1) == 0x000008, "Member 'IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP::K2Node_Event_NavigateFromMenu_1' has a wrong offset!");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP, K2Node_Event_bIsGamepadBeingUsed) == 0x000010, "Member 'IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP::K2Node_Event_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP, K2Node_Event_NavigateToMenu) == 0x000018, "Member 'IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP::K2Node_Event_NavigateToMenu' has a wrong offset!");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP, K2Node_Event_NavigateFromMenu) == 0x000020, "Member 'IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP::K2Node_Event_NavigateFromMenu' has a wrong offset!");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP, CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed_1) == 0x000028, "Member 'IngameMenuContainerWidgetBP_C_ExecuteUbergraph_IngameMenuContainerWidgetBP::CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed_1' has a wrong offset!");

// Function IngameMenuContainerWidgetBP.IngameMenuContainerWidgetBP_C.ResumeGame
// 0x0028 (0x0028 - 0x0000)
struct IngameMenuContainerWidgetBP_C_ResumeGame final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMenuControllerComponent_C*             CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPauseGameBPI_C>       K2Node_DynamicCast_AsPause_Game_BPI;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IngameMenuContainerWidgetBP_C_ResumeGame) == 0x000008, "Wrong alignment on IngameMenuContainerWidgetBP_C_ResumeGame");
static_assert(sizeof(IngameMenuContainerWidgetBP_C_ResumeGame) == 0x000028, "Wrong size on IngameMenuContainerWidgetBP_C_ResumeGame");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_ResumeGame, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'IngameMenuContainerWidgetBP_C_ResumeGame::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_ResumeGame, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'IngameMenuContainerWidgetBP_C_ResumeGame::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_ResumeGame, K2Node_DynamicCast_AsPause_Game_BPI) == 0x000010, "Member 'IngameMenuContainerWidgetBP_C_ResumeGame::K2Node_DynamicCast_AsPause_Game_BPI' has a wrong offset!");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_ResumeGame, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'IngameMenuContainerWidgetBP_C_ResumeGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function IngameMenuContainerWidgetBP.IngameMenuContainerWidgetBP_C.OnNavigationExit
// 0x0010 (0x0010 - 0x0000)
struct IngameMenuContainerWidgetBP_C_OnNavigationExit final
{
public:
	class UInteractableMenuWidgetBP_C*            NavigateToMenu;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            NavigateFromMenu;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IngameMenuContainerWidgetBP_C_OnNavigationExit) == 0x000008, "Wrong alignment on IngameMenuContainerWidgetBP_C_OnNavigationExit");
static_assert(sizeof(IngameMenuContainerWidgetBP_C_OnNavigationExit) == 0x000010, "Wrong size on IngameMenuContainerWidgetBP_C_OnNavigationExit");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_OnNavigationExit, NavigateToMenu) == 0x000000, "Member 'IngameMenuContainerWidgetBP_C_OnNavigationExit::NavigateToMenu' has a wrong offset!");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_OnNavigationExit, NavigateFromMenu) == 0x000008, "Member 'IngameMenuContainerWidgetBP_C_OnNavigationExit::NavigateFromMenu' has a wrong offset!");

// Function IngameMenuContainerWidgetBP.IngameMenuContainerWidgetBP_C.OnNavigationEnter
// 0x0010 (0x0010 - 0x0000)
struct IngameMenuContainerWidgetBP_C_OnNavigationEnter final
{
public:
	class UInteractableMenuWidgetBP_C*            NavigateFromMenu;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsGamepadBeingUsed_0;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IngameMenuContainerWidgetBP_C_OnNavigationEnter) == 0x000008, "Wrong alignment on IngameMenuContainerWidgetBP_C_OnNavigationEnter");
static_assert(sizeof(IngameMenuContainerWidgetBP_C_OnNavigationEnter) == 0x000010, "Wrong size on IngameMenuContainerWidgetBP_C_OnNavigationEnter");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_OnNavigationEnter, NavigateFromMenu) == 0x000000, "Member 'IngameMenuContainerWidgetBP_C_OnNavigationEnter::NavigateFromMenu' has a wrong offset!");
static_assert(offsetof(IngameMenuContainerWidgetBP_C_OnNavigationEnter, bIsGamepadBeingUsed_0) == 0x000008, "Member 'IngameMenuContainerWidgetBP_C_OnNavigationEnter::bIsGamepadBeingUsed_0' has a wrong offset!");

}

