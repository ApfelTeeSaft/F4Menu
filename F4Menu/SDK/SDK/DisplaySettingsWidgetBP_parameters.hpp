#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DisplaySettingsWidgetBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.ExecuteUbergraph_DisplaySettingsWidgetBP
// 0x0038 (0x0038 - 0x0000)
struct DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ActiveIndex_3;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ActiveIndex_2;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ActiveIndex_1;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateFromMenu_1;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsGamepadBeingUsed;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateToMenu;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            K2Node_Event_NavigateFromMenu;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ActiveIndex;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP");
static_assert(sizeof(DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP) == 0x000038, "Wrong size on DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP, EntryPoint) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP, K2Node_ComponentBoundEvent_ActiveIndex_3) == 0x000004, "Member 'DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP::K2Node_ComponentBoundEvent_ActiveIndex_3' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP, K2Node_ComponentBoundEvent_ActiveIndex_2) == 0x000008, "Member 'DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP::K2Node_ComponentBoundEvent_ActiveIndex_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP, K2Node_ComponentBoundEvent_ActiveIndex_1) == 0x00000C, "Member 'DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP::K2Node_ComponentBoundEvent_ActiveIndex_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP, K2Node_Event_NavigateFromMenu_1) == 0x000010, "Member 'DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP::K2Node_Event_NavigateFromMenu_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP, K2Node_Event_bIsGamepadBeingUsed) == 0x000018, "Member 'DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP::K2Node_Event_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP, K2Node_Event_NavigateToMenu) == 0x000020, "Member 'DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP::K2Node_Event_NavigateToMenu' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP, K2Node_Event_NavigateFromMenu) == 0x000028, "Member 'DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP::K2Node_Event_NavigateFromMenu' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP, K2Node_ComponentBoundEvent_ActiveIndex) == 0x000030, "Member 'DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP::K2Node_ComponentBoundEvent_ActiveIndex' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP, K2Node_Event_IsDesignTime) == 0x000034, "Member 'DisplaySettingsWidgetBP_C_ExecuteUbergraph_DisplaySettingsWidgetBP::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.BndEvt__WindowModeOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct DisplaySettingsWidgetBP_C_BndEvt__WindowModeOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature final
{
public:
	int32                                         ActiveIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_BndEvt__WindowModeOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong alignment on DisplaySettingsWidgetBP_C_BndEvt__WindowModeOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature");
static_assert(sizeof(DisplaySettingsWidgetBP_C_BndEvt__WindowModeOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong size on DisplaySettingsWidgetBP_C_BndEvt__WindowModeOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature");
static_assert(offsetof(DisplaySettingsWidgetBP_C_BndEvt__WindowModeOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature, ActiveIndex) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_BndEvt__WindowModeOptionsPicker_K2Node_ComponentBoundEvent_2_OnOptionChanged__DelegateSignature::ActiveIndex' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.BndEvt__DisplayResolutionOptionsPicker_K2Node_ComponentBoundEvent_9_OnOptionChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct DisplaySettingsWidgetBP_C_BndEvt__DisplayResolutionOptionsPicker_K2Node_ComponentBoundEvent_9_OnOptionChanged__DelegateSignature final
{
public:
	int32                                         ActiveIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_BndEvt__DisplayResolutionOptionsPicker_K2Node_ComponentBoundEvent_9_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong alignment on DisplaySettingsWidgetBP_C_BndEvt__DisplayResolutionOptionsPicker_K2Node_ComponentBoundEvent_9_OnOptionChanged__DelegateSignature");
static_assert(sizeof(DisplaySettingsWidgetBP_C_BndEvt__DisplayResolutionOptionsPicker_K2Node_ComponentBoundEvent_9_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong size on DisplaySettingsWidgetBP_C_BndEvt__DisplayResolutionOptionsPicker_K2Node_ComponentBoundEvent_9_OnOptionChanged__DelegateSignature");
static_assert(offsetof(DisplaySettingsWidgetBP_C_BndEvt__DisplayResolutionOptionsPicker_K2Node_ComponentBoundEvent_9_OnOptionChanged__DelegateSignature, ActiveIndex) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_BndEvt__DisplayResolutionOptionsPicker_K2Node_ComponentBoundEvent_9_OnOptionChanged__DelegateSignature::ActiveIndex' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.BndEvt__LockFPSOptionsPicker_K2Node_ComponentBoundEvent_10_OnOptionChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct DisplaySettingsWidgetBP_C_BndEvt__LockFPSOptionsPicker_K2Node_ComponentBoundEvent_10_OnOptionChanged__DelegateSignature final
{
public:
	int32                                         ActiveIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_BndEvt__LockFPSOptionsPicker_K2Node_ComponentBoundEvent_10_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong alignment on DisplaySettingsWidgetBP_C_BndEvt__LockFPSOptionsPicker_K2Node_ComponentBoundEvent_10_OnOptionChanged__DelegateSignature");
static_assert(sizeof(DisplaySettingsWidgetBP_C_BndEvt__LockFPSOptionsPicker_K2Node_ComponentBoundEvent_10_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong size on DisplaySettingsWidgetBP_C_BndEvt__LockFPSOptionsPicker_K2Node_ComponentBoundEvent_10_OnOptionChanged__DelegateSignature");
static_assert(offsetof(DisplaySettingsWidgetBP_C_BndEvt__LockFPSOptionsPicker_K2Node_ComponentBoundEvent_10_OnOptionChanged__DelegateSignature, ActiveIndex) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_BndEvt__LockFPSOptionsPicker_K2Node_ComponentBoundEvent_10_OnOptionChanged__DelegateSignature::ActiveIndex' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.BndEvt__VSyncOptionsPicker_K2Node_ComponentBoundEvent_12_OnOptionChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct DisplaySettingsWidgetBP_C_BndEvt__VSyncOptionsPicker_K2Node_ComponentBoundEvent_12_OnOptionChanged__DelegateSignature final
{
public:
	int32                                         ActiveIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_BndEvt__VSyncOptionsPicker_K2Node_ComponentBoundEvent_12_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong alignment on DisplaySettingsWidgetBP_C_BndEvt__VSyncOptionsPicker_K2Node_ComponentBoundEvent_12_OnOptionChanged__DelegateSignature");
static_assert(sizeof(DisplaySettingsWidgetBP_C_BndEvt__VSyncOptionsPicker_K2Node_ComponentBoundEvent_12_OnOptionChanged__DelegateSignature) == 0x000004, "Wrong size on DisplaySettingsWidgetBP_C_BndEvt__VSyncOptionsPicker_K2Node_ComponentBoundEvent_12_OnOptionChanged__DelegateSignature");
static_assert(offsetof(DisplaySettingsWidgetBP_C_BndEvt__VSyncOptionsPicker_K2Node_ComponentBoundEvent_12_OnOptionChanged__DelegateSignature, ActiveIndex) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_BndEvt__VSyncOptionsPicker_K2Node_ComponentBoundEvent_12_OnOptionChanged__DelegateSignature::ActiveIndex' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.ApplyDisplaySettings
// 0x0068 (0x0068 - 0x0000)
struct DisplaySettingsWidgetBP_C_ApplyDisplaySettings final
{
public:
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetDisplaySettings_ReturnValue;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x0038(0x0018)()
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SplitResolution_X;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SplitResolution_Y;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_ApplyDisplaySettings");
static_assert(sizeof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings) == 0x000068, "Wrong size on DisplaySettingsWidgetBP_C_ApplyDisplaySettings");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings, CallFunc_Conv_IntToByte_ReturnValue) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_ApplyDisplaySettings::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings, CallFunc_GetValidValue_ReturnValue) == 0x000001, "Member 'DisplaySettingsWidgetBP_C_ApplyDisplaySettings::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings, K2Node_SwitchInteger_CmpSuccess) == 0x000002, "Member 'DisplaySettingsWidgetBP_C_ApplyDisplaySettings::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings, CallFunc_SetDisplaySettings_ReturnValue) == 0x000003, "Member 'DisplaySettingsWidgetBP_C_ApplyDisplaySettings::CallFunc_SetDisplaySettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings, CallFunc_Array_Get_Item) == 0x000008, "Member 'DisplaySettingsWidgetBP_C_ApplyDisplaySettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'DisplaySettingsWidgetBP_C_ApplyDisplaySettings::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings, CallFunc_Conv_StringToFloat_ReturnValue) == 0x000030, "Member 'DisplaySettingsWidgetBP_C_ApplyDisplaySettings::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'DisplaySettingsWidgetBP_C_ApplyDisplaySettings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings, CallFunc_GetGameUserSettings_ReturnValue) == 0x000050, "Member 'DisplaySettingsWidgetBP_C_ApplyDisplaySettings::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings, CallFunc_SplitResolution_X) == 0x000058, "Member 'DisplaySettingsWidgetBP_C_ApplyDisplaySettings::CallFunc_SplitResolution_X' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings, CallFunc_SplitResolution_Y) == 0x00005C, "Member 'DisplaySettingsWidgetBP_C_ApplyDisplaySettings::CallFunc_SplitResolution_Y' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ApplyDisplaySettings, K2Node_MakeStruct_IntPoint) == 0x000060, "Member 'DisplaySettingsWidgetBP_C_ApplyDisplaySettings::K2Node_MakeStruct_IntPoint' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.SplitResolution
// 0x0060 (0x0060 - 0x0000)
struct DisplaySettingsWidgetBP_C_SplitResolution final
{
public:
	class FText                                   Resolution;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         X;                                                 // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_SplitResolution) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_SplitResolution");
static_assert(sizeof(DisplaySettingsWidgetBP_C_SplitResolution) == 0x000060, "Wrong size on DisplaySettingsWidgetBP_C_SplitResolution");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SplitResolution, Resolution) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_SplitResolution::Resolution' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SplitResolution, X) == 0x000018, "Member 'DisplaySettingsWidgetBP_C_SplitResolution::X' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SplitResolution, Y) == 0x00001C, "Member 'DisplaySettingsWidgetBP_C_SplitResolution::Y' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SplitResolution, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'DisplaySettingsWidgetBP_C_SplitResolution::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SplitResolution, CallFunc_Split_LeftS) == 0x000030, "Member 'DisplaySettingsWidgetBP_C_SplitResolution::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SplitResolution, CallFunc_Split_RightS) == 0x000040, "Member 'DisplaySettingsWidgetBP_C_SplitResolution::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SplitResolution, CallFunc_Split_ReturnValue) == 0x000050, "Member 'DisplaySettingsWidgetBP_C_SplitResolution::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SplitResolution, CallFunc_Conv_StringToInt_ReturnValue) == 0x000054, "Member 'DisplaySettingsWidgetBP_C_SplitResolution::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SplitResolution, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000058, "Member 'DisplaySettingsWidgetBP_C_SplitResolution::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.LoadDisplaySettings
// 0x0004 (0x0004 - 0x0000)
struct DisplaySettingsWidgetBP_C_LoadDisplaySettings final
{
public:
	int32                                         CallFunc_GetFrameRateIndex_OutIndex;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_LoadDisplaySettings) == 0x000004, "Wrong alignment on DisplaySettingsWidgetBP_C_LoadDisplaySettings");
static_assert(sizeof(DisplaySettingsWidgetBP_C_LoadDisplaySettings) == 0x000004, "Wrong size on DisplaySettingsWidgetBP_C_LoadDisplaySettings");
static_assert(offsetof(DisplaySettingsWidgetBP_C_LoadDisplaySettings, CallFunc_GetFrameRateIndex_OutIndex) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_LoadDisplaySettings::CallFunc_GetFrameRateIndex_OutIndex' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.SetupDisplayResolutions
// 0x0068 (0x0068 - 0x0000)
struct DisplaySettingsWidgetBP_C_SetupDisplayResolutions final
{
public:
	int32                                         ___int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetSupportedScreenResolutions_Resolutions; // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSupportedScreenResolutions_CurrentScreenResolutionIndex; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSupportedScreenResolutions_ReturnValue; // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_SetupDisplayResolutions");
static_assert(sizeof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions) == 0x000068, "Wrong size on DisplaySettingsWidgetBP_C_SetupDisplayResolutions");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions, ___int_Array_Index_Variable) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_SetupDisplayResolutions::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions, ___int_Loop_Counter_Variable) == 0x000004, "Member 'DisplaySettingsWidgetBP_C_SetupDisplayResolutions::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'DisplaySettingsWidgetBP_C_SetupDisplayResolutions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions, CallFunc_GetSupportedScreenResolutions_Resolutions) == 0x000010, "Member 'DisplaySettingsWidgetBP_C_SetupDisplayResolutions::CallFunc_GetSupportedScreenResolutions_Resolutions' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions, CallFunc_GetSupportedScreenResolutions_CurrentScreenResolutionIndex) == 0x000020, "Member 'DisplaySettingsWidgetBP_C_SetupDisplayResolutions::CallFunc_GetSupportedScreenResolutions_CurrentScreenResolutionIndex' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions, CallFunc_GetSupportedScreenResolutions_ReturnValue) == 0x000024, "Member 'DisplaySettingsWidgetBP_C_SetupDisplayResolutions::CallFunc_GetSupportedScreenResolutions_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'DisplaySettingsWidgetBP_C_SetupDisplayResolutions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions, CallFunc_Array_Get_Item) == 0x000030, "Member 'DisplaySettingsWidgetBP_C_SetupDisplayResolutions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'DisplaySettingsWidgetBP_C_SetupDisplayResolutions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'DisplaySettingsWidgetBP_C_SetupDisplayResolutions::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetupDisplayResolutions, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'DisplaySettingsWidgetBP_C_SetupDisplayResolutions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.MarkSettingsAsDirty
// 0x0001 (0x0001 - 0x0000)
struct DisplaySettingsWidgetBP_C_MarkSettingsAsDirty final
{
public:
	bool                                          CallFunc_DirtyCheck_bIsReallyDirty;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_MarkSettingsAsDirty) == 0x000001, "Wrong alignment on DisplaySettingsWidgetBP_C_MarkSettingsAsDirty");
static_assert(sizeof(DisplaySettingsWidgetBP_C_MarkSettingsAsDirty) == 0x000001, "Wrong size on DisplaySettingsWidgetBP_C_MarkSettingsAsDirty");
static_assert(offsetof(DisplaySettingsWidgetBP_C_MarkSettingsAsDirty, CallFunc_DirtyCheck_bIsReallyDirty) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_MarkSettingsAsDirty::CallFunc_DirtyCheck_bIsReallyDirty' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.ResetDisplaySettings
// 0x0078 (0x0078 - 0x0000)
struct DisplaySettingsWidgetBP_C_ResetDisplaySettings final
{
public:
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDisplaySettings_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x0050(0x0018)()
	int32                                         CallFunc_SplitResolution_X;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SplitResolution_Y;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_ResetDisplaySettings) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_ResetDisplaySettings");
static_assert(sizeof(DisplaySettingsWidgetBP_C_ResetDisplaySettings) == 0x000078, "Wrong size on DisplaySettingsWidgetBP_C_ResetDisplaySettings");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_Conv_IntToBool_ReturnValue) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_Array_Get_Item) == 0x000008, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_Conv_StringToFloat_ReturnValue) == 0x000030, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_Conv_IntToByte_ReturnValue) == 0x000034, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_GetValidValue_ReturnValue) == 0x000035, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_GetGameUserSettings_ReturnValue) == 0x000038, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_SetDisplaySettings_ReturnValue) == 0x000040, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_SetDisplaySettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_SplitResolution_X) == 0x000068, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_SplitResolution_X' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, CallFunc_SplitResolution_Y) == 0x00006C, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::CallFunc_SplitResolution_Y' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ResetDisplaySettings, K2Node_MakeStruct_IntPoint) == 0x000070, "Member 'DisplaySettingsWidgetBP_C_ResetDisplaySettings::K2Node_MakeStruct_IntPoint' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.SetGammaCorrection
// 0x0028 (0x0028 - 0x0000)
struct DisplaySettingsWidgetBP_C_SetGammaCorrection final
{
public:
	float                                         InGammaValue;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_SetGammaCorrection) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_SetGammaCorrection");
static_assert(sizeof(DisplaySettingsWidgetBP_C_SetGammaCorrection) == 0x000028, "Wrong size on DisplaySettingsWidgetBP_C_SetGammaCorrection");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGammaCorrection, InGammaValue) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_SetGammaCorrection::InGammaValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGammaCorrection, CallFunc_Conv_FloatToString_ReturnValue) == 0x000008, "Member 'DisplaySettingsWidgetBP_C_SetGammaCorrection::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGammaCorrection, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'DisplaySettingsWidgetBP_C_SetGammaCorrection::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.ShowDecisionDialog
// 0x0010 (0x0010 - 0x0000)
struct DisplaySettingsWidgetBP_C_ShowDecisionDialog final
{
public:
	bool                                          CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_ShowDecisionDialog) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_ShowDecisionDialog");
static_assert(sizeof(DisplaySettingsWidgetBP_C_ShowDecisionDialog) == 0x000010, "Wrong size on DisplaySettingsWidgetBP_C_ShowDecisionDialog");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ShowDecisionDialog, CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_ShowDecisionDialog::CallFunc_GetIsGamepadBeingUsed_bIsGamepadBeingUsed' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_ShowDecisionDialog, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'DisplaySettingsWidgetBP_C_ShowDecisionDialog::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.UpdateDescription
// 0x0008 (0x0008 - 0x0000)
struct DisplaySettingsWidgetBP_C_UpdateDescription final
{
public:
	class UInteractableUserWidget_C*              InWidget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_UpdateDescription) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_UpdateDescription");
static_assert(sizeof(DisplaySettingsWidgetBP_C_UpdateDescription) == 0x000008, "Wrong size on DisplaySettingsWidgetBP_C_UpdateDescription");
static_assert(offsetof(DisplaySettingsWidgetBP_C_UpdateDescription, InWidget) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_UpdateDescription::InWidget' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.SetGlobalSettings
// 0x09C0 (0x09C0 - 0x0000)
struct DisplaySettingsWidgetBP_C_SetGlobalSettings final
{
public:
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MainFont;                  // 0x0000(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_SmallTitleFont;            // 0x0058(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MediumTitleFont;           // 0x00B0(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_LargeTitleFont;            // 0x0108(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_ValueFont;                 // 0x0160(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetGlobalFonts_OnlyUppercase;             // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor;                // 0x01BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor;           // 0x01CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor;      // 0x01DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor;      // 0x01EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor;    // 0x01FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor;              // 0x020C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor;              // 0x021C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor;      // 0x022C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor;    // 0x023C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_1;              // 0x024C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_1;         // 0x025C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_1;    // 0x026C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_1;    // 0x027C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_1;  // 0x028C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_1;            // 0x029C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_1;            // 0x02AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_1;    // 0x02BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_1;  // 0x02CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_2;              // 0x02DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_2;         // 0x02EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_2;    // 0x02FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_2;    // 0x030C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_2;  // 0x031C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_2;            // 0x032C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_2;            // 0x033C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_2;    // 0x034C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_2;  // 0x035C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MainFont_1;                // 0x0370(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_SmallTitleFont_1;          // 0x03C8(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MediumTitleFont_1;         // 0x0420(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_LargeTitleFont_1;          // 0x0478(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_ValueFont_1;               // 0x04D0(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetGlobalFonts_OnlyUppercase_1;           // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_529[0x3];                                      // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_3;              // 0x052C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_3;         // 0x053C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_3;    // 0x054C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_3;    // 0x055C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_3;  // 0x056C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_3;            // 0x057C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_3;            // 0x058C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_3;    // 0x059C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_3;  // 0x05AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MainFont_2;                // 0x05C0(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_SmallTitleFont_2;          // 0x0618(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_MediumTitleFont_2;         // 0x0670(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_LargeTitleFont_2;          // 0x06C8(0x0058)(HasGetValueTypeHash)
	struct FSlateFontInfo                         CallFunc_GetGlobalFonts_ValueFont_2;               // 0x0720(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetGlobalFonts_OnlyUppercase_2;           // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779[0x3];                                      // 0x0779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_4;              // 0x077C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_4;         // 0x078C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_4;    // 0x079C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_4;    // 0x07AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_4;  // 0x07BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_4;            // 0x07CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_4;            // 0x07DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_4;    // 0x07EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_4;  // 0x07FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_5;              // 0x080C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_5;         // 0x081C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_5;    // 0x082C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_5;    // 0x083C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_5;  // 0x084C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_5;            // 0x085C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_5;            // 0x086C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_5;    // 0x087C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_5;  // 0x088C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_6;              // 0x089C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_6;         // 0x08AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_6;    // 0x08BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_6;    // 0x08CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_6;  // 0x08DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_6;            // 0x08EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_6;            // 0x08FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_6;    // 0x090C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_6;  // 0x091C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MainColor_7;              // 0x092C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightColor_7;         // 0x093C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_HighlightExtraColor_7;    // 0x094C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_MenuBackgroundColor_7;    // 0x095C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_WidgetBackgroundColor_7;  // 0x096C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SymbolColor_7;            // 0x097C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SubtleColor_7;            // 0x098C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_DecisionButtonColor_7;    // 0x099C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColors_SliderBackgroundColor_7;  // 0x09AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_SetGlobalSettings) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_SetGlobalSettings");
static_assert(sizeof(DisplaySettingsWidgetBP_C_SetGlobalSettings) == 0x0009C0, "Wrong size on DisplaySettingsWidgetBP_C_SetGlobalSettings");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MainFont) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MainFont' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_SmallTitleFont) == 0x000058, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_SmallTitleFont' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MediumTitleFont) == 0x0000B0, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MediumTitleFont' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_LargeTitleFont) == 0x000108, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_LargeTitleFont' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_ValueFont) == 0x000160, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_ValueFont' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_OnlyUppercase) == 0x0001B8, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_OnlyUppercase' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor) == 0x0001BC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor) == 0x0001CC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor) == 0x0001DC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor) == 0x0001EC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor) == 0x0001FC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor) == 0x00020C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor) == 0x00021C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor) == 0x00022C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor) == 0x00023C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_1) == 0x00024C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_1) == 0x00025C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_1) == 0x00026C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_1) == 0x00027C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_1) == 0x00028C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_1) == 0x00029C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_1) == 0x0002AC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_1) == 0x0002BC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_1) == 0x0002CC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_2) == 0x0002DC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_2) == 0x0002EC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_2) == 0x0002FC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_2) == 0x00030C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_2) == 0x00031C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_2) == 0x00032C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_2) == 0x00033C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_2) == 0x00034C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_2) == 0x00035C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MainFont_1) == 0x000370, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MainFont_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_SmallTitleFont_1) == 0x0003C8, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_SmallTitleFont_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MediumTitleFont_1) == 0x000420, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MediumTitleFont_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_LargeTitleFont_1) == 0x000478, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_LargeTitleFont_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_ValueFont_1) == 0x0004D0, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_ValueFont_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_OnlyUppercase_1) == 0x000528, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_OnlyUppercase_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_3) == 0x00052C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_3' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_3) == 0x00053C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_3' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_3) == 0x00054C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_3' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_3) == 0x00055C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_3' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_3) == 0x00056C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_3' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_3) == 0x00057C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_3' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_3) == 0x00058C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_3' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_3) == 0x00059C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_3' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_3) == 0x0005AC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_3' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MainFont_2) == 0x0005C0, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MainFont_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_SmallTitleFont_2) == 0x000618, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_SmallTitleFont_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_MediumTitleFont_2) == 0x000670, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_MediumTitleFont_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_LargeTitleFont_2) == 0x0006C8, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_LargeTitleFont_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_ValueFont_2) == 0x000720, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_ValueFont_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalFonts_OnlyUppercase_2) == 0x000778, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalFonts_OnlyUppercase_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_4) == 0x00077C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_4' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_4) == 0x00078C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_4' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_4) == 0x00079C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_4' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_4) == 0x0007AC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_4' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_4) == 0x0007BC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_4' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_4) == 0x0007CC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_4' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_4) == 0x0007DC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_4' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_4) == 0x0007EC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_4' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_4) == 0x0007FC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_4' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_5) == 0x00080C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_5' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_5) == 0x00081C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_5' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_5) == 0x00082C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_5' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_5) == 0x00083C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_5' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_5) == 0x00084C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_5' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_5) == 0x00085C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_5' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_5) == 0x00086C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_5' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_5) == 0x00087C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_5' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_5) == 0x00088C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_5' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_6) == 0x00089C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_6' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_6) == 0x0008AC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_6' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_6) == 0x0008BC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_6' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_6) == 0x0008CC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_6' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_6) == 0x0008DC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_6' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_6) == 0x0008EC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_6' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_6) == 0x0008FC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_6' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_6) == 0x00090C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_6' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_6) == 0x00091C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_6' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MainColor_7) == 0x00092C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MainColor_7' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightColor_7) == 0x00093C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightColor_7' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_HighlightExtraColor_7) == 0x00094C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_HighlightExtraColor_7' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_MenuBackgroundColor_7) == 0x00095C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_MenuBackgroundColor_7' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_WidgetBackgroundColor_7) == 0x00096C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_WidgetBackgroundColor_7' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SymbolColor_7) == 0x00097C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SymbolColor_7' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SubtleColor_7) == 0x00098C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SubtleColor_7' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_DecisionButtonColor_7) == 0x00099C, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_DecisionButtonColor_7' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetGlobalSettings, CallFunc_GetGlobalColors_SliderBackgroundColor_7) == 0x0009AC, "Member 'DisplaySettingsWidgetBP_C_SetGlobalSettings::CallFunc_GetGlobalColors_SliderBackgroundColor_7' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.SetFrameRatePicker
// 0x0080 (0x0080 - 0x0000)
struct DisplaySettingsWidgetBP_C_SetFrameRatePicker final
{
public:
	float                                         InFrameRate;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FrameRatePickerIndex;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0048(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_SetFrameRatePicker) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_SetFrameRatePicker");
static_assert(sizeof(DisplaySettingsWidgetBP_C_SetFrameRatePicker) == 0x000080, "Wrong size on DisplaySettingsWidgetBP_C_SetFrameRatePicker");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, InFrameRate) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::InFrameRate' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, FrameRatePickerIndex) == 0x000004, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::FrameRatePickerIndex' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, CallFunc_FTrunc_ReturnValue) == 0x000008, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, ___int_Array_Index_Variable) == 0x00000C, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, ___int_Loop_Counter_Variable) == 0x000040, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, CallFunc_Array_Get_Item) == 0x000048, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000070, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, CallFunc_IsNumeric_ReturnValue) == 0x000071, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFrameRatePicker, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'DisplaySettingsWidgetBP_C_SetFrameRatePicker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.DirtyCheck
// 0x0080 (0x0080 - 0x0000)
struct DisplaySettingsWidgetBP_C_DirtyCheck final
{
public:
	bool                                          bIsReallyDirty;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0008(0x0018)()
	int32                                         CallFunc_GetFrameRateIndex_OutIndex;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0028(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0048(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_3;           // 0x0060(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_1;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_DirtyCheck) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_DirtyCheck");
static_assert(sizeof(DisplaySettingsWidgetBP_C_DirtyCheck) == 0x000080, "Wrong size on DisplaySettingsWidgetBP_C_DirtyCheck");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, bIsReallyDirty) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::bIsReallyDirty' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, CallFunc_Conv_FloatToText_ReturnValue) == 0x000008, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, CallFunc_GetFrameRateIndex_OutIndex) == 0x000020, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::CallFunc_GetFrameRateIndex_OutIndex' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000028, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000040, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000048, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, CallFunc_Conv_FloatToText_ReturnValue_3) == 0x000060, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::CallFunc_Conv_FloatToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, CallFunc_EqualEqual_TextText_ReturnValue_1) == 0x000078, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::CallFunc_EqualEqual_TextText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, CallFunc_Conv_IntToBool_ReturnValue) == 0x000079, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x00007A, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007B, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00007C, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_DirtyCheck, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00007D, "Member 'DisplaySettingsWidgetBP_C_DirtyCheck::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.GetSavedDisplaySettings
// 0x0050 (0x0050 - 0x0000)
struct DisplaySettingsWidgetBP_C_GetSavedDisplaySettings final
{
public:
	TArray<class FString>                         CallFunc_GetSupportedScreenResolutions_Resolutions; // 0x0000(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSupportedScreenResolutions_CurrentScreenResolutionIndex; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSupportedScreenResolutions_ReturnValue; // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDisplaySettings_Brightness;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDisplaySettings_FieldOfView;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDisplaySettings_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MinScaleValue; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MaxScaleValue; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVSyncEnabled_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFrameRateLimit_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   CallFunc_GetFullscreenMode_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_GetSavedDisplaySettings");
static_assert(sizeof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings) == 0x000050, "Wrong size on DisplaySettingsWidgetBP_C_GetSavedDisplaySettings");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetSupportedScreenResolutions_Resolutions) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetSupportedScreenResolutions_Resolutions' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetSupportedScreenResolutions_CurrentScreenResolutionIndex) == 0x000010, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetSupportedScreenResolutions_CurrentScreenResolutionIndex' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetSupportedScreenResolutions_ReturnValue) == 0x000014, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetSupportedScreenResolutions_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetDisplaySettings_Brightness) == 0x000018, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetDisplaySettings_Brightness' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetDisplaySettings_FieldOfView) == 0x00001C, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetDisplaySettings_FieldOfView' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetDisplaySettings_ReturnValue) == 0x000020, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetDisplaySettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetGameUserSettings_ReturnValue) == 0x000028, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized) == 0x000030, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue) == 0x000034, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetResolutionScaleInformationEx_MinScaleValue) == 0x000038, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetResolutionScaleInformationEx_MinScaleValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetResolutionScaleInformationEx_MaxScaleValue) == 0x00003C, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetResolutionScaleInformationEx_MaxScaleValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_IsVSyncEnabled_ReturnValue) == 0x000040, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_IsVSyncEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetFrameRateLimit_ReturnValue) == 0x000044, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetFrameRateLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_GetFullscreenMode_ReturnValue) == 0x000048, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_GetFullscreenMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetSavedDisplaySettings, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00004C, "Member 'DisplaySettingsWidgetBP_C_GetSavedDisplaySettings::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.GetFrameRateIndex
// 0x0058 (0x0058 - 0x0000)
struct DisplaySettingsWidgetBP_C_GetFrameRateIndex final
{
public:
	float                                         InFrameRate;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OutIndex;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0008(0x0018)()
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_GetFrameRateIndex) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_GetFrameRateIndex");
static_assert(sizeof(DisplaySettingsWidgetBP_C_GetFrameRateIndex) == 0x000058, "Wrong size on DisplaySettingsWidgetBP_C_GetFrameRateIndex");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetFrameRateIndex, InFrameRate) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_GetFrameRateIndex::InFrameRate' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetFrameRateIndex, OutIndex) == 0x000004, "Member 'DisplaySettingsWidgetBP_C_GetFrameRateIndex::OutIndex' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetFrameRateIndex, CallFunc_Conv_FloatToText_ReturnValue) == 0x000008, "Member 'DisplaySettingsWidgetBP_C_GetFrameRateIndex::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetFrameRateIndex, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'DisplaySettingsWidgetBP_C_GetFrameRateIndex::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetFrameRateIndex, ___int_Array_Index_Variable) == 0x000024, "Member 'DisplaySettingsWidgetBP_C_GetFrameRateIndex::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetFrameRateIndex, ___int_Loop_Counter_Variable) == 0x000028, "Member 'DisplaySettingsWidgetBP_C_GetFrameRateIndex::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetFrameRateIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'DisplaySettingsWidgetBP_C_GetFrameRateIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetFrameRateIndex, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'DisplaySettingsWidgetBP_C_GetFrameRateIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetFrameRateIndex, CallFunc_Array_Get_Item) == 0x000038, "Member 'DisplaySettingsWidgetBP_C_GetFrameRateIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetFrameRateIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'DisplaySettingsWidgetBP_C_GetFrameRateIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_GetFrameRateIndex, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000051, "Member 'DisplaySettingsWidgetBP_C_GetFrameRateIndex::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.SetFieldOfView
// 0x0020 (0x0020 - 0x0000)
struct DisplaySettingsWidgetBP_C_SetFieldOfView final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_SetFieldOfView) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_SetFieldOfView");
static_assert(sizeof(DisplaySettingsWidgetBP_C_SetFieldOfView) == 0x000020, "Wrong size on DisplaySettingsWidgetBP_C_SetFieldOfView");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFieldOfView, InValue) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_SetFieldOfView::InValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFieldOfView, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'DisplaySettingsWidgetBP_C_SetFieldOfView::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFieldOfView, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'DisplaySettingsWidgetBP_C_SetFieldOfView::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFieldOfView, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'DisplaySettingsWidgetBP_C_SetFieldOfView::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_SetFieldOfView, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'DisplaySettingsWidgetBP_C_SetFieldOfView::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct DisplaySettingsWidgetBP_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_PreConstruct) == 0x000001, "Wrong alignment on DisplaySettingsWidgetBP_C_PreConstruct");
static_assert(sizeof(DisplaySettingsWidgetBP_C_PreConstruct) == 0x000001, "Wrong size on DisplaySettingsWidgetBP_C_PreConstruct");
static_assert(offsetof(DisplaySettingsWidgetBP_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.OnNavigationExit
// 0x0010 (0x0010 - 0x0000)
struct DisplaySettingsWidgetBP_C_OnNavigationExit final
{
public:
	class UInteractableMenuWidgetBP_C*            NavigateToMenu;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableMenuWidgetBP_C*            NavigateFromMenu;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_OnNavigationExit) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_OnNavigationExit");
static_assert(sizeof(DisplaySettingsWidgetBP_C_OnNavigationExit) == 0x000010, "Wrong size on DisplaySettingsWidgetBP_C_OnNavigationExit");
static_assert(offsetof(DisplaySettingsWidgetBP_C_OnNavigationExit, NavigateToMenu) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_OnNavigationExit::NavigateToMenu' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_OnNavigationExit, NavigateFromMenu) == 0x000008, "Member 'DisplaySettingsWidgetBP_C_OnNavigationExit::NavigateFromMenu' has a wrong offset!");

// Function DisplaySettingsWidgetBP.DisplaySettingsWidgetBP_C.OnNavigationEnter
// 0x0010 (0x0010 - 0x0000)
struct DisplaySettingsWidgetBP_C_OnNavigationEnter final
{
public:
	class UInteractableMenuWidgetBP_C*            NavigateFromMenu;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_bIsGamepadBeingUsed;                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DisplaySettingsWidgetBP_C_OnNavigationEnter) == 0x000008, "Wrong alignment on DisplaySettingsWidgetBP_C_OnNavigationEnter");
static_assert(sizeof(DisplaySettingsWidgetBP_C_OnNavigationEnter) == 0x000010, "Wrong size on DisplaySettingsWidgetBP_C_OnNavigationEnter");
static_assert(offsetof(DisplaySettingsWidgetBP_C_OnNavigationEnter, NavigateFromMenu) == 0x000000, "Member 'DisplaySettingsWidgetBP_C_OnNavigationEnter::NavigateFromMenu' has a wrong offset!");
static_assert(offsetof(DisplaySettingsWidgetBP_C_OnNavigationEnter, Param_bIsGamepadBeingUsed) == 0x000008, "Member 'DisplaySettingsWidgetBP_C_OnNavigationEnter::Param_bIsGamepadBeingUsed' has a wrong offset!");

}

