#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_ai

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_ai.AnimBP_ai_C.ExecuteUbergraph_AnimBP_ai
// 0x0220 (0x0220 - 0x0000)
struct AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable;                         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable_1;                       // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_IsClosed_Variable_2;                       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Has_Been_Initd_Variable_2;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ai_pawn_ver2_C*                     K2Node_DynamicCast_AsBP_Ai_Pawn_Ver_2;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Has_Been_Initd_Variable_3;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue_2;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_IsClosed_Variable_3;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue_1;       // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue_1;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0xF];                                       // 0x00D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue_2;       // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_IsClosed_Variable_4;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_F_IkFootTrace_Offset;                     // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_F_IkFootTrace_Hit_;                       // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_F_IkFootTrace_Distance;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_IkFootTrace_HitRot;                     // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_F_IkFootTrace_Offset_1;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_F_IkFootTrace_Hit__1;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_F_IkFootTrace_Distance_1;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_F_IkFootTrace_HitRot_1;                   // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E6[0x2];                                      // 0x01E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_4;       // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_2;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Has_Been_Initd_Variable_4;                 // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai) == 0x000010, "Wrong alignment on AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai");
static_assert(sizeof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai) == 0x000220, "Wrong size on AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, EntryPoint) == 0x000000, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Montage_Play_ReturnValue) == 0x000004, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000008, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue) == 0x00000C, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000011, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, ___bool_Has_Been_Initd_Variable) == 0x000012, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::___bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1) == 0x000014, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000018, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, ___bool_IsClosed_Variable) == 0x000019, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::___bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, ___bool_Has_Been_Initd_Variable_1) == 0x00001A, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::___bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, ___bool_IsClosed_Variable_1) == 0x00001B, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::___bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, ___bool_IsClosed_Variable_2) == 0x00001C, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::___bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x000034, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_MakeVector_ReturnValue_1) == 0x000038, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_MakeVector_ReturnValue_2) == 0x000044, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, K2Node_Event_DeltaTimeX) == 0x000050, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000058, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, ___bool_Has_Been_Initd_Variable_2) == 0x000060, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::___bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, K2Node_DynamicCast_AsBP_Ai_Pawn_Ver_2) == 0x000068, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::K2Node_DynamicCast_AsBP_Ai_Pawn_Ver_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Montage_Play_ReturnValue_1) == 0x000074, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, ___bool_Has_Been_Initd_Variable_3) == 0x000078, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::___bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetActorForwardVector_ReturnValue) == 0x00007C, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Add_VectorVector_ReturnValue) == 0x000094, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetVelocity_ReturnValue) == 0x0000A0, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_VSize_ReturnValue) == 0x0000AC, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetMovementComponent_ReturnValue) == 0x0000B0, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_IsFalling_ReturnValue) == 0x0000B8, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Montage_Play_ReturnValue_2) == 0x0000BC, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Montage_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, ___bool_IsClosed_Variable_3) == 0x0000C0, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::___bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetMovementComponent_ReturnValue_1) == 0x0000C8, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetMovementComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_IsFalling_ReturnValue_1) == 0x0000D0, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_IsFalling_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetSocketTransform_ReturnValue) == 0x0000E0, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_BreakTransform_Location) == 0x000110, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_BreakTransform_Rotation) == 0x00011C, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_BreakTransform_Scale) == 0x000128, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_BreakVector_X) == 0x000134, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_BreakVector_Y) == 0x000138, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_BreakVector_Z) == 0x00013C, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000140, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00014C, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetMovementComponent_ReturnValue_2) == 0x000158, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetMovementComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, ___bool_IsClosed_Variable_4) == 0x000160, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::___bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_VSize_ReturnValue_1) == 0x000164, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000168, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00016C, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000170, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000174, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Add_FloatFloat_ReturnValue) == 0x000178, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_FClamp_ReturnValue) == 0x00017C, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_F_IkFootTrace_Offset) == 0x000180, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_F_IkFootTrace_Offset' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_F_IkFootTrace_Hit_) == 0x000184, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_F_IkFootTrace_Hit_' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_F_IkFootTrace_Distance) == 0x000188, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_F_IkFootTrace_Distance' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_F_IkFootTrace_HitRot) == 0x00018C, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_F_IkFootTrace_HitRot' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_FClamp_ReturnValue_1) == 0x000198, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Round_ReturnValue) == 0x00019C, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_FInterpTo_ReturnValue) == 0x0001A0, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001A4, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001A8, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001AC, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0001B0, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_F_IkFootTrace_Offset_1) == 0x0001B4, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_F_IkFootTrace_Offset_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_F_IkFootTrace_Hit__1) == 0x0001B8, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_F_IkFootTrace_Hit__1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_F_IkFootTrace_Distance_1) == 0x0001BC, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_F_IkFootTrace_Distance_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_F_IkFootTrace_HitRot_1) == 0x0001C0, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_F_IkFootTrace_HitRot_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Round_ReturnValue_1) == 0x0001CC, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0001D0, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0001D4, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_BooleanOR_ReturnValue) == 0x0001D8, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0001DC, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0001E0, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0001E4, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_BooleanOR_ReturnValue_1) == 0x0001E5, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0001E8, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x0001EC, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_RInterpTo_ReturnValue) == 0x0001F0, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_RInterpTo_ReturnValue_1) == 0x0001FC, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x000208, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_FInterpTo_ReturnValue_1) == 0x00020C, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_GetWorldDeltaSeconds_ReturnValue_4) == 0x000210, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_GetWorldDeltaSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_FInterpTo_ReturnValue_2) == 0x000214, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000218, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, ___bool_Has_Been_Initd_Variable_4) == 0x000219, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::___bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00021A, "Member 'AnimBP_ai_C_ExecuteUbergraph_AnimBP_ai::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function AnimBP_ai.AnimBP_ai_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AnimBP_ai_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_ai_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AnimBP_ai_C_BlueprintUpdateAnimation");
static_assert(sizeof(AnimBP_ai_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AnimBP_ai_C_BlueprintUpdateAnimation");
static_assert(offsetof(AnimBP_ai_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AnimBP_ai_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AnimBP_ai.AnimBP_ai_C.F_RotateToVelocityVector
// 0x0060 (0x0060 - 0x0000)
struct AnimBP_ai_C_F_RotateToVelocityVector final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_ai_C_F_RotateToVelocityVector) == 0x000004, "Wrong alignment on AnimBP_ai_C_F_RotateToVelocityVector");
static_assert(sizeof(AnimBP_ai_C_F_RotateToVelocityVector) == 0x000060, "Wrong size on AnimBP_ai_C_F_RotateToVelocityVector");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x00000C, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_MakeRotFromX_ReturnValue) == 0x000024, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_BreakRotator_Roll_1) == 0x000030, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_BreakRotator_Pitch_1) == 0x000034, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_BreakRotator_Yaw_1) == 0x000038, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_MakeRotator_ReturnValue) == 0x00003C, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x000048, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00004C, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_RInterpTo_ReturnValue) == 0x000050, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToVelocityVector, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00005C, "Member 'AnimBP_ai_C_F_RotateToVelocityVector::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function AnimBP_ai.AnimBP_ai_C.F_SetHeadRotation
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_ai_C_F_SetHeadRotation final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_ai_C_F_SetHeadRotation) == 0x000004, "Wrong alignment on AnimBP_ai_C_F_SetHeadRotation");
static_assert(sizeof(AnimBP_ai_C_F_SetHeadRotation) == 0x000010, "Wrong size on AnimBP_ai_C_F_SetHeadRotation");
static_assert(offsetof(AnimBP_ai_C_F_SetHeadRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'AnimBP_ai_C_F_SetHeadRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_SetHeadRotation, CallFunc_RInterpTo_ReturnValue) == 0x000004, "Member 'AnimBP_ai_C_F_SetHeadRotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");

// Function AnimBP_ai.AnimBP_ai_C.F_RotateToController
// 0x0044 (0x0044 - 0x0000)
struct AnimBP_ai_C_F_RotateToController final
{
public:
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_ai_C_F_RotateToController) == 0x000004, "Wrong alignment on AnimBP_ai_C_F_RotateToController");
static_assert(sizeof(AnimBP_ai_C_F_RotateToController) == 0x000044, "Wrong size on AnimBP_ai_C_F_RotateToController");
static_assert(offsetof(AnimBP_ai_C_F_RotateToController, CallFunc_BreakRotator_Roll) == 0x000000, "Member 'AnimBP_ai_C_F_RotateToController::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToController, CallFunc_BreakRotator_Pitch) == 0x000004, "Member 'AnimBP_ai_C_F_RotateToController::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToController, CallFunc_BreakRotator_Yaw) == 0x000008, "Member 'AnimBP_ai_C_F_RotateToController::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToController, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00000C, "Member 'AnimBP_ai_C_F_RotateToController::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToController, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'AnimBP_ai_C_F_RotateToController::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToController, CallFunc_BreakRotator_Roll_1) == 0x00001C, "Member 'AnimBP_ai_C_F_RotateToController::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToController, CallFunc_BreakRotator_Pitch_1) == 0x000020, "Member 'AnimBP_ai_C_F_RotateToController::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToController, CallFunc_BreakRotator_Yaw_1) == 0x000024, "Member 'AnimBP_ai_C_F_RotateToController::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToController, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'AnimBP_ai_C_F_RotateToController::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToController, CallFunc_RInterpTo_ReturnValue) == 0x000034, "Member 'AnimBP_ai_C_F_RotateToController::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToController, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x000040, "Member 'AnimBP_ai_C_F_RotateToController::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_RotateToController, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000041, "Member 'AnimBP_ai_C_F_RotateToController::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function AnimBP_ai.AnimBP_ai_C.F_ComputeAlphaSeconds
// 0x0008 (0x0008 - 0x0000)
struct AnimBP_ai_C_F_ComputeAlphaSeconds final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_ai_C_F_ComputeAlphaSeconds) == 0x000004, "Wrong alignment on AnimBP_ai_C_F_ComputeAlphaSeconds");
static_assert(sizeof(AnimBP_ai_C_F_ComputeAlphaSeconds) == 0x000008, "Wrong size on AnimBP_ai_C_F_ComputeAlphaSeconds");
static_assert(offsetof(AnimBP_ai_C_F_ComputeAlphaSeconds, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'AnimBP_ai_C_F_ComputeAlphaSeconds::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_ComputeAlphaSeconds, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'AnimBP_ai_C_F_ComputeAlphaSeconds::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function AnimBP_ai.AnimBP_ai_C.F_IkFootTrace
// 0x0340 (0x0340 - 0x0000)
struct AnimBP_ai_C_F_IkFootTrace final
{
public:
	float                                         TraceDistance;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket;                                            // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerPosition;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Offset;                                            // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit_;                                              // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Distance;                                          // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HitRot;                                            // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ___object_Variable;                                // 0x0090(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         ___object_Variable_1;                              // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00B0(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x01F8(0x008C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0286(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_287[0x1];                                      // 0x0287(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x029C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue_1;                   // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_ai_C_F_IkFootTrace) == 0x000008, "Wrong alignment on AnimBP_ai_C_F_IkFootTrace");
static_assert(sizeof(AnimBP_ai_C_F_IkFootTrace) == 0x000340, "Wrong size on AnimBP_ai_C_F_IkFootTrace");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, TraceDistance) == 0x000000, "Member 'AnimBP_ai_C_F_IkFootTrace::TraceDistance' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, Socket) == 0x000004, "Member 'AnimBP_ai_C_F_IkFootTrace::Socket' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, PlayerPosition) == 0x00000C, "Member 'AnimBP_ai_C_F_IkFootTrace::PlayerPosition' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, Offset) == 0x000018, "Member 'AnimBP_ai_C_F_IkFootTrace::Offset' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, Hit_) == 0x00001C, "Member 'AnimBP_ai_C_F_IkFootTrace::Hit_' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, Distance) == 0x000020, "Member 'AnimBP_ai_C_F_IkFootTrace::Distance' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, HitRot) == 0x000024, "Member 'AnimBP_ai_C_F_IkFootTrace::HitRot' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_X) == 0x000030, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_Y) == 0x000034, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_Z) == 0x000038, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_X_1) == 0x000048, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_Y_1) == 0x00004C, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_Z_1) == 0x000050, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_GetSocketLocation_ReturnValue) == 0x000054, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_X_2) == 0x000064, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_Y_2) == 0x000068, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_Z_2) == 0x00006C, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000070, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_MakeVector_ReturnValue) == 0x000074, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_MakeVector_ReturnValue_1) == 0x000080, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, ___object_Variable) == 0x000090, "Member 'AnimBP_ai_C_F_IkFootTrace::___object_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, ___object_Variable_1) == 0x0000A0, "Member 'AnimBP_ai_C_F_IkFootTrace::___object_Variable_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_LineTraceSingle_OutHit) == 0x0000B0, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_LineTraceSingle_ReturnValue) == 0x00013C, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000140, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000144, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000145, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_Time) == 0x000148, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_Distance) == 0x00014C, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_Location) == 0x000150, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x00015C, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_Normal) == 0x000168, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000174, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_FaceIndex) == 0x0001A4, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_TraceStart) == 0x0001A8, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_TraceEnd) == 0x0001B4, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0001C0, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_X_3) == 0x0001C4, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_Y_3) == 0x0001C8, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_Z_3) == 0x0001CC, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_MakeVector_ReturnValue_2) == 0x0001D0, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0001DC, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0001E0, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0001E4, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0001E8, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_MakeVector_ReturnValue_3) == 0x0001EC, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_LineTraceSingle_OutHit_1) == 0x0001F8, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000284, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000285, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000286, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_Time_1) == 0x000288, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_Distance_1) == 0x00028C, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_Location_1) == 0x000290, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_ImpactPoint_1) == 0x00029C, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_Normal_1) == 0x0002A8, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0002B4, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_PhysMat_1) == 0x0002C0, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_HitActor_1) == 0x0002C8, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_HitComponent_1) == 0x0002D0, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_HitBoneName_1) == 0x0002D8, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_HitItem_1) == 0x0002E0, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_FaceIndex_1) == 0x0002E4, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_TraceStart_1) == 0x0002E8, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakHitResult_TraceEnd_1) == 0x0002F4, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000300, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_X_4) == 0x00030C, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_Y_4) == 0x000310, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_BreakVector_Z_4) == 0x000314, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_VSize_ReturnValue) == 0x000318, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_DegAtan2_ReturnValue) == 0x00031C, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000320, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_DegAtan2_ReturnValue_1) == 0x000324, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_SelectFloat_ReturnValue) == 0x000328, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00032C, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ai_C_F_IkFootTrace, CallFunc_MakeRotator_ReturnValue) == 0x000330, "Member 'AnimBP_ai_C_F_IkFootTrace::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function AnimBP_ai.AnimBP_ai_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_ai_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBP_ai_C_AnimGraph) == 0x000008, "Wrong alignment on AnimBP_ai_C_AnimGraph");
static_assert(sizeof(AnimBP_ai_C_AnimGraph) == 0x000010, "Wrong size on AnimBP_ai_C_AnimGraph");
static_assert(offsetof(AnimBP_ai_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'AnimBP_ai_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

