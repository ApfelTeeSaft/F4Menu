#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CannonFireTrapTrigger_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CannonFireTrapTrigger_BP.CannonFireTrapTrigger_BP_C
// 0x0048 (0x0268 - 0x0220)
class ACannonFireTrapTrigger_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Overlap;                                           // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tag;                                               // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Sphere_Radius;                                     // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ALTF4_Pawn_SoloPlay_C*              ALTF4_PawnSP;                                      // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ALTF4_Chick_Pawn_C*                 ALTF4_PawnChick;                                   // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USteamMulti_GameInstance_C*             ALTF4_GI;                                          // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active_;                                           // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_CannonFireTrapTrigger_BP(int32 EntryPoint);
	void CheckPlayer();
	void TrapSignal_Reset();
	void ReceiveBeginPlay();
	void TrapOFF_Signal();
	void TrapON_Signal();
	void BndEvt__CannonFireTrapTrigger_BP_Overlap_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__CannonFireTrigger_BP_Overlap_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CannonFireTrapTrigger_BP_C">();
	}
	static class ACannonFireTrapTrigger_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACannonFireTrapTrigger_BP_C>();
	}
};
static_assert(alignof(ACannonFireTrapTrigger_BP_C) == 0x000008, "Wrong alignment on ACannonFireTrapTrigger_BP_C");
static_assert(sizeof(ACannonFireTrapTrigger_BP_C) == 0x000268, "Wrong size on ACannonFireTrapTrigger_BP_C");
static_assert(offsetof(ACannonFireTrapTrigger_BP_C, UberGraphFrame) == 0x000220, "Member 'ACannonFireTrapTrigger_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACannonFireTrapTrigger_BP_C, Overlap) == 0x000228, "Member 'ACannonFireTrapTrigger_BP_C::Overlap' has a wrong offset!");
static_assert(offsetof(ACannonFireTrapTrigger_BP_C, DefaultSceneRoot) == 0x000230, "Member 'ACannonFireTrapTrigger_BP_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ACannonFireTrapTrigger_BP_C, Tag) == 0x000238, "Member 'ACannonFireTrapTrigger_BP_C::Tag' has a wrong offset!");
static_assert(offsetof(ACannonFireTrapTrigger_BP_C, Sphere_Radius) == 0x000240, "Member 'ACannonFireTrapTrigger_BP_C::Sphere_Radius' has a wrong offset!");
static_assert(offsetof(ACannonFireTrapTrigger_BP_C, ALTF4_PawnSP) == 0x000248, "Member 'ACannonFireTrapTrigger_BP_C::ALTF4_PawnSP' has a wrong offset!");
static_assert(offsetof(ACannonFireTrapTrigger_BP_C, ALTF4_PawnChick) == 0x000250, "Member 'ACannonFireTrapTrigger_BP_C::ALTF4_PawnChick' has a wrong offset!");
static_assert(offsetof(ACannonFireTrapTrigger_BP_C, ALTF4_GI) == 0x000258, "Member 'ACannonFireTrapTrigger_BP_C::ALTF4_GI' has a wrong offset!");
static_assert(offsetof(ACannonFireTrapTrigger_BP_C, Active_) == 0x000260, "Member 'ACannonFireTrapTrigger_BP_C::Active_' has a wrong offset!");

}

