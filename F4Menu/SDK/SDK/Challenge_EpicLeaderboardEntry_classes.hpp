#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Challenge_EpicLeaderboardEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EpicLeaderboard_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Challenge_EpicLeaderboardEntry.Challenge_EpicLeaderboardEntry_C
// 0x0110 (0x0370 - 0x0260)
class UChallenge_EpicLeaderboardEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Background;                                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundPadding;                                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Divider;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Flag;                                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             NameText;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PosText;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ScoreText;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TagText;                                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               FlagMaterial;                                      // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Countries;                                         // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FEpicLeaderboardEntry                  ScoreEntry;                                        // 0x02C0(0x0098)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Highlight;                                         // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USteamMulti_GameInstance_C*             ALTF4_GI;                                          // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Challenge_;                                        // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Challenge_EpicLeaderboardEntry(int32 EntryPoint);
	void Construct();
	void InitFields(bool Param_Highlight, const struct FEpicLeaderboardEntry& Param_ScoreEntry);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Challenge_EpicLeaderboardEntry_C">();
	}
	static class UChallenge_EpicLeaderboardEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChallenge_EpicLeaderboardEntry_C>();
	}
};
static_assert(alignof(UChallenge_EpicLeaderboardEntry_C) == 0x000008, "Wrong alignment on UChallenge_EpicLeaderboardEntry_C");
static_assert(sizeof(UChallenge_EpicLeaderboardEntry_C) == 0x000370, "Wrong size on UChallenge_EpicLeaderboardEntry_C");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, UberGraphFrame) == 0x000260, "Member 'UChallenge_EpicLeaderboardEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, Background) == 0x000268, "Member 'UChallenge_EpicLeaderboardEntry_C::Background' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, BackgroundPadding) == 0x000270, "Member 'UChallenge_EpicLeaderboardEntry_C::BackgroundPadding' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, Divider) == 0x000278, "Member 'UChallenge_EpicLeaderboardEntry_C::Divider' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, Flag) == 0x000280, "Member 'UChallenge_EpicLeaderboardEntry_C::Flag' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, NameText) == 0x000288, "Member 'UChallenge_EpicLeaderboardEntry_C::NameText' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, PosText) == 0x000290, "Member 'UChallenge_EpicLeaderboardEntry_C::PosText' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, ScoreText) == 0x000298, "Member 'UChallenge_EpicLeaderboardEntry_C::ScoreText' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, TagText) == 0x0002A0, "Member 'UChallenge_EpicLeaderboardEntry_C::TagText' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, FlagMaterial) == 0x0002A8, "Member 'UChallenge_EpicLeaderboardEntry_C::FlagMaterial' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, Countries) == 0x0002B0, "Member 'UChallenge_EpicLeaderboardEntry_C::Countries' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, ScoreEntry) == 0x0002C0, "Member 'UChallenge_EpicLeaderboardEntry_C::ScoreEntry' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, Highlight) == 0x000358, "Member 'UChallenge_EpicLeaderboardEntry_C::Highlight' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, ALTF4_GI) == 0x000360, "Member 'UChallenge_EpicLeaderboardEntry_C::ALTF4_GI' has a wrong offset!");
static_assert(offsetof(UChallenge_EpicLeaderboardEntry_C, Challenge_) == 0x000368, "Member 'UChallenge_EpicLeaderboardEntry_C::Challenge_' has a wrong offset!");

}

