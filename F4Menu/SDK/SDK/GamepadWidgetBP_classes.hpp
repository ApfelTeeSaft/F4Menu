#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamepadWidgetBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GlobalInteractableUserWidget_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GamepadWidgetBP.GamepadWidgetBP_C
// 0x0080 (0x0678 - 0x05F8)
class UGamepadWidgetBP_C final : public UGlobalInteractableUserWidget_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GamepadWidgetBP_C;                  // 0x05F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient, UObjectWrapper)
	class UImage*                                 Gamepad_RedLinesImage;                             // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           GamepadCanvasPanel;                                // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GamepadImage;                                      // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGamepadKey_C*                          GamepadKey_FaceBtnBottom;                          // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGamepadKey_C*                          GamepadKey_FaceBtnLeft;                            // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGamepadKey_C*                          GamepadKey_FaceBtnTop;                             // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGamepadKey_C*                          GamepadKey_LeftTrigger;                            // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGamepadKey_Move_C*                     GamepadKey_Move;                                   // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGamepadKey_C*                          GamepadKey_RightTrigger;                           // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGamepadKey_C*                          GamepadKey_SpecialLeft;                            // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGamepadKey_C*                          GamepadKey_SpecialRight;                           // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGamepadKeyPOV_C*                       GamepadKeyPOV;                                     // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GamepadLinesImage;                                 // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UGamepadKey_C*>                  GamepadKeys;                                       // 0x0668(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_GamepadWidgetBP(int32 EntryPoint);
	void OnGlobalSettingsApply();
	void PreConstruct(bool IsDesignTime);
	void SetupGamepadKeys();
	void SetGlobalSettings();
	void SetGamepadBindingText(const class FText& InBindingName, const struct FKey& InSelectedKey, const struct FKey& InLastSelectedKey);
	void ResetGamepadVisualization();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GamepadWidgetBP_C">();
	}
	static class UGamepadWidgetBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGamepadWidgetBP_C>();
	}
};
static_assert(alignof(UGamepadWidgetBP_C) == 0x000008, "Wrong alignment on UGamepadWidgetBP_C");
static_assert(sizeof(UGamepadWidgetBP_C) == 0x000678, "Wrong size on UGamepadWidgetBP_C");
static_assert(offsetof(UGamepadWidgetBP_C, UberGraphFrame_GamepadWidgetBP_C) == 0x0005F8, "Member 'UGamepadWidgetBP_C::UberGraphFrame_GamepadWidgetBP_C' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, Gamepad_RedLinesImage) == 0x000600, "Member 'UGamepadWidgetBP_C::Gamepad_RedLinesImage' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadCanvasPanel) == 0x000608, "Member 'UGamepadWidgetBP_C::GamepadCanvasPanel' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadImage) == 0x000610, "Member 'UGamepadWidgetBP_C::GamepadImage' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadKey_FaceBtnBottom) == 0x000618, "Member 'UGamepadWidgetBP_C::GamepadKey_FaceBtnBottom' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadKey_FaceBtnLeft) == 0x000620, "Member 'UGamepadWidgetBP_C::GamepadKey_FaceBtnLeft' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadKey_FaceBtnTop) == 0x000628, "Member 'UGamepadWidgetBP_C::GamepadKey_FaceBtnTop' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadKey_LeftTrigger) == 0x000630, "Member 'UGamepadWidgetBP_C::GamepadKey_LeftTrigger' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadKey_Move) == 0x000638, "Member 'UGamepadWidgetBP_C::GamepadKey_Move' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadKey_RightTrigger) == 0x000640, "Member 'UGamepadWidgetBP_C::GamepadKey_RightTrigger' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadKey_SpecialLeft) == 0x000648, "Member 'UGamepadWidgetBP_C::GamepadKey_SpecialLeft' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadKey_SpecialRight) == 0x000650, "Member 'UGamepadWidgetBP_C::GamepadKey_SpecialRight' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadKeyPOV) == 0x000658, "Member 'UGamepadWidgetBP_C::GamepadKeyPOV' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadLinesImage) == 0x000660, "Member 'UGamepadWidgetBP_C::GamepadLinesImage' has a wrong offset!");
static_assert(offsetof(UGamepadWidgetBP_C, GamepadKeys) == 0x000668, "Member 'UGamepadWidgetBP_C::GamepadKeys' has a wrong offset!");

}

