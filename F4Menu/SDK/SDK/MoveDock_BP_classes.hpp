#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MoveDock_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MoveDock_BP.MoveDock_BP_C
// 0x0060 (0x0280 - 0x0220)
class AMoveDock_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Rota_Root;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WagonWheel02;                                   // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Dock_A_VarB_mdl;                                   // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         _____0_Alpha_BEA2D2B745F96CD624D061B65083854B;     // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            _____0__Direction_BEA2D2B745F96CD624D061B65083854B; // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ___x_0;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Rota___Alpha_E6B31AC0421D2FDA91739F9E24E55B49;     // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	ETimelineDirection                            Rota____Direction_E6B31AC0421D2FDA91739F9E24E55B49; // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Rota__;                                            // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FRotator                               DockDefalutRotation;                               // 0x0260(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               DockActiveRotation;                                // 0x026C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         RotationValue;                                     // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active_;                                           // 0x027C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MoveDock_BP(int32 EntryPoint);
	void DockStop();
	void DockMove__();
	void ReceiveBeginPlay();
	void ___x_0__UpdateFunc();
	void ___x_0__FinishedFunc();
	void Rota____UpdateFunc();
	void Rota____FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MoveDock_BP_C">();
	}
	static class AMoveDock_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMoveDock_BP_C>();
	}
};
static_assert(alignof(AMoveDock_BP_C) == 0x000008, "Wrong alignment on AMoveDock_BP_C");
static_assert(sizeof(AMoveDock_BP_C) == 0x000280, "Wrong size on AMoveDock_BP_C");
static_assert(offsetof(AMoveDock_BP_C, UberGraphFrame) == 0x000220, "Member 'AMoveDock_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, Rota_Root) == 0x000228, "Member 'AMoveDock_BP_C::Rota_Root' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, SM_WagonWheel02) == 0x000230, "Member 'AMoveDock_BP_C::SM_WagonWheel02' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, Dock_A_VarB_mdl) == 0x000238, "Member 'AMoveDock_BP_C::Dock_A_VarB_mdl' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, _____0_Alpha_BEA2D2B745F96CD624D061B65083854B) == 0x000240, "Member 'AMoveDock_BP_C::_____0_Alpha_BEA2D2B745F96CD624D061B65083854B' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, _____0__Direction_BEA2D2B745F96CD624D061B65083854B) == 0x000244, "Member 'AMoveDock_BP_C::_____0__Direction_BEA2D2B745F96CD624D061B65083854B' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, ___x_0) == 0x000248, "Member 'AMoveDock_BP_C::___x_0' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, Rota___Alpha_E6B31AC0421D2FDA91739F9E24E55B49) == 0x000250, "Member 'AMoveDock_BP_C::Rota___Alpha_E6B31AC0421D2FDA91739F9E24E55B49' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, Rota____Direction_E6B31AC0421D2FDA91739F9E24E55B49) == 0x000254, "Member 'AMoveDock_BP_C::Rota____Direction_E6B31AC0421D2FDA91739F9E24E55B49' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, Rota__) == 0x000258, "Member 'AMoveDock_BP_C::Rota__' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, DockDefalutRotation) == 0x000260, "Member 'AMoveDock_BP_C::DockDefalutRotation' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, DockActiveRotation) == 0x00026C, "Member 'AMoveDock_BP_C::DockActiveRotation' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, RotationValue) == 0x000278, "Member 'AMoveDock_BP_C::RotationValue' has a wrong offset!");
static_assert(offsetof(AMoveDock_BP_C, Active_) == 0x00027C, "Member 'AMoveDock_BP_C::Active_' has a wrong offset!");

}

