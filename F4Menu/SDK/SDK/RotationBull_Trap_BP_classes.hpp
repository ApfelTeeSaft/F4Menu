#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RotationBull_Trap_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass RotationBull_Trap_BP.RotationBull_Trap_BP_C
// 0x0088 (0x02A8 - 0x0220)
class ARotationBull_Trap_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Bull_Hit_Collision1;                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Nine______Cue;                                     // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Bull_Hit_Collision;                                // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   bull_bdy;                                          // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             PoleRotating;                                      // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Spike_bdy1;                                        // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Spike_bdy;                                         // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Root;                                              // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       RotaRoot;                                          // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             WheelRotating_F;                                   // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             WheelRotating_B;                                   // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   B_wheel;                                           // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   F_wheel;                                           // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               WheelRotation_Rate;                                // 0x0290(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               PoleRotation_Rate;                                 // 0x029C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_RotationBull_Trap_BP(int32 EntryPoint);
	void BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision1_K2Node_ComponentBoundEvent_2_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void BndEvt__RotationBull_Trap_BP_Bull_Hit_Collision_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Stop();
	void Active();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RotationBull_Trap_BP_C">();
	}
	static class ARotationBull_Trap_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARotationBull_Trap_BP_C>();
	}
};
static_assert(alignof(ARotationBull_Trap_BP_C) == 0x000008, "Wrong alignment on ARotationBull_Trap_BP_C");
static_assert(sizeof(ARotationBull_Trap_BP_C) == 0x0002A8, "Wrong size on ARotationBull_Trap_BP_C");
static_assert(offsetof(ARotationBull_Trap_BP_C, UberGraphFrame) == 0x000220, "Member 'ARotationBull_Trap_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, Bull_Hit_Collision1) == 0x000228, "Member 'ARotationBull_Trap_BP_C::Bull_Hit_Collision1' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, Nine______Cue) == 0x000230, "Member 'ARotationBull_Trap_BP_C::Nine______Cue' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, Bull_Hit_Collision) == 0x000238, "Member 'ARotationBull_Trap_BP_C::Bull_Hit_Collision' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, bull_bdy) == 0x000240, "Member 'ARotationBull_Trap_BP_C::bull_bdy' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, PoleRotating) == 0x000248, "Member 'ARotationBull_Trap_BP_C::PoleRotating' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, Spike_bdy1) == 0x000250, "Member 'ARotationBull_Trap_BP_C::Spike_bdy1' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, Spike_bdy) == 0x000258, "Member 'ARotationBull_Trap_BP_C::Spike_bdy' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, Root) == 0x000260, "Member 'ARotationBull_Trap_BP_C::Root' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, RotaRoot) == 0x000268, "Member 'ARotationBull_Trap_BP_C::RotaRoot' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, WheelRotating_F) == 0x000270, "Member 'ARotationBull_Trap_BP_C::WheelRotating_F' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, WheelRotating_B) == 0x000278, "Member 'ARotationBull_Trap_BP_C::WheelRotating_B' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, B_wheel) == 0x000280, "Member 'ARotationBull_Trap_BP_C::B_wheel' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, F_wheel) == 0x000288, "Member 'ARotationBull_Trap_BP_C::F_wheel' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, WheelRotation_Rate) == 0x000290, "Member 'ARotationBull_Trap_BP_C::WheelRotation_Rate' has a wrong offset!");
static_assert(offsetof(ARotationBull_Trap_BP_C, PoleRotation_Rate) == 0x00029C, "Member 'ARotationBull_Trap_BP_C::PoleRotation_Rate' has a wrong offset!");

}

