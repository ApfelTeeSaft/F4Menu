#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Egg_shot_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Egg_shot_BP.Egg_shot_BP_C
// 0x0040 (0x0260 - 0x0220)
class AEgg_shot_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Egg_low;                                           // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadialForceComponent*                  Expore;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ___;                                               // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NewVar_0;                                          // 0x0259(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Egg_shot_BP(int32 EntryPoint);
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_6_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Homing(class AStaticMeshActor* Set_target);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Egg_shot_BP_C">();
	}
	static class AEgg_shot_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEgg_shot_BP_C>();
	}
};
static_assert(alignof(AEgg_shot_BP_C) == 0x000008, "Wrong alignment on AEgg_shot_BP_C");
static_assert(sizeof(AEgg_shot_BP_C) == 0x000260, "Wrong size on AEgg_shot_BP_C");
static_assert(offsetof(AEgg_shot_BP_C, UberGraphFrame) == 0x000220, "Member 'AEgg_shot_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AEgg_shot_BP_C, Egg_low) == 0x000228, "Member 'AEgg_shot_BP_C::Egg_low' has a wrong offset!");
static_assert(offsetof(AEgg_shot_BP_C, Arrow) == 0x000230, "Member 'AEgg_shot_BP_C::Arrow' has a wrong offset!");
static_assert(offsetof(AEgg_shot_BP_C, Sphere) == 0x000238, "Member 'AEgg_shot_BP_C::Sphere' has a wrong offset!");
static_assert(offsetof(AEgg_shot_BP_C, RotatingMovement) == 0x000240, "Member 'AEgg_shot_BP_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AEgg_shot_BP_C, Expore) == 0x000248, "Member 'AEgg_shot_BP_C::Expore' has a wrong offset!");
static_assert(offsetof(AEgg_shot_BP_C, ProjectileMovement) == 0x000250, "Member 'AEgg_shot_BP_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(AEgg_shot_BP_C, ___) == 0x000258, "Member 'AEgg_shot_BP_C::___' has a wrong offset!");
static_assert(offsetof(AEgg_shot_BP_C, NewVar_0) == 0x000259, "Member 'AEgg_shot_BP_C::NewVar_0' has a wrong offset!");

}

